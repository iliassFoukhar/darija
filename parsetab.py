
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL BREAK CHAR CONSTANT CONTINUE DIVIDE ELSE EQUALEQUAL EQUALS FALSE FLOATTYPE FLOAT_CONST FOR GTH GTHOREQUAL ID IF INT INT_CONST LBRACE LPAREN LTH LTHOREQUAL MINUS MODULO NOTEQUAL NUMBER PLUS PRINT RBRACE RETURN RPAREN SEMICOL SIZEOF STRING TIMES TRUE UNION VAR_TYPE VOID WHILE\n    statements : statements statement\n    \n    statements : statement\n    \n    print_statement : PRINT LPAREN expression RPAREN SEMICOL\n                    | PRINT LPAREN STRING RPAREN SEMICOL  \n    statement : expression SEMICOL\n                 | while_statement\n                 | for_statement\n                 | if_statement\n                 | comparison\n                 | bool_comparison\n                 | var_statement\n                 | var_assign\n                 | var_inc\n                 | var_dec\n                 | print_statement\n                 \n    var_assign : ID EQUALS ID SEMICOL\n    \n    var_assign : ID EQUALS STRING SEMICOL\n               | ID EQUALS NUMBER SEMICOL\n               | ID EQUALS TRUE SEMICOL\n               | ID EQUALS FALSE SEMICOL\n    \n    var_inc : ID PLUS PLUS SEMICOL\n    \n    var_dec : ID MINUS MINUS SEMICOL\n    \n    var_statement : CHAR ID EQUALS STRING SEMICOL\n                  | FLOATTYPE ID EQUALS NUMBER SEMICOL\n                  | INT ID EQUALS NUMBER SEMICOL\n                  | BOOL ID EQUALS TRUE SEMICOL\n                  | BOOL ID EQUALS FALSE SEMICOL\n    \n    expression : ID\n    term : ID\n    factor : ID\n    \n    comparison : expression GTH expression\n                  | expression LTH expression\n                  | expression GTHOREQUAL expression\n                  | expression LTHOREQUAL expression\n                  | expression EQUALEQUAL expression\n                  | expression NOTEQUAL expression\n    \n        bool_comparison : ID EQUALEQUAL ID\n                        | ID EQUALEQUAL TRUE\n                        | ID EQUALEQUAL FALSE\n                        | ID NOTEQUAL ID\n                        | ID NOTEQUAL TRUE\n                        | ID NOTEQUAL FALSE\n    if_statement : IF LPAREN comparison RPAREN LBRACE statements RBRACE\n        if_statement : IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n    \n        while_statement : WHILE LPAREN comparison RPAREN LBRACE statements RBRACE\n                        | WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE\n                        | WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE\n    \n        for_statement : FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE\n    expression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term MODULO factorterm : factorfactor : NUMBERfactor : LPAREN expression RPARENempty :'
    
_lr_action_items = {'ID':([0,1,2,4,5,6,7,8,9,10,11,12,13,15,17,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,47,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,86,94,95,96,97,98,99,100,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,135,136,138,139,140,141,142,],[14,14,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,47,50,51,-56,52,53,-55,-1,-5,56,56,47,47,47,47,47,47,64,67,70,78,78,78,47,-28,47,47,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,47,-16,-17,-18,-19,-20,-21,-22,14,14,14,129,14,-23,-24,-25,-26,-27,-3,-4,14,14,14,14,-45,-46,-47,-43,14,14,14,-48,14,-44,]),'WHILE':([0,1,2,4,5,6,7,8,9,10,11,12,13,15,22,26,27,28,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,94,95,96,97,98,99,100,113,114,115,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,135,136,138,139,140,141,142,],[16,16,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,-56,-55,-1,-5,-28,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,-16,-17,-18,-19,-20,-21,-22,16,16,16,16,-23,-24,-25,-26,-27,-3,-4,16,16,16,16,-45,-46,-47,-43,16,16,16,-48,16,-44,]),'FOR':([0,1,2,4,5,6,7,8,9,10,11,12,13,15,22,26,27,28,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,94,95,96,97,98,99,100,113,114,115,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,135,136,138,139,140,141,142,],[18,18,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,-56,-55,-1,-5,-28,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,-16,-17,-18,-19,-20,-21,-22,18,18,18,18,-23,-24,-25,-26,-27,-3,-4,18,18,18,18,-45,-46,-47,-43,18,18,18,-48,18,-44,]),'IF':([0,1,2,4,5,6,7,8,9,10,11,12,13,15,22,26,27,28,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,94,95,96,97,98,99,100,113,114,115,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,135,136,138,139,140,141,142,],[19,19,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,-56,-55,-1,-5,-28,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,-16,-17,-18,-19,-20,-21,-22,19,19,19,19,-23,-24,-25,-26,-27,-3,-4,19,19,19,19,-45,-46,-47,-43,19,19,19,-48,19,-44,]),'CHAR':([0,1,2,4,5,6,7,8,9,10,11,12,13,15,22,26,27,28,47,48,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,94,95,96,97,98,99,100,113,114,115,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,135,136,138,139,140,141,142,],[20,20,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,-56,-55,-1,-5,-28,20,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,-16,-17,-18,-19,-20,-21,-22,20,20,20,20,-23,-24,-25,-26,-27,-3,-4,20,20,20,20,-45,-46,-47,-43,20,20,20,-48,20,-44,]),'FLOATTYPE':([0,1,2,4,5,6,7,8,9,10,11,12,13,15,22,26,27,28,47,48,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,94,95,96,97,98,99,100,113,114,115,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,135,136,138,139,140,141,142,],[21,21,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,-56,-55,-1,-5,-28,21,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,-16,-17,-18,-19,-20,-21,-22,21,21,21,21,-23,-24,-25,-26,-27,-3,-4,21,21,21,21,-45,-46,-47,-43,21,21,21,-48,21,-44,]),'INT':([0,1,2,4,5,6,7,8,9,10,11,12,13,15,22,26,27,28,47,48,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,94,95,96,97,98,99,100,113,114,115,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,135,136,138,139,140,141,142,],[23,23,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,-56,-55,-1,-5,-28,23,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,-16,-17,-18,-19,-20,-21,-22,23,23,23,23,-23,-24,-25,-26,-27,-3,-4,23,23,23,23,-45,-46,-47,-43,23,23,23,-48,23,-44,]),'BOOL':([0,1,2,4,5,6,7,8,9,10,11,12,13,15,22,26,27,28,47,48,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,94,95,96,97,98,99,100,113,114,115,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,135,136,138,139,140,141,142,],[24,24,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,-56,-55,-1,-5,-28,24,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,-16,-17,-18,-19,-20,-21,-22,24,24,24,24,-23,-24,-25,-26,-27,-3,-4,24,24,24,24,-45,-46,-47,-43,24,24,24,-48,24,-44,]),'PRINT':([0,1,2,4,5,6,7,8,9,10,11,12,13,15,22,26,27,28,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,94,95,96,97,98,99,100,113,114,115,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,135,136,138,139,140,141,142,],[25,25,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,-56,-55,-1,-5,-28,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,-16,-17,-18,-19,-20,-21,-22,25,25,25,25,-23,-24,-25,-26,-27,-3,-4,25,25,25,25,-45,-46,-47,-43,25,25,25,-48,25,-44,]),'NUMBER':([0,1,2,4,5,6,7,8,9,10,11,12,13,15,17,22,26,27,28,29,30,31,32,33,34,35,36,39,42,43,44,45,47,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,86,89,90,94,95,96,97,98,99,100,113,114,115,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,135,136,138,139,140,141,142,],[22,22,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,22,-56,-55,-1,-5,22,22,22,22,22,22,22,22,72,22,22,22,22,-28,22,22,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,22,107,108,-16,-17,-18,-19,-20,-21,-22,22,22,22,22,-23,-24,-25,-26,-27,-3,-4,22,22,22,22,-45,-46,-47,-43,22,22,22,-48,22,-44,]),'LPAREN':([0,1,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,22,25,26,27,28,29,30,31,32,33,34,35,36,42,43,44,45,47,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,86,94,95,96,97,98,99,100,113,114,115,117,118,119,120,121,122,123,124,125,126,127,130,131,132,133,135,136,138,139,140,141,142,],[17,17,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,45,17,48,49,-56,54,-55,-1,-5,17,17,17,17,17,17,17,17,17,17,17,17,-28,17,17,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,17,-16,-17,-18,-19,-20,-21,-22,17,17,17,17,-23,-24,-25,-26,-27,-3,-4,17,17,17,17,-45,-46,-47,-43,17,17,17,-48,17,-44,]),'$end':([1,2,4,5,6,7,8,9,10,11,12,13,15,22,26,27,28,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,94,95,96,97,98,99,100,118,119,120,121,122,123,124,131,132,133,135,140,142,],[0,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,-56,-55,-1,-5,-28,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-3,-4,-45,-46,-47,-43,-48,-44,]),'RBRACE':([2,4,5,6,7,8,9,10,11,12,13,15,22,26,27,28,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,77,78,79,80,85,94,95,96,97,98,99,100,118,119,120,121,122,123,124,125,126,127,130,131,132,133,135,138,140,141,142,],[-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-51,-56,-55,-1,-5,-28,-49,-29,-50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-52,-30,-53,-54,-57,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-3,-4,131,132,133,135,-45,-46,-47,-43,140,-48,142,-44,]),'SEMICOL':([3,14,15,22,26,47,55,56,57,58,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,85,104,106,107,108,109,110,111,112,],[28,-28,-51,-56,-55,-28,-49,-29,-50,-31,-32,-33,-34,-35,-36,94,95,96,97,98,99,100,-52,-30,-53,-54,-57,116,118,119,120,121,122,123,124,]),'PLUS':([3,14,15,22,26,40,46,47,55,56,57,58,59,60,61,62,63,77,78,79,80,84,85,92,129,],[29,40,-51,-56,-55,75,29,-28,-49,-29,-50,29,29,29,29,29,29,-52,-30,-53,-54,29,-57,29,40,]),'MINUS':([3,14,15,22,26,41,46,47,55,56,57,58,59,60,61,62,63,77,78,79,80,84,85,92,],[30,41,-51,-56,-55,76,30,-28,-49,-29,-50,30,30,30,30,30,30,-52,-30,-53,-54,30,-57,30,]),'GTH':([3,14,15,22,26,47,55,56,57,77,78,79,80,84,85,],[31,-28,-51,-56,-55,-28,-49,-29,-50,-52,-30,-53,-54,31,-57,]),'LTH':([3,14,15,22,26,47,55,56,57,77,78,79,80,84,85,],[32,-28,-51,-56,-55,-28,-49,-29,-50,-52,-30,-53,-54,32,-57,]),'GTHOREQUAL':([3,14,15,22,26,47,55,56,57,77,78,79,80,84,85,],[33,-28,-51,-56,-55,-28,-49,-29,-50,-52,-30,-53,-54,33,-57,]),'LTHOREQUAL':([3,14,15,22,26,47,55,56,57,77,78,79,80,84,85,],[34,-28,-51,-56,-55,-28,-49,-29,-50,-52,-30,-53,-54,34,-57,]),'EQUALEQUAL':([3,14,15,22,26,47,55,56,57,77,78,79,80,84,85,],[35,37,-51,-56,-55,-28,-49,-29,-50,-52,-30,-53,-54,35,-57,]),'NOTEQUAL':([3,14,15,22,26,47,55,56,57,77,78,79,80,84,85,],[36,38,-51,-56,-55,-28,-49,-29,-50,-52,-30,-53,-54,36,-57,]),'EQUALS':([14,50,51,52,53,],[39,88,89,90,91,]),'TIMES':([14,15,22,26,47,55,56,57,77,78,79,80,85,],[-29,42,-56,-55,-29,42,-29,42,-52,-30,-53,-54,-57,]),'DIVIDE':([14,15,22,26,47,55,56,57,77,78,79,80,85,],[-29,43,-56,-55,-29,43,-29,43,-52,-30,-53,-54,-57,]),'MODULO':([14,15,22,26,47,55,56,57,77,78,79,80,85,],[-29,44,-56,-55,-29,44,-29,44,-52,-30,-53,-54,-57,]),'RPAREN':([15,22,26,46,47,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,85,87,92,93,99,128,],[-51,-56,-55,85,-28,-49,-29,-50,-31,-32,-33,-34,-35,-36,-52,-30,-53,-54,101,102,103,-57,105,111,112,-21,134,]),'TRUE':([37,38,39,45,91,],[65,68,73,82,109,]),'FALSE':([37,38,39,45,91,],[66,69,74,83,110,]),'STRING':([39,54,88,],[71,93,106,]),'LBRACE':([101,102,103,105,134,137,],[113,114,115,117,136,139,]),'ELSE':([135,],[137,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,113,114,115,117,136,139,],[1,125,126,127,130,138,141,]),'statement':([0,1,113,114,115,117,125,126,127,130,136,138,139,141,],[2,27,2,2,2,2,27,27,27,27,2,27,2,27,]),'expression':([0,1,17,31,32,33,34,35,36,45,49,54,86,113,114,115,117,125,126,127,130,136,138,139,141,],[3,3,46,58,59,60,61,62,63,84,84,92,84,3,3,3,3,3,3,3,3,3,3,3,3,]),'while_statement':([0,1,113,114,115,117,125,126,127,130,136,138,139,141,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'for_statement':([0,1,113,114,115,117,125,126,127,130,136,138,139,141,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'if_statement':([0,1,113,114,115,117,125,126,127,130,136,138,139,141,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'comparison':([0,1,45,49,86,113,114,115,117,125,126,127,130,136,138,139,141,],[7,7,81,87,104,7,7,7,7,7,7,7,7,7,7,7,7,]),'bool_comparison':([0,1,113,114,115,117,125,126,127,130,136,138,139,141,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'var_statement':([0,1,48,113,114,115,117,125,126,127,130,136,138,139,141,],[9,9,86,9,9,9,9,9,9,9,9,9,9,9,9,]),'var_assign':([0,1,113,114,115,117,125,126,127,130,136,138,139,141,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'var_inc':([0,1,113,114,115,116,117,125,126,127,130,136,138,139,141,],[11,11,11,11,11,128,11,11,11,11,11,11,11,11,11,]),'var_dec':([0,1,113,114,115,117,125,126,127,130,136,138,139,141,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'print_statement':([0,1,113,114,115,117,125,126,127,130,136,138,139,141,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'term':([0,1,17,29,30,31,32,33,34,35,36,45,49,54,86,113,114,115,117,125,126,127,130,136,138,139,141,],[15,15,15,55,57,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'factor':([0,1,17,29,30,31,32,33,34,35,36,42,43,44,45,49,54,86,113,114,115,117,125,126,127,130,136,138,139,141,],[26,26,26,26,26,26,26,26,26,26,26,77,79,80,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements_multiple','Parser.py',60),
  ('statements -> statement','statements',1,'p_statements_single','Parser.py',66),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMICOL','print_statement',5,'p_statement_print','Parser.py',73),
  ('print_statement -> PRINT LPAREN STRING RPAREN SEMICOL','print_statement',5,'p_statement_print','Parser.py',74),
  ('statement -> expression SEMICOL','statement',2,'p_statement_expr','Parser.py',82),
  ('statement -> while_statement','statement',1,'p_statement_expr','Parser.py',83),
  ('statement -> for_statement','statement',1,'p_statement_expr','Parser.py',84),
  ('statement -> if_statement','statement',1,'p_statement_expr','Parser.py',85),
  ('statement -> comparison','statement',1,'p_statement_expr','Parser.py',86),
  ('statement -> bool_comparison','statement',1,'p_statement_expr','Parser.py',87),
  ('statement -> var_statement','statement',1,'p_statement_expr','Parser.py',88),
  ('statement -> var_assign','statement',1,'p_statement_expr','Parser.py',89),
  ('statement -> var_inc','statement',1,'p_statement_expr','Parser.py',90),
  ('statement -> var_dec','statement',1,'p_statement_expr','Parser.py',91),
  ('statement -> print_statement','statement',1,'p_statement_expr','Parser.py',92),
  ('var_assign -> ID EQUALS ID SEMICOL','var_assign',4,'p_statement_assign_var_id','Parser.py',107),
  ('var_assign -> ID EQUALS STRING SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',132),
  ('var_assign -> ID EQUALS NUMBER SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',133),
  ('var_assign -> ID EQUALS TRUE SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',134),
  ('var_assign -> ID EQUALS FALSE SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',135),
  ('var_inc -> ID PLUS PLUS SEMICOL','var_inc',4,'p_increment_var','Parser.py',170),
  ('var_dec -> ID MINUS MINUS SEMICOL','var_dec',4,'p_decrement_var','Parser.py',188),
  ('var_statement -> CHAR ID EQUALS STRING SEMICOL','var_statement',5,'p_statement_var','Parser.py',208),
  ('var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL','var_statement',5,'p_statement_var','Parser.py',209),
  ('var_statement -> INT ID EQUALS NUMBER SEMICOL','var_statement',5,'p_statement_var','Parser.py',210),
  ('var_statement -> BOOL ID EQUALS TRUE SEMICOL','var_statement',5,'p_statement_var','Parser.py',211),
  ('var_statement -> BOOL ID EQUALS FALSE SEMICOL','var_statement',5,'p_statement_var','Parser.py',212),
  ('expression -> ID','expression',1,'p_variable_expression','Parser.py',223),
  ('term -> ID','term',1,'p_variable_expression','Parser.py',224),
  ('factor -> ID','factor',1,'p_variable_expression','Parser.py',225),
  ('comparison -> expression GTH expression','comparison',3,'p_expression_comparison','Parser.py',238),
  ('comparison -> expression LTH expression','comparison',3,'p_expression_comparison','Parser.py',239),
  ('comparison -> expression GTHOREQUAL expression','comparison',3,'p_expression_comparison','Parser.py',240),
  ('comparison -> expression LTHOREQUAL expression','comparison',3,'p_expression_comparison','Parser.py',241),
  ('comparison -> expression EQUALEQUAL expression','comparison',3,'p_expression_comparison','Parser.py',242),
  ('comparison -> expression NOTEQUAL expression','comparison',3,'p_expression_comparison','Parser.py',243),
  ('bool_comparison -> ID EQUALEQUAL ID','bool_comparison',3,'p_bool_comparison','Parser.py',283),
  ('bool_comparison -> ID EQUALEQUAL TRUE','bool_comparison',3,'p_bool_comparison','Parser.py',284),
  ('bool_comparison -> ID EQUALEQUAL FALSE','bool_comparison',3,'p_bool_comparison','Parser.py',285),
  ('bool_comparison -> ID NOTEQUAL ID','bool_comparison',3,'p_bool_comparison','Parser.py',286),
  ('bool_comparison -> ID NOTEQUAL TRUE','bool_comparison',3,'p_bool_comparison','Parser.py',287),
  ('bool_comparison -> ID NOTEQUAL FALSE','bool_comparison',3,'p_bool_comparison','Parser.py',288),
  ('if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',334),
  ('if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_IF_ELSE','Parser.py',342),
  ('while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',353),
  ('while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',354),
  ('while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',355),
  ('for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE','for_statement',10,'p_FOR','Parser.py',361),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','Parser.py',368),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','Parser.py',372),
  ('expression -> term','expression',1,'p_expression_term','Parser.py',376),
  ('term -> term TIMES factor','term',3,'p_term_times','Parser.py',380),
  ('term -> term DIVIDE factor','term',3,'p_term_div','Parser.py',384),
  ('term -> term MODULO factor','term',3,'p_term_modulo','Parser.py',388),
  ('term -> factor','term',1,'p_term_factor','Parser.py',392),
  ('factor -> NUMBER','factor',1,'p_factor_num','Parser.py',396),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','Parser.py',400),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',405),
]
