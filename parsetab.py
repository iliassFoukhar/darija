
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL BREAK CHAR CONSTANT CONTINUE DIVIDE ELSE EQUALEQUAL EQUALS FALSE FLOATTYPE FLOAT_CONST FOR GTH GTHOREQUAL ID IF INT INT_CONST LBRACE LPAREN LTH LTHOREQUAL MINUS MODULO NOTEQUAL NUMBER PLUS PRINT RBRACE RETURN RPAREN SEMICOL SIZEOF STRING TIMES TRUE UNION VAR_TYPE VOID WHILE\n    statements : statements statement\n    \n    statements : statement\n    \n    print_statement : PRINT LPAREN expression RPAREN SEMICOL\n                    | PRINT LPAREN STRING RPAREN SEMICOL  \n    statement : expression SEMICOL\n                 | while_statement\n                 | for_statement\n                 | if_statement\n                 | comparison\n                 | compare_id_value\n                 | bool_comparison\n                 | var_statement\n                 | var_assign\n                 | var_inc\n                 | var_dec\n                 | print_statement\n                 | break_statement\n                 \n    var_assign : ID EQUALS ID SEMICOL\n    \n    var_assign : ID EQUALS STRING SEMICOL\n               | ID EQUALS NUMBER SEMICOL\n               | ID EQUALS TRUE SEMICOL\n               | ID EQUALS FALSE SEMICOL\n    \n    var_inc : ID PLUS PLUS SEMICOL\n    \n    var_dec : ID MINUS MINUS SEMICOL\n    \n    var_statement : CHAR ID EQUALS STRING SEMICOL\n                  | FLOATTYPE ID EQUALS NUMBER SEMICOL\n                  | INT ID EQUALS NUMBER SEMICOL\n                  | BOOL ID EQUALS TRUE SEMICOL\n                  | BOOL ID EQUALS FALSE SEMICOL\n    \n    expression : ID\n    term : ID\n    factor : ID\n    \n    comparison : expression GTH expression\n                  | expression LTH expression\n                  | expression GTHOREQUAL expression\n                  | expression LTHOREQUAL expression\n                  | expression EQUALEQUAL expression\n                  | expression NOTEQUAL expression\n    \n        compare_id_value : ID GTH expression\n                         | ID LTH expression\n                         | ID GTHOREQUAL expression\n                         | ID LTHOREQUAL expression\n                         | ID EQUALEQUAL expression\n                         | ID NOTEQUAL expression \n    \n        bool_comparison : ID EQUALEQUAL ID\n                        | ID EQUALEQUAL TRUE\n                        | ID EQUALEQUAL FALSE\n                        | ID NOTEQUAL ID\n                        | ID NOTEQUAL TRUE\n                        | ID NOTEQUAL FALSE\n    \n        if_statement : IF LPAREN comparison RPAREN LBRACE statements RBRACE\n                     | IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE\n                     | IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE\n    \n        if_statement : IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n                     | IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n    \n        while_statement : WHILE LPAREN comparison RPAREN LBRACE statements RBRACE\n                        | WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE\n                        | WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE\n    \n        for_statement : FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE\n    \n        break_statement : BREAK SEMICOL\n    expression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term MODULO factorterm : factorfactor : NUMBERfactor : LPAREN expression RPARENempty :'
    
_lr_action_items = {'ID':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,19,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,54,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,100,111,112,113,114,115,116,117,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,161,164,165,166,167,168,169,170,171,],[16,16,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,54,57,58,-68,59,60,-67,-1,-5,64,64,54,54,54,54,54,54,54,54,54,54,76,80,84,92,92,92,54,-30,104,54,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,54,-18,-19,-20,-21,-22,-23,-24,16,16,16,150,16,16,16,-25,-26,-27,-28,-29,-3,-4,16,16,16,16,16,16,-56,-57,-58,-51,-52,-53,16,16,16,16,-59,16,16,-54,-55,]),'WHILE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,24,29,30,31,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,111,112,113,114,115,116,117,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,161,164,165,166,167,168,169,170,171,],[18,18,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,-68,-67,-1,-5,-30,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,-18,-19,-20,-21,-22,-23,-24,18,18,18,18,18,18,-25,-26,-27,-28,-29,-3,-4,18,18,18,18,18,18,-56,-57,-58,-51,-52,-53,18,18,18,18,-59,18,18,-54,-55,]),'FOR':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,24,29,30,31,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,111,112,113,114,115,116,117,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,161,164,165,166,167,168,169,170,171,],[20,20,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,-68,-67,-1,-5,-30,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,-18,-19,-20,-21,-22,-23,-24,20,20,20,20,20,20,-25,-26,-27,-28,-29,-3,-4,20,20,20,20,20,20,-56,-57,-58,-51,-52,-53,20,20,20,20,-59,20,20,-54,-55,]),'IF':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,24,29,30,31,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,111,112,113,114,115,116,117,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,161,164,165,166,167,168,169,170,171,],[21,21,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,-68,-67,-1,-5,-30,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,-18,-19,-20,-21,-22,-23,-24,21,21,21,21,21,21,-25,-26,-27,-28,-29,-3,-4,21,21,21,21,21,21,-56,-57,-58,-51,-52,-53,21,21,21,21,-59,21,21,-54,-55,]),'CHAR':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,24,29,30,31,54,55,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,111,112,113,114,115,116,117,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,161,164,165,166,167,168,169,170,171,],[22,22,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,-68,-67,-1,-5,-30,22,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,-18,-19,-20,-21,-22,-23,-24,22,22,22,22,22,22,-25,-26,-27,-28,-29,-3,-4,22,22,22,22,22,22,-56,-57,-58,-51,-52,-53,22,22,22,22,-59,22,22,-54,-55,]),'FLOATTYPE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,24,29,30,31,54,55,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,111,112,113,114,115,116,117,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,161,164,165,166,167,168,169,170,171,],[23,23,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,-68,-67,-1,-5,-30,23,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,-18,-19,-20,-21,-22,-23,-24,23,23,23,23,23,23,-25,-26,-27,-28,-29,-3,-4,23,23,23,23,23,23,-56,-57,-58,-51,-52,-53,23,23,23,23,-59,23,23,-54,-55,]),'INT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,24,29,30,31,54,55,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,111,112,113,114,115,116,117,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,161,164,165,166,167,168,169,170,171,],[25,25,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,-68,-67,-1,-5,-30,25,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,-18,-19,-20,-21,-22,-23,-24,25,25,25,25,25,25,-25,-26,-27,-28,-29,-3,-4,25,25,25,25,25,25,-56,-57,-58,-51,-52,-53,25,25,25,25,-59,25,25,-54,-55,]),'BOOL':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,24,29,30,31,54,55,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,111,112,113,114,115,116,117,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,161,164,165,166,167,168,169,170,171,],[26,26,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,-68,-67,-1,-5,-30,26,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,-18,-19,-20,-21,-22,-23,-24,26,26,26,26,26,26,-25,-26,-27,-28,-29,-3,-4,26,26,26,26,26,26,-56,-57,-58,-51,-52,-53,26,26,26,26,-59,26,26,-54,-55,]),'PRINT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,24,29,30,31,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,111,112,113,114,115,116,117,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,161,164,165,166,167,168,169,170,171,],[27,27,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,-68,-67,-1,-5,-30,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,-18,-19,-20,-21,-22,-23,-24,27,27,27,27,27,27,-25,-26,-27,-28,-29,-3,-4,27,27,27,27,27,27,-56,-57,-58,-51,-52,-53,27,27,27,27,-59,27,27,-54,-55,]),'BREAK':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,24,29,30,31,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,111,112,113,114,115,116,117,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,161,164,165,166,167,168,169,170,171,],[28,28,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,-68,-67,-1,-5,-30,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,-18,-19,-20,-21,-22,-23,-24,28,28,28,28,28,28,-25,-26,-27,-28,-29,-3,-4,28,28,28,28,28,28,-56,-57,-58,-51,-52,-53,28,28,28,28,-59,28,28,-54,-55,]),'NUMBER':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,19,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,50,51,52,54,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,100,106,107,111,112,113,114,115,116,117,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,161,164,165,166,167,168,169,170,171,],[24,24,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,24,-68,-67,-1,-5,24,24,24,24,24,24,24,24,24,24,24,24,24,24,86,24,24,24,24,-30,24,24,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,24,126,127,-18,-19,-20,-21,-22,-23,-24,24,24,24,24,24,24,-25,-26,-27,-28,-29,-3,-4,24,24,24,24,24,24,-56,-57,-58,-51,-52,-53,24,24,24,24,-59,24,24,-54,-55,]),'LPAREN':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,24,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,52,54,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,100,111,112,113,114,115,116,117,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,161,164,165,166,167,168,169,170,171,],[19,19,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,52,19,55,56,-68,61,-67,-1,-5,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-30,19,19,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,19,-18,-19,-20,-21,-22,-23,-24,19,19,19,19,19,19,-25,-26,-27,-28,-29,-3,-4,19,19,19,19,19,19,-56,-57,-58,-51,-52,-53,19,19,19,19,-59,19,19,-54,-55,]),'$end':([1,2,4,5,6,7,8,9,10,11,12,13,14,15,17,24,29,30,31,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,111,112,113,114,115,116,117,139,140,141,142,143,144,145,154,155,156,158,159,160,167,170,171,],[0,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,-68,-67,-1,-5,-30,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-3,-4,-56,-57,-58,-51,-52,-53,-59,-54,-55,]),'RBRACE':([2,4,5,6,7,8,9,10,11,12,13,14,15,17,24,29,30,31,54,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,99,111,112,113,114,115,116,117,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,158,159,160,164,167,168,169,170,171,],[-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-63,-68,-67,-1,-5,-30,-60,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,-69,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-3,-4,154,155,156,158,159,160,-56,-57,-58,-51,-52,-53,167,-59,170,171,-54,-55,]),'SEMICOL':([3,16,17,24,28,29,54,63,64,65,66,67,68,69,70,71,84,85,86,87,88,89,90,91,92,93,94,99,121,125,126,127,128,129,130,131,],[31,-30,-63,-68,62,-67,-30,-61,-31,-62,-33,-34,-35,-36,-37,-38,111,112,113,114,115,116,117,-64,-32,-65,-66,-69,135,139,140,141,142,143,144,145,]),'PLUS':([3,16,17,24,29,47,53,54,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,91,92,93,94,98,99,104,109,150,],[32,47,-63,-68,-67,89,32,-30,-61,-31,-62,32,32,32,32,32,32,32,32,32,32,-30,32,-30,32,-64,-32,-65,-66,32,-69,-30,32,47,]),'MINUS':([3,16,17,24,29,48,53,54,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,91,92,93,94,98,99,104,109,],[33,48,-63,-68,-67,90,33,-30,-61,-31,-62,33,33,33,33,33,33,33,33,33,33,-30,33,-30,33,-64,-32,-65,-66,33,-69,-30,33,]),'GTH':([3,16,17,24,29,54,63,64,65,91,92,93,94,98,99,104,],[34,40,-63,-68,-67,-30,-61,-31,-62,-64,-32,-65,-66,34,-69,40,]),'LTH':([3,16,17,24,29,54,63,64,65,91,92,93,94,98,99,104,],[35,41,-63,-68,-67,-30,-61,-31,-62,-64,-32,-65,-66,35,-69,41,]),'GTHOREQUAL':([3,16,17,24,29,54,63,64,65,91,92,93,94,98,99,104,],[36,42,-63,-68,-67,-30,-61,-31,-62,-64,-32,-65,-66,36,-69,42,]),'LTHOREQUAL':([3,16,17,24,29,54,63,64,65,91,92,93,94,98,99,104,],[37,43,-63,-68,-67,-30,-61,-31,-62,-64,-32,-65,-66,37,-69,43,]),'EQUALEQUAL':([3,16,17,24,29,54,63,64,65,91,92,93,94,98,99,104,],[38,44,-63,-68,-67,-30,-61,-31,-62,-64,-32,-65,-66,38,-69,44,]),'NOTEQUAL':([3,16,17,24,29,54,63,64,65,91,92,93,94,98,99,104,],[39,45,-63,-68,-67,-30,-61,-31,-62,-64,-32,-65,-66,39,-69,45,]),'EQUALS':([16,57,58,59,60,],[46,105,106,107,108,]),'TIMES':([16,17,24,29,54,63,64,65,76,80,91,92,93,94,99,104,],[-31,49,-68,-67,-31,49,-31,49,-31,-31,-64,-32,-65,-66,-69,-31,]),'DIVIDE':([16,17,24,29,54,63,64,65,76,80,91,92,93,94,99,104,],[-31,50,-68,-67,-31,50,-31,50,-31,-31,-64,-32,-65,-66,-69,-31,]),'MODULO':([16,17,24,29,54,63,64,65,76,80,91,92,93,94,99,104,],[-31,51,-68,-67,-31,51,-31,51,-31,-31,-64,-32,-65,-66,-69,-31,]),'RPAREN':([17,24,29,53,54,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,91,92,93,94,95,96,97,99,101,102,103,109,110,116,149,],[-63,-68,-67,99,-30,-61,-31,-62,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-30,-43,-46,-47,-30,-44,-49,-50,-64,-32,-65,-66,118,119,120,-69,122,123,124,130,131,-23,157,]),'TRUE':([44,45,46,52,108,],[78,82,87,96,128,]),'FALSE':([44,45,46,52,108,],[79,83,88,97,129,]),'STRING':([46,61,105,],[85,110,125,]),'LBRACE':([118,119,120,122,123,124,157,162,163,],[132,133,134,136,137,138,161,165,166,]),'ELSE':([158,160,],[162,163,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,132,133,134,136,137,138,161,165,166,],[1,146,147,148,151,152,153,164,168,169,]),'statement':([0,1,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[2,30,2,2,2,2,2,2,30,30,30,30,30,30,2,30,2,2,30,30,]),'expression':([0,1,19,34,35,36,37,38,39,40,41,42,43,44,45,52,56,61,100,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[3,3,53,66,67,68,69,70,71,72,73,74,75,77,81,98,98,109,98,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'while_statement':([0,1,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'for_statement':([0,1,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'if_statement':([0,1,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'comparison':([0,1,52,56,100,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[7,7,95,101,121,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'compare_id_value':([0,1,56,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[8,8,102,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'bool_comparison':([0,1,56,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[9,9,103,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'var_statement':([0,1,55,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[10,10,100,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'var_assign':([0,1,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'var_inc':([0,1,132,133,134,135,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[12,12,12,12,12,149,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'var_dec':([0,1,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'print_statement':([0,1,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'break_statement':([0,1,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'term':([0,1,19,32,33,34,35,36,37,38,39,40,41,42,43,44,45,52,56,61,100,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[17,17,17,63,65,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'factor':([0,1,19,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,52,56,61,100,132,133,134,136,137,138,146,147,148,151,152,153,161,164,165,166,168,169,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,91,93,94,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements_multiple','Parser.py',60),
  ('statements -> statement','statements',1,'p_statements_single','Parser.py',66),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMICOL','print_statement',5,'p_statement_print','Parser.py',73),
  ('print_statement -> PRINT LPAREN STRING RPAREN SEMICOL','print_statement',5,'p_statement_print','Parser.py',74),
  ('statement -> expression SEMICOL','statement',2,'p_statement_expr','Parser.py',82),
  ('statement -> while_statement','statement',1,'p_statement_expr','Parser.py',83),
  ('statement -> for_statement','statement',1,'p_statement_expr','Parser.py',84),
  ('statement -> if_statement','statement',1,'p_statement_expr','Parser.py',85),
  ('statement -> comparison','statement',1,'p_statement_expr','Parser.py',86),
  ('statement -> compare_id_value','statement',1,'p_statement_expr','Parser.py',87),
  ('statement -> bool_comparison','statement',1,'p_statement_expr','Parser.py',88),
  ('statement -> var_statement','statement',1,'p_statement_expr','Parser.py',89),
  ('statement -> var_assign','statement',1,'p_statement_expr','Parser.py',90),
  ('statement -> var_inc','statement',1,'p_statement_expr','Parser.py',91),
  ('statement -> var_dec','statement',1,'p_statement_expr','Parser.py',92),
  ('statement -> print_statement','statement',1,'p_statement_expr','Parser.py',93),
  ('statement -> break_statement','statement',1,'p_statement_expr','Parser.py',94),
  ('var_assign -> ID EQUALS ID SEMICOL','var_assign',4,'p_statement_assign_var_id','Parser.py',109),
  ('var_assign -> ID EQUALS STRING SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',134),
  ('var_assign -> ID EQUALS NUMBER SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',135),
  ('var_assign -> ID EQUALS TRUE SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',136),
  ('var_assign -> ID EQUALS FALSE SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',137),
  ('var_inc -> ID PLUS PLUS SEMICOL','var_inc',4,'p_increment_var','Parser.py',172),
  ('var_dec -> ID MINUS MINUS SEMICOL','var_dec',4,'p_decrement_var','Parser.py',190),
  ('var_statement -> CHAR ID EQUALS STRING SEMICOL','var_statement',5,'p_statement_var','Parser.py',210),
  ('var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL','var_statement',5,'p_statement_var','Parser.py',211),
  ('var_statement -> INT ID EQUALS NUMBER SEMICOL','var_statement',5,'p_statement_var','Parser.py',212),
  ('var_statement -> BOOL ID EQUALS TRUE SEMICOL','var_statement',5,'p_statement_var','Parser.py',213),
  ('var_statement -> BOOL ID EQUALS FALSE SEMICOL','var_statement',5,'p_statement_var','Parser.py',214),
  ('expression -> ID','expression',1,'p_variable_expression','Parser.py',225),
  ('term -> ID','term',1,'p_variable_expression','Parser.py',226),
  ('factor -> ID','factor',1,'p_variable_expression','Parser.py',227),
  ('comparison -> expression GTH expression','comparison',3,'p_expression_comparison','Parser.py',240),
  ('comparison -> expression LTH expression','comparison',3,'p_expression_comparison','Parser.py',241),
  ('comparison -> expression GTHOREQUAL expression','comparison',3,'p_expression_comparison','Parser.py',242),
  ('comparison -> expression LTHOREQUAL expression','comparison',3,'p_expression_comparison','Parser.py',243),
  ('comparison -> expression EQUALEQUAL expression','comparison',3,'p_expression_comparison','Parser.py',244),
  ('comparison -> expression NOTEQUAL expression','comparison',3,'p_expression_comparison','Parser.py',245),
  ('compare_id_value -> ID GTH expression','compare_id_value',3,'p_compare_id_value','Parser.py',285),
  ('compare_id_value -> ID LTH expression','compare_id_value',3,'p_compare_id_value','Parser.py',286),
  ('compare_id_value -> ID GTHOREQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',287),
  ('compare_id_value -> ID LTHOREQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',288),
  ('compare_id_value -> ID EQUALEQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',289),
  ('compare_id_value -> ID NOTEQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',290),
  ('bool_comparison -> ID EQUALEQUAL ID','bool_comparison',3,'p_bool_comparison','Parser.py',342),
  ('bool_comparison -> ID EQUALEQUAL TRUE','bool_comparison',3,'p_bool_comparison','Parser.py',343),
  ('bool_comparison -> ID EQUALEQUAL FALSE','bool_comparison',3,'p_bool_comparison','Parser.py',344),
  ('bool_comparison -> ID NOTEQUAL ID','bool_comparison',3,'p_bool_comparison','Parser.py',345),
  ('bool_comparison -> ID NOTEQUAL TRUE','bool_comparison',3,'p_bool_comparison','Parser.py',346),
  ('bool_comparison -> ID NOTEQUAL FALSE','bool_comparison',3,'p_bool_comparison','Parser.py',347),
  ('if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',399),
  ('if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',400),
  ('if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',401),
  ('if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_IF_ELSE','Parser.py',410),
  ('if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_IF_ELSE','Parser.py',411),
  ('while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',422),
  ('while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',423),
  ('while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',424),
  ('for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE','for_statement',10,'p_FOR','Parser.py',430),
  ('break_statement -> BREAK SEMICOL','break_statement',2,'p_break_statement','Parser.py',438),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','Parser.py',445),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','Parser.py',449),
  ('expression -> term','expression',1,'p_expression_term','Parser.py',453),
  ('term -> term TIMES factor','term',3,'p_term_times','Parser.py',457),
  ('term -> term DIVIDE factor','term',3,'p_term_div','Parser.py',461),
  ('term -> term MODULO factor','term',3,'p_term_modulo','Parser.py',465),
  ('term -> factor','term',1,'p_term_factor','Parser.py',469),
  ('factor -> NUMBER','factor',1,'p_factor_num','Parser.py',473),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','Parser.py',477),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',482),
]
