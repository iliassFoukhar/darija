
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BREAK CASE CHAR CONST CONTINUE DEFAULT DIVIDE DO DOUBLE ELSE ENUM EQUALS EXTERN FLOATTYPE FLOAT_CONST FOR GOTO GREATER ID IF INFERIOR INT INT_CONST LBRACE LONG LPAREN MINUS MODULO NUMBER PLUS PRINT RBRACE REGISTER RETURN RPAREN SEMICOL SHORT SIGNED SIZEOF STATIC STRING STRUCT SWITCH TIMES TYPEDEF UNION UNSIGNED VOID VOLATILE WHILEprint_statement : PRINT LPAREN expression RPAREN SEMICOL\n                       | PRINT LPAREN STRING RPAREN SEMICOL  expression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term MODULO factorterm : factorfactor : NUMBERfactor : LPAREN expression RPARENempty :'
    
_lr_action_items = {'PRINT':([0,],[2,]),'$end':([1,19,22,],[0,-1,-2,]),'LPAREN':([2,3,4,12,13,15,16,17,],[3,4,4,4,4,4,4,4,]),'STRING':([3,],[6,]),'NUMBER':([3,4,12,13,15,16,17,],[9,9,9,9,9,9,9,]),'RPAREN':([5,6,7,8,9,10,18,20,21,23,24,25,],[11,14,-5,-9,-10,18,-11,-3,-4,-6,-7,-8,]),'PLUS':([5,7,8,9,10,18,20,21,23,24,25,],[12,-5,-9,-10,12,-11,-3,-4,-6,-7,-8,]),'MINUS':([5,7,8,9,10,18,20,21,23,24,25,],[13,-5,-9,-10,13,-11,-3,-4,-6,-7,-8,]),'TIMES':([7,8,9,18,20,21,23,24,25,],[15,-9,-10,-11,15,15,-6,-7,-8,]),'DIVIDE':([7,8,9,18,20,21,23,24,25,],[16,-9,-10,-11,16,16,-6,-7,-8,]),'MODULO':([7,8,9,18,20,21,23,24,25,],[17,-9,-10,-11,17,17,-6,-7,-8,]),'SEMICOL':([11,14,],[19,22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'print_statement':([0,],[1,]),'expression':([3,4,],[5,10,]),'term':([3,4,12,13,],[7,7,20,21,]),'factor':([3,4,12,13,15,16,17,],[8,8,8,8,23,24,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> print_statement","S'",1,None,None,None),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMICOL','print_statement',5,'p_statement_print','Parser.py',5),
  ('print_statement -> PRINT LPAREN STRING RPAREN SEMICOL','print_statement',5,'p_statement_print','Parser.py',6),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','Parser.py',12),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','Parser.py',16),
  ('expression -> term','expression',1,'p_expression_term','Parser.py',20),
  ('term -> term TIMES factor','term',3,'p_term_times','Parser.py',24),
  ('term -> term DIVIDE factor','term',3,'p_term_div','Parser.py',28),
  ('term -> term MODULO factor','term',3,'p_term_modulo','Parser.py',32),
  ('term -> factor','term',1,'p_term_factor','Parser.py',36),
  ('factor -> NUMBER','factor',1,'p_factor_num','Parser.py',40),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','Parser.py',44),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',49),
]
