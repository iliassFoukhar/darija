
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BREAK CHAR COMMA CONTINUE DIVIDE ELSE EQUALEQUAL EQUALS FALSE FLOATTYPE FLOAT_CONST FOR FUNCTION GTH GTHOREQUAL ID IF INPUT INT INT_CONST LBRACE LPAREN LTH LTHOREQUAL MINUS MODULO NOTEQUAL NUMBER OR PLUS PRINT RBRACE RETURN RPAREN SEMICOL SIZEOF STRING TIMES TRUE UNION VAR_TYPE WHILE\n    statements : statements statement\n    \n    statements : statement\n    \n    print_statement : PRINT LPAREN expression RPAREN SEMICOL\n                    | PRINT LPAREN STRING RPAREN SEMICOL  \n    \n    vartype_statement : VAR_TYPE LPAREN ID RPAREN SEMICOL\n    \n    union_statement : UNION LPAREN STRING COMMA STRING RPAREN SEMICOL\n    \n    union_statement : UNION LPAREN STRING COMMA ID RPAREN SEMICOL\n    \n    union_statement : UNION LPAREN ID COMMA STRING RPAREN SEMICOL\n    \n    sizeof_statement : SIZEOF LPAREN STRING RPAREN SEMICOL\n    \n    sizeof_statement : SIZEOF LPAREN ID RPAREN SEMICOL\n    statement : expression SEMICOL\n                 | if_statement_elif\n                 | if_statement\n                 | while_statement\n                 | for_statement\n                 | vartype_statement\n                 | input_statement\n                 | union_statement\n                 | comparison\n                 | compare_id_value\n                 | bool_comparison\n                 | var_statement\n                 | var_assign\n                 | var_inc\n                 | var_dec\n                 | print_statement\n                 | break_statement\n                 | sizeof_statement\n                 | and_statement\n                 | or_statement\n                 \n    and_statement : comparison AND comparison\n                  | comparison AND TRUE\n                  | comparison AND FALSE\n                  | TRUE AND comparison\n                  | FALSE AND comparison\n                  | TRUE AND TRUE\n                  | TRUE AND FALSE\n                  | FALSE AND TRUE\n                  | FALSE AND FALSE\n                  | compare_id_value AND compare_id_value\n                  | compare_id_value AND TRUE\n                  | compare_id_value AND FALSE\n                  | compare_id_value AND comparison\n                  | comparison AND compare_id_value\n                  | TRUE AND compare_id_value\n                  | FALSE AND compare_id_value\n\n    \n    or_statement  : comparison OR comparison\n                  | comparison OR TRUE\n                  | comparison OR FALSE\n                  | TRUE OR comparison\n                  | FALSE OR comparison\n                  | TRUE OR TRUE\n                  | TRUE OR FALSE\n                  | FALSE OR TRUE\n                  | FALSE OR FALSE\n                  | compare_id_value OR compare_id_value\n                  | compare_id_value OR TRUE\n                  | compare_id_value OR FALSE\n                  | compare_id_value OR comparison\n                  | comparison OR compare_id_value\n                  | TRUE OR compare_id_value\n                  | FALSE OR compare_id_value\n\n    \n    var_assign : ID EQUALS ID SEMICOL\n    \n    var_assign : ID EQUALS STRING SEMICOL\n               | ID EQUALS NUMBER SEMICOL\n               | ID EQUALS TRUE SEMICOL\n               | ID EQUALS FALSE SEMICOL\n    \n    var_inc : ID PLUS PLUS SEMICOL\n    \n    var_dec : ID MINUS MINUS SEMICOL\n    \n    var_statement : CHAR ID EQUALS STRING SEMICOL\n                  | FLOATTYPE ID EQUALS NUMBER SEMICOL\n                  | INT ID EQUALS NUMBER SEMICOL\n                  | BOOL ID EQUALS TRUE SEMICOL\n                  | BOOL ID EQUALS FALSE SEMICOL\n    \n        input_statement : INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL\n                        | CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL\n                        | FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL\n    \n    expression : ID\n    term : ID\n    factor : ID\n    \n    comparison : expression GTH expression\n                  | expression LTH expression\n                  | expression GTHOREQUAL expression\n                  | expression LTHOREQUAL expression\n                  | expression EQUALEQUAL expression\n                  | expression NOTEQUAL expression\n    \n        compare_id_value : ID GTH expression\n                         | ID LTH expression\n                         | ID GTHOREQUAL expression\n                         | ID LTHOREQUAL expression\n                         | ID EQUALEQUAL expression\n                         | ID NOTEQUAL expression \n    \n        bool_comparison : ID EQUALEQUAL ID\n                        | ID EQUALEQUAL TRUE\n                        | ID EQUALEQUAL FALSE\n                        | ID NOTEQUAL ID\n                        | ID NOTEQUAL TRUE\n                        | ID NOTEQUAL FALSE\n    \n        if_statement : IF LPAREN comparison RPAREN LBRACE statements RBRACE\n                     | IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE\n                     | IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE\n                     | IF LPAREN and_statement RPAREN LBRACE statements RBRACE\n                     | IF LPAREN or_statement RPAREN LBRACE statements RBRACE\n    \n    if_statement_elif : IF RPAREN comparison LPAREN LBRACE statements RBRACE ELSE if_statement\n    \n        if_statement : IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n                     | IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n                     | IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n    \n        while_statement : WHILE LPAREN comparison RPAREN LBRACE statements RBRACE\n                        | WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE\n                        | WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE\n    \n        for_statement : FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE\n    \n        break_statement : BREAK SEMICOL\n    expression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term MODULO factorterm : factorfactor : NUMBERfactor : LPAREN expression RPARENempty :'
    
_lr_action_items = {'ID':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,32,33,34,36,37,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,71,72,73,74,75,76,78,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,179,180,181,182,183,184,185,186,187,208,216,217,218,219,220,221,222,223,224,225,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[23,23,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,71,79,80,81,-120,83,-119,-1,-11,88,88,71,71,71,71,71,71,101,101,101,101,71,71,71,71,118,122,126,134,134,134,71,143,-78,71,101,101,101,101,168,173,71,-112,178,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,71,198,199,200,71,71,-63,-64,-65,-66,-67,-68,-69,237,23,23,23,23,23,23,23,23,23,255,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,23,23,23,23,23,23,23,23,23,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,23,-75,-76,-77,-104,23,23,23,23,23,23,23,-111,-105,-107,-106,]),'IF':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,278,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[25,25,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,25,25,25,25,25,25,25,25,25,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,25,25,25,25,25,25,25,25,25,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,286,25,-75,-76,-77,-104,25,25,25,25,25,25,25,-111,-105,-107,-106,]),'WHILE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[27,27,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,27,27,27,27,27,27,27,27,27,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,27,27,27,27,27,27,27,27,27,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,27,-75,-76,-77,-104,27,27,27,27,27,27,27,-111,-105,-107,-106,]),'FOR':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[30,30,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,30,30,30,30,30,30,30,30,30,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,30,30,30,30,30,30,30,30,30,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,30,-75,-76,-77,-104,30,30,30,30,30,30,30,-111,-105,-107,-106,]),'VAR_TYPE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[31,31,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,31,31,31,31,31,31,31,31,31,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,31,31,31,31,31,31,31,31,31,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,31,-75,-76,-77,-104,31,31,31,31,31,31,31,-111,-105,-107,-106,]),'INT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,77,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,230,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[32,32,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,167,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,32,32,32,32,32,32,32,32,32,-5,256,-72,-70,-71,-73,-74,-3,-4,-9,-10,32,32,32,32,32,32,32,32,32,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,32,-75,-76,-77,-104,32,32,32,32,32,32,32,-111,-105,-107,-106,]),'CHAR':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,77,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,232,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[33,33,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,165,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,33,33,33,33,33,33,33,33,33,-5,-72,257,-70,-71,-73,-74,-3,-4,-9,-10,33,33,33,33,33,33,33,33,33,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,33,-75,-76,-77,-104,33,33,33,33,33,33,33,-111,-105,-107,-106,]),'FLOATTYPE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,77,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,233,234,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[34,34,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,166,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,34,34,34,34,34,34,34,34,34,-5,-72,-70,258,-71,-73,-74,-3,-4,-9,-10,34,34,34,34,34,34,34,34,34,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,34,-75,-76,-77,-104,34,34,34,34,34,34,34,-111,-105,-107,-106,]),'UNION':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[35,35,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,35,35,35,35,35,35,35,35,35,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,35,35,35,35,35,35,35,35,35,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,35,-75,-76,-77,-104,35,35,35,35,35,35,35,-111,-105,-107,-106,]),'BOOL':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,77,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[37,37,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,37,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,37,37,37,37,37,37,37,37,37,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,37,37,37,37,37,37,37,37,37,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,37,-75,-76,-77,-104,37,37,37,37,37,37,37,-111,-105,-107,-106,]),'PRINT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[38,38,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,38,38,38,38,38,38,38,38,38,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,38,38,38,38,38,38,38,38,38,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,38,-75,-76,-77,-104,38,38,38,38,38,38,38,-111,-105,-107,-106,]),'BREAK':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[39,39,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,39,39,39,39,39,39,39,39,39,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,39,39,39,39,39,39,39,39,39,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,39,-75,-76,-77,-104,39,39,39,39,39,39,39,-111,-105,-107,-106,]),'SIZEOF':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[40,40,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,40,40,40,40,40,40,40,40,40,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,40,40,40,40,40,40,40,40,40,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,40,-75,-76,-77,-104,40,40,40,40,40,40,40,-111,-105,-107,-106,]),'TRUE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,52,53,54,55,60,61,62,69,71,72,73,74,75,76,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[28,28,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,97,103,107,111,120,124,129,28,-78,146,148,152,158,162,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,210,-63,-64,-65,-66,-67,-68,-69,28,28,28,28,28,28,28,28,28,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,28,28,28,28,28,28,28,28,28,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,28,-75,-76,-77,-104,28,28,28,28,28,28,28,-111,-105,-107,-106,]),'FALSE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,52,53,54,55,60,61,62,69,71,72,73,74,75,76,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,174,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[29,29,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,98,104,108,112,121,125,130,29,-78,147,150,154,156,160,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,211,-63,-64,-65,-66,-67,-68,-69,29,29,29,29,29,29,29,29,29,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,29,29,29,29,29,29,29,29,29,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,29,-75,-76,-77,-104,29,29,29,29,29,29,29,-111,-105,-107,-106,]),'NUMBER':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,71,72,73,74,75,76,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,169,171,179,180,181,182,183,184,185,186,187,216,217,218,219,220,221,222,223,224,227,228,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,],[36,36,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,36,-120,-119,-1,-11,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,128,36,36,36,36,36,-78,36,36,36,36,36,36,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,36,203,207,36,36,-63,-64,-65,-66,-67,-68,-69,36,36,36,36,36,36,36,36,36,207,203,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,36,36,36,36,36,36,36,36,36,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,36,-75,-76,-77,-104,36,36,36,36,36,36,36,-111,-105,-107,-106,]),'LPAREN':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,30,31,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,65,66,67,68,69,71,72,73,74,75,76,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,137,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,179,180,181,182,183,184,185,186,187,202,204,206,216,217,218,219,220,221,222,223,224,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,],[26,26,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,69,26,72,77,78,82,-120,84,86,-119,-1,-11,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-78,26,26,26,26,26,26,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,188,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,26,26,26,-63,-64,-65,-66,-67,-68,-69,230,232,234,26,26,26,26,26,26,26,26,26,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,26,26,26,26,26,26,26,26,26,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,26,-75,-76,-77,69,-104,26,26,26,26,26,26,26,-111,-105,-107,-106,]),'$end':([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,229,231,233,235,239,240,241,242,243,244,263,264,265,266,267,268,269,270,275,276,277,283,284,285,287,295,296,297,298,],[0,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,-75,-76,-77,-104,-111,-105,-107,-106,]),'RBRACE':([2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,36,41,42,43,71,85,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,181,182,183,184,185,186,187,229,231,233,235,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,263,264,265,266,267,268,269,270,275,276,277,283,284,285,287,291,292,293,294,295,296,297,298,],[-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-115,-120,-119,-1,-11,-78,-112,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,-121,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,-63,-64,-65,-66,-67,-68,-69,-5,-72,-70,-71,-73,-74,-3,-4,-9,-10,262,263,264,265,266,267,268,269,270,-99,-100,-101,-102,-103,-108,-109,-110,-6,-7,-8,-75,-76,-77,-104,295,296,297,298,-111,-105,-107,-106,]),'SEMICOL':([3,23,24,36,39,41,71,87,88,89,90,91,92,93,94,95,126,127,128,129,130,131,132,133,134,135,136,144,197,201,203,205,207,210,211,212,213,214,215,259,260,261,272,273,274,],[43,-78,-115,-120,85,-119,-78,-113,-79,-114,-81,-82,-83,-84,-85,-86,181,182,183,184,185,186,187,-116,-80,-117,-118,-121,225,229,231,233,235,239,240,241,242,243,244,275,276,277,283,284,285,]),'PLUS':([3,23,24,36,41,63,70,71,87,88,89,90,91,92,93,94,95,100,101,114,115,116,117,118,119,122,123,133,134,135,136,143,144,175,255,],[44,63,-115,-120,-119,131,44,-78,-113,-79,-114,44,44,44,44,44,44,44,-78,44,44,44,44,-78,44,-78,44,-116,-80,-117,-118,-78,-121,44,63,]),'MINUS':([3,23,24,36,41,64,70,71,87,88,89,90,91,92,93,94,95,100,101,114,115,116,117,118,119,122,123,133,134,135,136,143,144,175,],[45,64,-115,-120,-119,132,45,-78,-113,-79,-114,45,45,45,45,45,45,45,-78,45,45,45,45,-78,45,-78,45,-116,-80,-117,-118,-78,-121,45,]),'GTH':([3,23,24,36,41,71,87,88,89,100,101,133,134,135,136,143,144,],[46,56,-115,-120,-119,-78,-113,-79,-114,46,56,-116,-80,-117,-118,56,-121,]),'LTH':([3,23,24,36,41,71,87,88,89,100,101,133,134,135,136,143,144,],[47,57,-115,-120,-119,-78,-113,-79,-114,47,57,-116,-80,-117,-118,57,-121,]),'GTHOREQUAL':([3,23,24,36,41,71,87,88,89,100,101,133,134,135,136,143,144,],[48,58,-115,-120,-119,-78,-113,-79,-114,48,58,-116,-80,-117,-118,58,-121,]),'LTHOREQUAL':([3,23,24,36,41,71,87,88,89,100,101,133,134,135,136,143,144,],[49,59,-115,-120,-119,-78,-113,-79,-114,49,59,-116,-80,-117,-118,59,-121,]),'EQUALEQUAL':([3,23,24,36,41,71,87,88,89,100,101,133,134,135,136,143,144,],[50,60,-115,-120,-119,-78,-113,-79,-114,50,179,-116,-80,-117,-118,60,-121,]),'NOTEQUAL':([3,23,24,36,41,71,87,88,89,100,101,133,134,135,136,143,144,],[51,61,-115,-120,-119,-78,-113,-79,-114,51,180,-116,-80,-117,-118,61,-121,]),'AND':([11,12,24,28,29,36,41,71,87,88,89,90,91,92,93,94,95,114,115,116,117,118,119,122,123,133,134,135,136,138,139,144,],[52,54,-115,73,75,-120,-119,-78,-113,-79,-114,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-78,-91,-78,-92,-116,-80,-117,-118,52,54,-121,]),'OR':([11,12,24,28,29,36,41,71,87,88,89,90,91,92,93,94,95,114,115,116,117,118,119,122,123,133,134,135,136,138,139,144,],[53,55,-115,74,76,-120,-119,-78,-113,-79,-114,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-78,-91,-78,-92,-116,-80,-117,-118,53,55,-121,]),'EQUALS':([23,79,80,81,83,198,199,200,],[62,169,170,171,174,226,227,228,]),'TIMES':([23,24,36,41,71,87,88,89,101,118,122,133,134,135,136,143,144,],[-79,65,-120,-119,-79,65,-79,65,-79,-79,-79,-116,-80,-117,-118,-79,-121,]),'DIVIDE':([23,24,36,41,71,87,88,89,101,118,122,133,134,135,136,143,144,],[-79,66,-120,-119,-79,66,-79,66,-79,-79,-79,-116,-80,-117,-118,-79,-121,]),'MODULO':([23,24,36,41,71,87,88,89,101,118,122,133,134,135,136,143,144,],[-79,67,-120,-119,-79,67,-79,67,-79,-79,-79,-116,-80,-117,-118,-79,-121,]),'RPAREN':([24,25,36,41,70,71,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,168,175,176,177,178,186,236,237,238,254,256,257,258,],[-115,68,-120,-119,144,-78,-113,-79,-114,-81,-82,-83,-84,-85,-86,-31,-32,-33,-44,-47,-48,-49,-60,-40,-41,-42,-43,-56,-57,-58,-59,-87,-88,-89,-90,-78,-91,-94,-95,-78,-92,-97,-98,-116,-80,-117,-118,189,190,191,192,193,-121,194,195,196,-36,-34,-37,-45,-52,-50,-53,-61,-39,-35,-38,-46,-55,-51,-54,-62,201,212,213,214,215,-68,259,260,261,271,272,273,274,]),'STRING':([62,82,84,86,170,208,209,226,],[127,172,176,177,205,236,238,205,]),'INPUT':([169,170,171,],[202,204,206,]),'COMMA':([172,173,],[208,209,]),'LBRACE':([188,189,190,191,192,193,194,195,196,271,279,280,281,],[216,217,218,219,220,221,222,223,224,282,288,289,290,]),'ELSE':([262,263,264,265,],[278,279,280,281,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,216,217,218,219,220,221,222,223,224,282,288,289,290,],[1,245,246,247,248,249,250,251,252,253,291,292,293,294,]),'statement':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[2,42,2,2,2,2,2,2,2,2,2,42,42,42,42,42,42,42,42,42,2,2,2,2,42,42,42,42,]),'expression':([0,1,26,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,68,69,72,73,74,75,76,84,164,179,180,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[3,3,70,90,91,92,93,94,95,100,100,100,100,114,115,116,117,119,123,100,100,100,100,100,100,100,175,100,119,123,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'if_statement_elif':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'if_statement':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,278,282,288,289,290,291,292,293,294,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,287,5,5,5,5,5,5,5,5,]),'while_statement':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'for_statement':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'vartype_statement':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'input_statement':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'union_statement':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'comparison':([0,1,52,53,54,55,68,69,72,73,74,75,76,164,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[11,11,96,102,109,113,137,138,145,149,153,157,161,197,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'compare_id_value':([0,1,52,53,54,55,69,73,74,75,76,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[12,12,99,105,106,110,139,151,155,159,163,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'bool_comparison':([0,1,69,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[13,13,140,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'var_statement':([0,1,77,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[14,14,164,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'var_assign':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'var_inc':([0,1,216,217,218,219,220,221,222,223,224,225,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[16,16,16,16,16,16,16,16,16,16,16,254,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'var_dec':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'print_statement':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'break_statement':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'sizeof_statement':([0,1,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'and_statement':([0,1,69,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[21,21,141,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'or_statement':([0,1,69,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[22,22,142,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'term':([0,1,26,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,68,69,72,73,74,75,76,84,164,179,180,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[24,24,24,87,89,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'factor':([0,1,26,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,65,66,67,68,69,72,73,74,75,76,84,164,179,180,216,217,218,219,220,221,222,223,224,245,246,247,248,249,250,251,252,253,282,288,289,290,291,292,293,294,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,133,135,136,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements_multiple','Parser.py',110),
  ('statements -> statement','statements',1,'p_statements_single','Parser.py',116),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMICOL','print_statement',5,'p_statement_print','Parser.py',123),
  ('print_statement -> PRINT LPAREN STRING RPAREN SEMICOL','print_statement',5,'p_statement_print','Parser.py',124),
  ('vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL','vartype_statement',5,'p_statement_vartype','Parser.py',130),
  ('union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL','union_statement',7,'p_statement_union','Parser.py',142),
  ('union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL','union_statement',7,'p_statement_union_two','Parser.py',153),
  ('union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL','union_statement',7,'p_statement_union_three','Parser.py',178),
  ('sizeof_statement -> SIZEOF LPAREN STRING RPAREN SEMICOL','sizeof_statement',5,'p_string_size_statement','Parser.py',204),
  ('sizeof_statement -> SIZEOF LPAREN ID RPAREN SEMICOL','sizeof_statement',5,'p_id_size_statement','Parser.py',210),
  ('statement -> expression SEMICOL','statement',2,'p_statement_expr','Parser.py',218),
  ('statement -> if_statement_elif','statement',1,'p_statement_expr','Parser.py',219),
  ('statement -> if_statement','statement',1,'p_statement_expr','Parser.py',220),
  ('statement -> while_statement','statement',1,'p_statement_expr','Parser.py',221),
  ('statement -> for_statement','statement',1,'p_statement_expr','Parser.py',222),
  ('statement -> vartype_statement','statement',1,'p_statement_expr','Parser.py',223),
  ('statement -> input_statement','statement',1,'p_statement_expr','Parser.py',224),
  ('statement -> union_statement','statement',1,'p_statement_expr','Parser.py',225),
  ('statement -> comparison','statement',1,'p_statement_expr','Parser.py',226),
  ('statement -> compare_id_value','statement',1,'p_statement_expr','Parser.py',227),
  ('statement -> bool_comparison','statement',1,'p_statement_expr','Parser.py',228),
  ('statement -> var_statement','statement',1,'p_statement_expr','Parser.py',229),
  ('statement -> var_assign','statement',1,'p_statement_expr','Parser.py',230),
  ('statement -> var_inc','statement',1,'p_statement_expr','Parser.py',231),
  ('statement -> var_dec','statement',1,'p_statement_expr','Parser.py',232),
  ('statement -> print_statement','statement',1,'p_statement_expr','Parser.py',233),
  ('statement -> break_statement','statement',1,'p_statement_expr','Parser.py',234),
  ('statement -> sizeof_statement','statement',1,'p_statement_expr','Parser.py',235),
  ('statement -> and_statement','statement',1,'p_statement_expr','Parser.py',236),
  ('statement -> or_statement','statement',1,'p_statement_expr','Parser.py',237),
  ('and_statement -> comparison AND comparison','and_statement',3,'p_statement_and','Parser.py',251),
  ('and_statement -> comparison AND TRUE','and_statement',3,'p_statement_and','Parser.py',252),
  ('and_statement -> comparison AND FALSE','and_statement',3,'p_statement_and','Parser.py',253),
  ('and_statement -> TRUE AND comparison','and_statement',3,'p_statement_and','Parser.py',254),
  ('and_statement -> FALSE AND comparison','and_statement',3,'p_statement_and','Parser.py',255),
  ('and_statement -> TRUE AND TRUE','and_statement',3,'p_statement_and','Parser.py',256),
  ('and_statement -> TRUE AND FALSE','and_statement',3,'p_statement_and','Parser.py',257),
  ('and_statement -> FALSE AND TRUE','and_statement',3,'p_statement_and','Parser.py',258),
  ('and_statement -> FALSE AND FALSE','and_statement',3,'p_statement_and','Parser.py',259),
  ('and_statement -> compare_id_value AND compare_id_value','and_statement',3,'p_statement_and','Parser.py',260),
  ('and_statement -> compare_id_value AND TRUE','and_statement',3,'p_statement_and','Parser.py',261),
  ('and_statement -> compare_id_value AND FALSE','and_statement',3,'p_statement_and','Parser.py',262),
  ('and_statement -> compare_id_value AND comparison','and_statement',3,'p_statement_and','Parser.py',263),
  ('and_statement -> comparison AND compare_id_value','and_statement',3,'p_statement_and','Parser.py',264),
  ('and_statement -> TRUE AND compare_id_value','and_statement',3,'p_statement_and','Parser.py',265),
  ('and_statement -> FALSE AND compare_id_value','and_statement',3,'p_statement_and','Parser.py',266),
  ('or_statement -> comparison OR comparison','or_statement',3,'p_statement_or','Parser.py',280),
  ('or_statement -> comparison OR TRUE','or_statement',3,'p_statement_or','Parser.py',281),
  ('or_statement -> comparison OR FALSE','or_statement',3,'p_statement_or','Parser.py',282),
  ('or_statement -> TRUE OR comparison','or_statement',3,'p_statement_or','Parser.py',283),
  ('or_statement -> FALSE OR comparison','or_statement',3,'p_statement_or','Parser.py',284),
  ('or_statement -> TRUE OR TRUE','or_statement',3,'p_statement_or','Parser.py',285),
  ('or_statement -> TRUE OR FALSE','or_statement',3,'p_statement_or','Parser.py',286),
  ('or_statement -> FALSE OR TRUE','or_statement',3,'p_statement_or','Parser.py',287),
  ('or_statement -> FALSE OR FALSE','or_statement',3,'p_statement_or','Parser.py',288),
  ('or_statement -> compare_id_value OR compare_id_value','or_statement',3,'p_statement_or','Parser.py',289),
  ('or_statement -> compare_id_value OR TRUE','or_statement',3,'p_statement_or','Parser.py',290),
  ('or_statement -> compare_id_value OR FALSE','or_statement',3,'p_statement_or','Parser.py',291),
  ('or_statement -> compare_id_value OR comparison','or_statement',3,'p_statement_or','Parser.py',292),
  ('or_statement -> comparison OR compare_id_value','or_statement',3,'p_statement_or','Parser.py',293),
  ('or_statement -> TRUE OR compare_id_value','or_statement',3,'p_statement_or','Parser.py',294),
  ('or_statement -> FALSE OR compare_id_value','or_statement',3,'p_statement_or','Parser.py',295),
  ('var_assign -> ID EQUALS ID SEMICOL','var_assign',4,'p_statement_assign_var_id','Parser.py',306),
  ('var_assign -> ID EQUALS STRING SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',331),
  ('var_assign -> ID EQUALS NUMBER SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',332),
  ('var_assign -> ID EQUALS TRUE SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',333),
  ('var_assign -> ID EQUALS FALSE SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',334),
  ('var_inc -> ID PLUS PLUS SEMICOL','var_inc',4,'p_increment_var','Parser.py',369),
  ('var_dec -> ID MINUS MINUS SEMICOL','var_dec',4,'p_decrement_var','Parser.py',387),
  ('var_statement -> CHAR ID EQUALS STRING SEMICOL','var_statement',5,'p_statement_var','Parser.py',407),
  ('var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL','var_statement',5,'p_statement_var','Parser.py',408),
  ('var_statement -> INT ID EQUALS NUMBER SEMICOL','var_statement',5,'p_statement_var','Parser.py',409),
  ('var_statement -> BOOL ID EQUALS TRUE SEMICOL','var_statement',5,'p_statement_var','Parser.py',410),
  ('var_statement -> BOOL ID EQUALS FALSE SEMICOL','var_statement',5,'p_statement_var','Parser.py',411),
  ('input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL','input_statement',8,'p_input_statement','Parser.py',424),
  ('input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL','input_statement',8,'p_input_statement','Parser.py',425),
  ('input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL','input_statement',8,'p_input_statement','Parser.py',426),
  ('expression -> ID','expression',1,'p_variable_expression','Parser.py',464),
  ('term -> ID','term',1,'p_variable_expression','Parser.py',465),
  ('factor -> ID','factor',1,'p_variable_expression','Parser.py',466),
  ('comparison -> expression GTH expression','comparison',3,'p_expression_comparison','Parser.py',479),
  ('comparison -> expression LTH expression','comparison',3,'p_expression_comparison','Parser.py',480),
  ('comparison -> expression GTHOREQUAL expression','comparison',3,'p_expression_comparison','Parser.py',481),
  ('comparison -> expression LTHOREQUAL expression','comparison',3,'p_expression_comparison','Parser.py',482),
  ('comparison -> expression EQUALEQUAL expression','comparison',3,'p_expression_comparison','Parser.py',483),
  ('comparison -> expression NOTEQUAL expression','comparison',3,'p_expression_comparison','Parser.py',484),
  ('compare_id_value -> ID GTH expression','compare_id_value',3,'p_compare_id_value','Parser.py',524),
  ('compare_id_value -> ID LTH expression','compare_id_value',3,'p_compare_id_value','Parser.py',525),
  ('compare_id_value -> ID GTHOREQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',526),
  ('compare_id_value -> ID LTHOREQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',527),
  ('compare_id_value -> ID EQUALEQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',528),
  ('compare_id_value -> ID NOTEQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',529),
  ('bool_comparison -> ID EQUALEQUAL ID','bool_comparison',3,'p_bool_comparison','Parser.py',581),
  ('bool_comparison -> ID EQUALEQUAL TRUE','bool_comparison',3,'p_bool_comparison','Parser.py',582),
  ('bool_comparison -> ID EQUALEQUAL FALSE','bool_comparison',3,'p_bool_comparison','Parser.py',583),
  ('bool_comparison -> ID NOTEQUAL ID','bool_comparison',3,'p_bool_comparison','Parser.py',584),
  ('bool_comparison -> ID NOTEQUAL TRUE','bool_comparison',3,'p_bool_comparison','Parser.py',585),
  ('bool_comparison -> ID NOTEQUAL FALSE','bool_comparison',3,'p_bool_comparison','Parser.py',586),
  ('if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',639),
  ('if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',640),
  ('if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',641),
  ('if_statement -> IF LPAREN and_statement RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',642),
  ('if_statement -> IF LPAREN or_statement RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',643),
  ('if_statement_elif -> IF RPAREN comparison LPAREN LBRACE statements RBRACE ELSE if_statement','if_statement_elif',9,'p_if_else_if','Parser.py',659),
  ('if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_IF_ELSE','Parser.py',674),
  ('if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_IF_ELSE','Parser.py',675),
  ('if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_IF_ELSE','Parser.py',676),
  ('while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',699),
  ('while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',700),
  ('while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',701),
  ('for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE','for_statement',10,'p_FOR','Parser.py',708),
  ('break_statement -> BREAK SEMICOL','break_statement',2,'p_break_statement','Parser.py',716),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','Parser.py',723),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','Parser.py',727),
  ('expression -> term','expression',1,'p_expression_term','Parser.py',731),
  ('term -> term TIMES factor','term',3,'p_term_times','Parser.py',735),
  ('term -> term DIVIDE factor','term',3,'p_term_div','Parser.py',739),
  ('term -> term MODULO factor','term',3,'p_term_modulo','Parser.py',743),
  ('term -> factor','term',1,'p_term_factor','Parser.py',747),
  ('factor -> NUMBER','factor',1,'p_factor_num','Parser.py',751),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','Parser.py',755),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',760),
]
