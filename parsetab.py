
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BREAK CHAR COMMA CONTINUE DIVIDE ELSE EQUALEQUAL EQUALS FALSE FLOATTYPE FLOAT_CONST FOR FUNCTION GTH GTHOREQUAL ID IF INPUT INT INT_CONST LBRACE LPAREN LTH LTHOREQUAL MINUS MODULO NOTEQUAL NUMBER OR PLUS PRINT RBRACE RETURN RPAREN SEMICOL SIZEOF STRING TIMES TRUE UNION VAR_TYPE WHILE\n    statements : statements statement\n    \n    statements : statement\n    \n    print_statement : PRINT LPAREN expression RPAREN SEMICOL\n                    | PRINT LPAREN STRING RPAREN SEMICOL  \n    \n    vartype_statement : VAR_TYPE LPAREN ID RPAREN SEMICOL\n    \n    union_statement : UNION LPAREN STRING COMMA STRING RPAREN SEMICOL\n    \n    union_statement : UNION LPAREN STRING COMMA ID RPAREN SEMICOL\n    \n    union_statement : UNION LPAREN ID COMMA STRING RPAREN SEMICOL\n    \n    sizeof_statement : SIZEOF LPAREN STRING RPAREN SEMICOL\n    \n    sizeof_statement : SIZEOF LPAREN ID RPAREN SEMICOL\n    statement : expression SEMICOL\n                 | if_statement_elif\n                 | if_statement\n                 | while_statement\n                 | for_statement\n                 | vartype_statement\n                 | input_statement\n                 | union_statement\n                 | comparison\n                 | compare_id_value\n                 | compare_id_id\n                 | bool_comparison\n                 | var_statement\n                 | var_assign\n                 | var_inc\n                 | var_dec\n                 | print_statement\n                 | break_statement\n                 | sizeof_statement\n                 | and_statement\n                 | or_statement\n                 \n    and_statement : comparison AND comparison\n                  | comparison AND TRUE\n                  | comparison AND FALSE\n                  | TRUE AND comparison\n                  | FALSE AND comparison\n                  | TRUE AND TRUE\n                  | TRUE AND FALSE\n                  | FALSE AND TRUE\n                  | FALSE AND FALSE\n                  | compare_id_value AND compare_id_value\n                  | compare_id_value AND TRUE\n                  | compare_id_value AND FALSE\n                  | compare_id_value AND comparison\n                  | comparison AND compare_id_value\n                  | TRUE AND compare_id_value\n                  | FALSE AND compare_id_value\n\n    \n    or_statement  : comparison OR comparison\n                  | comparison OR TRUE\n                  | comparison OR FALSE\n                  | TRUE OR comparison\n                  | FALSE OR comparison\n                  | TRUE OR TRUE\n                  | TRUE OR FALSE\n                  | FALSE OR TRUE\n                  | FALSE OR FALSE\n                  | compare_id_value OR compare_id_value\n                  | compare_id_value OR TRUE\n                  | compare_id_value OR FALSE\n                  | compare_id_value OR comparison\n                  | comparison OR compare_id_value\n                  | TRUE OR compare_id_value\n                  | FALSE OR compare_id_value\n\n    \n    var_assign : ID EQUALS ID SEMICOL\n    \n    var_assign : ID EQUALS STRING SEMICOL\n               | ID EQUALS NUMBER SEMICOL\n               | ID EQUALS TRUE SEMICOL\n               | ID EQUALS FALSE SEMICOL\n               | ID EQUALS expression SEMICOL\n    \n    var_inc : ID PLUS PLUS SEMICOL\n    \n    var_dec : ID MINUS MINUS SEMICOL\n    \n    var_statement : CHAR ID EQUALS STRING SEMICOL\n                  | FLOATTYPE ID EQUALS NUMBER SEMICOL\n                  | INT ID EQUALS NUMBER SEMICOL\n                  | BOOL ID EQUALS TRUE SEMICOL\n                  | BOOL ID EQUALS FALSE SEMICOL\n    \n        input_statement : INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL\n                        | CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL\n                        | FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL\n    \n    expression : ID\n    term : ID\n    factor : ID\n    \n    comparison : expression GTH expression\n                  | expression LTH expression\n                  | expression GTHOREQUAL expression\n                  | expression LTHOREQUAL expression\n                  | expression EQUALEQUAL expression\n                  | expression NOTEQUAL expression\n    \n        compare_id_id : ID GTH ID\n                      | ID LTH ID\n                      | ID GTHOREQUAL ID\n                      | ID LTHOREQUAL ID\n                      | ID EQUALEQUAL ID\n                      | ID NOTEQUAL ID\n    \n        compare_id_value : ID GTH expression\n                         | ID LTH expression\n                         | ID GTHOREQUAL expression\n                         | ID LTHOREQUAL expression\n                         | ID EQUALEQUAL expression\n                         | ID NOTEQUAL expression \n    \n        bool_comparison : ID EQUALEQUAL ID\n                        | ID EQUALEQUAL TRUE\n                        | ID EQUALEQUAL FALSE\n                        | ID NOTEQUAL ID\n                        | ID NOTEQUAL TRUE\n                        | ID NOTEQUAL FALSE\n    \n        if_statement : IF LPAREN comparison RPAREN LBRACE statements RBRACE\n                     | IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE\n                     | IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE\n                     | IF LPAREN and_statement RPAREN LBRACE statements RBRACE\n                     | IF LPAREN or_statement RPAREN LBRACE statements RBRACE\n    \n    if_statement_elif : IF RPAREN comparison LPAREN LBRACE statements RBRACE ELSE if_statement\n    \n        if_statement : IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n                     | IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n                     | IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n    \n        while_statement : WHILE LPAREN comparison RPAREN LBRACE statements RBRACE\n                        | WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE\n                        | WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE\n    \n        for_statement : FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE\n    \n        break_statement : BREAK SEMICOL\n    expression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term MODULO factorterm : factorfactor : NUMBERfactor : LPAREN expression RPARENempty :'
    
_lr_action_items = {'ID':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,33,34,35,37,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,70,72,73,74,75,76,77,79,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,185,186,187,188,189,190,191,192,193,194,195,196,197,198,205,206,221,229,230,231,232,233,234,237,238,239,240,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[24,24,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,72,80,81,82,-128,84,-127,-1,-11,89,89,72,72,72,72,72,72,102,102,102,102,115,117,119,121,123,127,131,140,140,140,72,149,-80,72,102,102,102,102,174,179,72,-120,184,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,72,211,212,213,72,72,72,72,72,72,-64,-65,-66,-67,-68,-69,-70,-71,235,236,252,24,24,24,24,24,24,24,24,24,270,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,24,24,24,24,24,24,24,24,24,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,24,-77,-78,-79,-112,24,24,24,24,24,24,24,-119,-113,-115,-114,]),'IF':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,229,230,231,232,233,234,237,238,239,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,293,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[26,26,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,26,26,26,26,26,26,26,26,26,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,26,26,26,26,26,26,26,26,26,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,301,26,-77,-78,-79,-112,26,26,26,26,26,26,26,-119,-113,-115,-114,]),'WHILE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,229,230,231,232,233,234,237,238,239,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[28,28,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,28,28,28,28,28,28,28,28,28,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,28,28,28,28,28,28,28,28,28,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,28,-77,-78,-79,-112,28,28,28,28,28,28,28,-119,-113,-115,-114,]),'FOR':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,229,230,231,232,233,234,237,238,239,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[31,31,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,31,31,31,31,31,31,31,31,31,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,31,31,31,31,31,31,31,31,31,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,31,-77,-78,-79,-112,31,31,31,31,31,31,31,-119,-113,-115,-114,]),'VAR_TYPE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,229,230,231,232,233,234,237,238,239,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[32,32,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,32,32,32,32,32,32,32,32,32,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,32,32,32,32,32,32,32,32,32,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,32,-77,-78,-79,-112,32,32,32,32,32,32,32,-119,-113,-115,-114,]),'INT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,78,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,229,230,231,232,233,234,237,238,239,244,245,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[33,33,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,173,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,33,33,33,33,33,33,33,33,33,-5,271,-74,-72,-73,-75,-76,-3,-4,-9,-10,33,33,33,33,33,33,33,33,33,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,33,-77,-78,-79,-112,33,33,33,33,33,33,33,-119,-113,-115,-114,]),'CHAR':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,78,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,229,230,231,232,233,234,237,238,239,244,246,247,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[34,34,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,171,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,34,34,34,34,34,34,34,34,34,-5,-74,272,-72,-73,-75,-76,-3,-4,-9,-10,34,34,34,34,34,34,34,34,34,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,34,-77,-78,-79,-112,34,34,34,34,34,34,34,-119,-113,-115,-114,]),'FLOATTYPE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,78,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,229,230,231,232,233,234,237,238,239,244,246,248,249,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[35,35,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,172,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,35,35,35,35,35,35,35,35,35,-5,-74,-72,273,-73,-75,-76,-3,-4,-9,-10,35,35,35,35,35,35,35,35,35,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,35,-77,-78,-79,-112,35,35,35,35,35,35,35,-119,-113,-115,-114,]),'UNION':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,229,230,231,232,233,234,237,238,239,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[36,36,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,36,36,36,36,36,36,36,36,36,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,36,36,36,36,36,36,36,36,36,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,36,-77,-78,-79,-112,36,36,36,36,36,36,36,-119,-113,-115,-114,]),'BOOL':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,78,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,229,230,231,232,233,234,237,238,239,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[38,38,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,38,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,38,38,38,38,38,38,38,38,38,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,38,38,38,38,38,38,38,38,38,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,38,-77,-78,-79,-112,38,38,38,38,38,38,38,-119,-113,-115,-114,]),'PRINT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,229,230,231,232,233,234,237,238,239,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[39,39,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,39,39,39,39,39,39,39,39,39,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,39,39,39,39,39,39,39,39,39,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,39,-77,-78,-79,-112,39,39,39,39,39,39,39,-119,-113,-115,-114,]),'BREAK':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,229,230,231,232,233,234,237,238,239,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[40,40,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,40,40,40,40,40,40,40,40,40,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,40,40,40,40,40,40,40,40,40,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,40,-77,-78,-79,-112,40,40,40,40,40,40,40,-119,-113,-115,-114,]),'SIZEOF':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,229,230,231,232,233,234,237,238,239,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[41,41,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,41,41,41,41,41,41,41,41,41,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,41,41,41,41,41,41,41,41,41,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,41,-77,-78,-79,-112,41,41,41,41,41,41,41,-119,-113,-115,-114,]),'TRUE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,53,54,55,56,61,62,63,70,72,73,74,75,76,77,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,180,191,192,193,194,195,196,197,198,205,206,229,230,231,232,233,234,237,238,239,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[29,29,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,98,104,108,112,125,129,134,29,-80,152,154,158,164,168,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,223,-64,-65,-66,-67,-68,-69,-70,-71,125,129,29,29,29,29,29,29,29,29,29,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,29,29,29,29,29,29,29,29,29,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,29,-77,-78,-79,-112,29,29,29,29,29,29,29,-119,-113,-115,-114,]),'FALSE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,53,54,55,56,61,62,63,70,72,73,74,75,76,77,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,180,191,192,193,194,195,196,197,198,205,206,229,230,231,232,233,234,237,238,239,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[30,30,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,99,105,109,113,126,130,135,30,-80,153,156,160,162,166,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,224,-64,-65,-66,-67,-68,-69,-70,-71,126,130,30,30,30,30,30,30,30,30,30,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,30,30,30,30,30,30,30,30,30,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,30,-77,-78,-79,-112,30,30,30,30,30,30,30,-119,-113,-115,-114,]),'NUMBER':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,27,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,70,72,73,74,75,76,77,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,175,177,185,186,187,188,189,190,191,192,193,194,195,196,197,198,205,206,229,230,231,232,233,234,237,238,239,242,243,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,],[37,37,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,37,-128,-127,-1,-11,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,133,37,37,37,37,37,-80,37,37,37,37,37,37,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,37,216,220,37,37,37,37,37,37,-64,-65,-66,-67,-68,-69,-70,-71,37,37,37,37,37,37,37,37,37,37,37,220,216,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,37,37,37,37,37,37,37,37,37,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,37,-77,-78,-79,-112,37,37,37,37,37,37,37,-119,-113,-115,-114,]),'LPAREN':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,31,32,36,37,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,70,72,73,74,75,76,77,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,143,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,185,186,187,188,189,190,191,192,193,194,195,196,197,198,205,206,215,217,219,229,230,231,232,233,234,237,238,239,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,],[27,27,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,70,27,73,78,79,83,-128,85,87,-127,-1,-11,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-80,27,27,27,27,27,27,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,199,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,27,27,27,27,27,27,27,-64,-65,-66,-67,-68,-69,-70,-71,27,27,245,247,249,27,27,27,27,27,27,27,27,27,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,27,27,27,27,27,27,27,27,27,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,27,-77,-78,-79,70,-112,27,27,27,27,27,27,27,-119,-113,-115,-114,]),'$end':([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,244,246,248,250,254,255,256,257,258,259,278,279,280,281,282,283,284,285,290,291,292,298,299,300,302,310,311,312,313,],[0,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,-77,-78,-79,-112,-119,-113,-115,-114,]),'RBRACE':([2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,37,42,43,44,72,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,139,140,141,142,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,191,192,193,194,195,196,197,198,244,246,248,250,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,278,279,280,281,282,283,284,285,290,291,292,298,299,300,302,306,307,308,309,310,311,312,313,],[-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-123,-128,-127,-1,-11,-80,-120,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-102,-103,-80,-100,-105,-106,-124,-82,-125,-126,-129,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,-64,-65,-66,-67,-68,-69,-70,-71,-5,-74,-72,-73,-75,-76,-3,-4,-9,-10,277,278,279,280,281,282,283,284,285,-107,-108,-109,-110,-111,-116,-117,-118,-6,-7,-8,-77,-78,-79,-112,310,311,312,313,-119,-113,-115,-114,]),'SEMICOL':([3,24,25,37,40,42,72,88,89,90,91,92,93,94,95,96,131,132,133,134,135,136,137,138,139,140,141,142,150,210,214,216,218,220,223,224,225,226,227,228,274,275,276,287,288,289,],[44,-80,-123,-128,86,-127,-80,-121,-81,-122,-83,-84,-85,-86,-87,-88,191,192,193,194,195,196,197,198,-124,-82,-125,-126,-129,240,244,246,248,250,254,255,256,257,258,259,290,291,292,298,299,300,]),'PLUS':([3,24,25,37,42,64,71,72,88,89,90,91,92,93,94,95,96,101,102,115,116,117,118,119,120,121,122,123,124,127,128,131,133,136,139,140,141,142,149,150,181,235,236,270,],[45,64,-123,-128,-127,137,45,-80,-121,-81,-122,45,45,45,45,45,45,45,-80,-80,45,-80,45,-80,45,-80,45,-80,45,-80,45,-80,-128,45,-124,-82,-125,-126,-80,-129,45,-80,-80,64,]),'MINUS':([3,24,25,37,42,65,71,72,88,89,90,91,92,93,94,95,96,101,102,115,116,117,118,119,120,121,122,123,124,127,128,131,133,136,139,140,141,142,149,150,181,235,236,],[46,65,-123,-128,-127,138,46,-80,-121,-81,-122,46,46,46,46,46,46,46,-80,-80,46,-80,46,-80,46,-80,46,-80,46,-80,46,-80,-128,46,-124,-82,-125,-126,-80,-129,46,-80,-80,]),'GTH':([3,24,25,37,42,72,88,89,90,101,102,139,140,141,142,149,150,],[47,57,-123,-128,-127,-80,-121,-81,-122,47,185,-124,-82,-125,-126,185,-129,]),'LTH':([3,24,25,37,42,72,88,89,90,101,102,139,140,141,142,149,150,],[48,58,-123,-128,-127,-80,-121,-81,-122,48,186,-124,-82,-125,-126,186,-129,]),'GTHOREQUAL':([3,24,25,37,42,72,88,89,90,101,102,139,140,141,142,149,150,],[49,59,-123,-128,-127,-80,-121,-81,-122,49,187,-124,-82,-125,-126,187,-129,]),'LTHOREQUAL':([3,24,25,37,42,72,88,89,90,101,102,139,140,141,142,149,150,],[50,60,-123,-128,-127,-80,-121,-81,-122,50,188,-124,-82,-125,-126,188,-129,]),'EQUALEQUAL':([3,24,25,37,42,72,88,89,90,101,102,139,140,141,142,149,150,],[51,61,-123,-128,-127,-80,-121,-81,-122,51,189,-124,-82,-125,-126,205,-129,]),'NOTEQUAL':([3,24,25,37,42,72,88,89,90,101,102,139,140,141,142,149,150,],[52,62,-123,-128,-127,-80,-121,-81,-122,52,190,-124,-82,-125,-126,206,-129,]),'AND':([11,12,25,29,30,37,42,72,88,89,90,91,92,93,94,95,96,115,116,117,118,119,120,121,122,123,124,127,128,139,140,141,142,144,145,150,235,236,],[53,55,-123,74,76,-128,-127,-80,-121,-81,-122,-83,-84,-85,-86,-87,-88,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-80,-100,-124,-82,-125,-126,53,55,-129,-80,-80,]),'OR':([11,12,25,29,30,37,42,72,88,89,90,91,92,93,94,95,96,115,116,117,118,119,120,121,122,123,124,127,128,139,140,141,142,144,145,150,235,236,],[54,56,-123,75,77,-128,-127,-80,-121,-81,-122,-83,-84,-85,-86,-87,-88,-80,-95,-80,-96,-80,-97,-80,-98,-80,-99,-80,-100,-124,-82,-125,-126,54,56,-129,-80,-80,]),'EQUALS':([24,80,81,82,84,211,212,213,],[63,175,176,177,180,241,242,243,]),'TIMES':([24,25,37,42,72,88,89,90,102,115,117,119,121,123,127,131,133,139,140,141,142,149,150,235,236,],[-81,66,-128,-127,-81,66,-81,66,-81,-81,-81,-81,-81,-81,-81,-81,-128,-124,-82,-125,-126,-81,-129,-81,-81,]),'DIVIDE':([24,25,37,42,72,88,89,90,102,115,117,119,121,123,127,131,133,139,140,141,142,149,150,235,236,],[-81,67,-128,-127,-81,67,-81,67,-81,-81,-81,-81,-81,-81,-81,-81,-128,-124,-82,-125,-126,-81,-129,-81,-81,]),'MODULO':([24,25,37,42,72,88,89,90,102,115,117,119,121,123,127,131,133,139,140,141,142,149,150,235,236,],[-81,68,-128,-127,-81,68,-81,68,-81,-81,-81,-81,-81,-81,-81,-81,-128,-124,-82,-125,-126,-81,-129,-81,-81,]),'RPAREN':([25,26,37,42,71,72,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,116,118,120,122,124,125,126,128,129,130,139,140,141,142,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,174,181,182,183,184,197,235,236,251,252,253,269,271,272,273,],[-123,69,-128,-127,150,-80,-121,-81,-122,-83,-84,-85,-86,-87,-88,-32,-33,-34,-45,-48,-49,-50,-61,-41,-42,-43,-44,-57,-58,-59,-60,-95,-96,-97,-98,-99,-102,-103,-100,-105,-106,-124,-82,-125,-126,200,201,202,203,204,-129,207,208,209,-37,-35,-38,-46,-53,-51,-54,-62,-40,-36,-39,-47,-56,-52,-55,-63,214,225,226,227,228,-70,-80,-80,274,275,276,286,287,288,289,]),'STRING':([63,83,85,87,176,221,222,241,],[132,178,182,183,218,251,253,218,]),'INPUT':([175,176,177,],[215,217,219,]),'COMMA':([178,179,],[221,222,]),'LBRACE':([199,200,201,202,203,204,207,208,209,286,294,295,296,],[229,230,231,232,233,234,237,238,239,297,303,304,305,]),'ELSE':([277,278,279,280,],[293,294,295,296,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,229,230,231,232,233,234,237,238,239,297,303,304,305,],[1,260,261,262,263,264,265,266,267,268,306,307,308,309,]),'statement':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[2,43,2,2,2,2,2,2,2,2,2,43,43,43,43,43,43,43,43,43,2,2,2,2,43,43,43,43,]),'expression':([0,1,27,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,69,70,73,74,75,76,77,85,170,185,186,187,188,189,190,205,206,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[3,3,71,91,92,93,94,95,96,101,101,101,101,116,118,120,122,124,128,136,101,101,101,101,101,101,101,181,101,116,118,120,122,124,128,124,128,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'if_statement_elif':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'if_statement':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,293,297,303,304,305,306,307,308,309,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,302,5,5,5,5,5,5,5,5,]),'while_statement':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'for_statement':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'vartype_statement':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'input_statement':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'union_statement':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'comparison':([0,1,53,54,55,56,69,70,73,74,75,76,77,170,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[11,11,97,103,110,114,143,144,151,155,159,163,167,210,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'compare_id_value':([0,1,53,54,55,56,70,74,75,76,77,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[12,12,100,106,107,111,145,157,161,165,169,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'compare_id_id':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'bool_comparison':([0,1,70,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[14,14,146,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'var_statement':([0,1,78,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[15,15,170,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'var_assign':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'var_inc':([0,1,229,230,231,232,233,234,237,238,239,240,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[17,17,17,17,17,17,17,17,17,17,17,269,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'var_dec':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'print_statement':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'break_statement':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'sizeof_statement':([0,1,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'and_statement':([0,1,70,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[22,22,147,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'or_statement':([0,1,70,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[23,23,148,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'term':([0,1,27,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,69,70,73,74,75,76,77,85,170,185,186,187,188,189,190,205,206,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[25,25,25,88,90,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'factor':([0,1,27,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,70,73,74,75,76,77,85,170,185,186,187,188,189,190,205,206,229,230,231,232,233,234,237,238,239,260,261,262,263,264,265,266,267,268,297,303,304,305,306,307,308,309,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,139,141,142,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements_multiple','Parser.py',133),
  ('statements -> statement','statements',1,'p_statements_single','Parser.py',140),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMICOL','print_statement',5,'p_statement_print','Parser.py',149),
  ('print_statement -> PRINT LPAREN STRING RPAREN SEMICOL','print_statement',5,'p_statement_print','Parser.py',150),
  ('vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL','vartype_statement',5,'p_statement_vartype','Parser.py',163),
  ('union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL','union_statement',7,'p_statement_union','Parser.py',176),
  ('union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL','union_statement',7,'p_statement_union_two','Parser.py',188),
  ('union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL','union_statement',7,'p_statement_union_three','Parser.py',214),
  ('sizeof_statement -> SIZEOF LPAREN STRING RPAREN SEMICOL','sizeof_statement',5,'p_string_size_statement','Parser.py',242),
  ('sizeof_statement -> SIZEOF LPAREN ID RPAREN SEMICOL','sizeof_statement',5,'p_id_size_statement','Parser.py',249),
  ('statement -> expression SEMICOL','statement',2,'p_statement_expr','Parser.py',259),
  ('statement -> if_statement_elif','statement',1,'p_statement_expr','Parser.py',260),
  ('statement -> if_statement','statement',1,'p_statement_expr','Parser.py',261),
  ('statement -> while_statement','statement',1,'p_statement_expr','Parser.py',262),
  ('statement -> for_statement','statement',1,'p_statement_expr','Parser.py',263),
  ('statement -> vartype_statement','statement',1,'p_statement_expr','Parser.py',264),
  ('statement -> input_statement','statement',1,'p_statement_expr','Parser.py',265),
  ('statement -> union_statement','statement',1,'p_statement_expr','Parser.py',266),
  ('statement -> comparison','statement',1,'p_statement_expr','Parser.py',267),
  ('statement -> compare_id_value','statement',1,'p_statement_expr','Parser.py',268),
  ('statement -> compare_id_id','statement',1,'p_statement_expr','Parser.py',269),
  ('statement -> bool_comparison','statement',1,'p_statement_expr','Parser.py',270),
  ('statement -> var_statement','statement',1,'p_statement_expr','Parser.py',271),
  ('statement -> var_assign','statement',1,'p_statement_expr','Parser.py',272),
  ('statement -> var_inc','statement',1,'p_statement_expr','Parser.py',273),
  ('statement -> var_dec','statement',1,'p_statement_expr','Parser.py',274),
  ('statement -> print_statement','statement',1,'p_statement_expr','Parser.py',275),
  ('statement -> break_statement','statement',1,'p_statement_expr','Parser.py',276),
  ('statement -> sizeof_statement','statement',1,'p_statement_expr','Parser.py',277),
  ('statement -> and_statement','statement',1,'p_statement_expr','Parser.py',278),
  ('statement -> or_statement','statement',1,'p_statement_expr','Parser.py',279),
  ('and_statement -> comparison AND comparison','and_statement',3,'p_statement_and','Parser.py',295),
  ('and_statement -> comparison AND TRUE','and_statement',3,'p_statement_and','Parser.py',296),
  ('and_statement -> comparison AND FALSE','and_statement',3,'p_statement_and','Parser.py',297),
  ('and_statement -> TRUE AND comparison','and_statement',3,'p_statement_and','Parser.py',298),
  ('and_statement -> FALSE AND comparison','and_statement',3,'p_statement_and','Parser.py',299),
  ('and_statement -> TRUE AND TRUE','and_statement',3,'p_statement_and','Parser.py',300),
  ('and_statement -> TRUE AND FALSE','and_statement',3,'p_statement_and','Parser.py',301),
  ('and_statement -> FALSE AND TRUE','and_statement',3,'p_statement_and','Parser.py',302),
  ('and_statement -> FALSE AND FALSE','and_statement',3,'p_statement_and','Parser.py',303),
  ('and_statement -> compare_id_value AND compare_id_value','and_statement',3,'p_statement_and','Parser.py',304),
  ('and_statement -> compare_id_value AND TRUE','and_statement',3,'p_statement_and','Parser.py',305),
  ('and_statement -> compare_id_value AND FALSE','and_statement',3,'p_statement_and','Parser.py',306),
  ('and_statement -> compare_id_value AND comparison','and_statement',3,'p_statement_and','Parser.py',307),
  ('and_statement -> comparison AND compare_id_value','and_statement',3,'p_statement_and','Parser.py',308),
  ('and_statement -> TRUE AND compare_id_value','and_statement',3,'p_statement_and','Parser.py',309),
  ('and_statement -> FALSE AND compare_id_value','and_statement',3,'p_statement_and','Parser.py',310),
  ('or_statement -> comparison OR comparison','or_statement',3,'p_statement_or','Parser.py',325),
  ('or_statement -> comparison OR TRUE','or_statement',3,'p_statement_or','Parser.py',326),
  ('or_statement -> comparison OR FALSE','or_statement',3,'p_statement_or','Parser.py',327),
  ('or_statement -> TRUE OR comparison','or_statement',3,'p_statement_or','Parser.py',328),
  ('or_statement -> FALSE OR comparison','or_statement',3,'p_statement_or','Parser.py',329),
  ('or_statement -> TRUE OR TRUE','or_statement',3,'p_statement_or','Parser.py',330),
  ('or_statement -> TRUE OR FALSE','or_statement',3,'p_statement_or','Parser.py',331),
  ('or_statement -> FALSE OR TRUE','or_statement',3,'p_statement_or','Parser.py',332),
  ('or_statement -> FALSE OR FALSE','or_statement',3,'p_statement_or','Parser.py',333),
  ('or_statement -> compare_id_value OR compare_id_value','or_statement',3,'p_statement_or','Parser.py',334),
  ('or_statement -> compare_id_value OR TRUE','or_statement',3,'p_statement_or','Parser.py',335),
  ('or_statement -> compare_id_value OR FALSE','or_statement',3,'p_statement_or','Parser.py',336),
  ('or_statement -> compare_id_value OR comparison','or_statement',3,'p_statement_or','Parser.py',337),
  ('or_statement -> comparison OR compare_id_value','or_statement',3,'p_statement_or','Parser.py',338),
  ('or_statement -> TRUE OR compare_id_value','or_statement',3,'p_statement_or','Parser.py',339),
  ('or_statement -> FALSE OR compare_id_value','or_statement',3,'p_statement_or','Parser.py',340),
  ('var_assign -> ID EQUALS ID SEMICOL','var_assign',4,'p_statement_assign_var_id','Parser.py',353),
  ('var_assign -> ID EQUALS STRING SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',378),
  ('var_assign -> ID EQUALS NUMBER SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',379),
  ('var_assign -> ID EQUALS TRUE SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',380),
  ('var_assign -> ID EQUALS FALSE SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',381),
  ('var_assign -> ID EQUALS expression SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',382),
  ('var_inc -> ID PLUS PLUS SEMICOL','var_inc',4,'p_increment_var','Parser.py',419),
  ('var_dec -> ID MINUS MINUS SEMICOL','var_dec',4,'p_decrement_var','Parser.py',440),
  ('var_statement -> CHAR ID EQUALS STRING SEMICOL','var_statement',5,'p_statement_var','Parser.py',460),
  ('var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL','var_statement',5,'p_statement_var','Parser.py',461),
  ('var_statement -> INT ID EQUALS NUMBER SEMICOL','var_statement',5,'p_statement_var','Parser.py',462),
  ('var_statement -> BOOL ID EQUALS TRUE SEMICOL','var_statement',5,'p_statement_var','Parser.py',463),
  ('var_statement -> BOOL ID EQUALS FALSE SEMICOL','var_statement',5,'p_statement_var','Parser.py',464),
  ('input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL','input_statement',8,'p_input_statement','Parser.py',477),
  ('input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL','input_statement',8,'p_input_statement','Parser.py',478),
  ('input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL','input_statement',8,'p_input_statement','Parser.py',479),
  ('expression -> ID','expression',1,'p_variable_expression','Parser.py',518),
  ('term -> ID','term',1,'p_variable_expression','Parser.py',519),
  ('factor -> ID','factor',1,'p_variable_expression','Parser.py',520),
  ('comparison -> expression GTH expression','comparison',3,'p_expression_comparison','Parser.py',533),
  ('comparison -> expression LTH expression','comparison',3,'p_expression_comparison','Parser.py',534),
  ('comparison -> expression GTHOREQUAL expression','comparison',3,'p_expression_comparison','Parser.py',535),
  ('comparison -> expression LTHOREQUAL expression','comparison',3,'p_expression_comparison','Parser.py',536),
  ('comparison -> expression EQUALEQUAL expression','comparison',3,'p_expression_comparison','Parser.py',537),
  ('comparison -> expression NOTEQUAL expression','comparison',3,'p_expression_comparison','Parser.py',538),
  ('compare_id_id -> ID GTH ID','compare_id_id',3,'p_compare_id_id','Parser.py',578),
  ('compare_id_id -> ID LTH ID','compare_id_id',3,'p_compare_id_id','Parser.py',579),
  ('compare_id_id -> ID GTHOREQUAL ID','compare_id_id',3,'p_compare_id_id','Parser.py',580),
  ('compare_id_id -> ID LTHOREQUAL ID','compare_id_id',3,'p_compare_id_id','Parser.py',581),
  ('compare_id_id -> ID EQUALEQUAL ID','compare_id_id',3,'p_compare_id_id','Parser.py',582),
  ('compare_id_id -> ID NOTEQUAL ID','compare_id_id',3,'p_compare_id_id','Parser.py',583),
  ('compare_id_value -> ID GTH expression','compare_id_value',3,'p_compare_id_value','Parser.py',604),
  ('compare_id_value -> ID LTH expression','compare_id_value',3,'p_compare_id_value','Parser.py',605),
  ('compare_id_value -> ID GTHOREQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',606),
  ('compare_id_value -> ID LTHOREQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',607),
  ('compare_id_value -> ID EQUALEQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',608),
  ('compare_id_value -> ID NOTEQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',609),
  ('bool_comparison -> ID EQUALEQUAL ID','bool_comparison',3,'p_bool_comparison','Parser.py',663),
  ('bool_comparison -> ID EQUALEQUAL TRUE','bool_comparison',3,'p_bool_comparison','Parser.py',664),
  ('bool_comparison -> ID EQUALEQUAL FALSE','bool_comparison',3,'p_bool_comparison','Parser.py',665),
  ('bool_comparison -> ID NOTEQUAL ID','bool_comparison',3,'p_bool_comparison','Parser.py',666),
  ('bool_comparison -> ID NOTEQUAL TRUE','bool_comparison',3,'p_bool_comparison','Parser.py',667),
  ('bool_comparison -> ID NOTEQUAL FALSE','bool_comparison',3,'p_bool_comparison','Parser.py',668),
  ('if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',721),
  ('if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',722),
  ('if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',723),
  ('if_statement -> IF LPAREN and_statement RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',724),
  ('if_statement -> IF LPAREN or_statement RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',725),
  ('if_statement_elif -> IF RPAREN comparison LPAREN LBRACE statements RBRACE ELSE if_statement','if_statement_elif',9,'p_if_else_if','Parser.py',741),
  ('if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_IF_ELSE','Parser.py',757),
  ('if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_IF_ELSE','Parser.py',758),
  ('if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_IF_ELSE','Parser.py',759),
  ('while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',782),
  ('while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',783),
  ('while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',784),
  ('for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE','for_statement',10,'p_FOR','Parser.py',793),
  ('break_statement -> BREAK SEMICOL','break_statement',2,'p_break_statement','Parser.py',803),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','Parser.py',810),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','Parser.py',815),
  ('expression -> term','expression',1,'p_expression_term','Parser.py',820),
  ('term -> term TIMES factor','term',3,'p_term_times','Parser.py',825),
  ('term -> term DIVIDE factor','term',3,'p_term_div','Parser.py',830),
  ('term -> term MODULO factor','term',3,'p_term_modulo','Parser.py',835),
  ('term -> factor','term',1,'p_term_factor','Parser.py',840),
  ('factor -> NUMBER','factor',1,'p_factor_num','Parser.py',845),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','Parser.py',850),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',857),
]
