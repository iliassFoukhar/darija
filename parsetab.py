
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL BREAK CHAR COMMA CONTINUE DIVIDE ELSE EQUALEQUAL EQUALS FALSE FLOATTYPE FLOAT_CONST FOR GTH GTHOREQUAL ID IF INPUT INT INT_CONST LBRACE LPAREN LTH LTHOREQUAL MINUS MODULO NOTEQUAL NUMBER PLUS PRINT RBRACE RETURN RPAREN SEMICOL SIZEOF STRING TIMES TRUE UNION VAR_TYPE VOID WHILE\n    statements : statements statement\n    \n    statements : statement\n    \n    print_statement : PRINT LPAREN expression RPAREN SEMICOL\n                    | PRINT LPAREN STRING RPAREN SEMICOL  \n    \n    vartype_statement : VAR_TYPE LPAREN ID RPAREN SEMICOL\n    \n    union_statement : UNION LPAREN STRING COMMA STRING RPAREN SEMICOL\n    \n    union_statement : UNION LPAREN STRING COMMA ID RPAREN SEMICOL\n    \n    union_statement : UNION LPAREN ID COMMA STRING RPAREN SEMICOL\n    \n    sizeof_statement : SIZEOF LPAREN STRING RPAREN SEMICOL\n    \n    sizeof_statement : SIZEOF LPAREN ID RPAREN SEMICOL\n    statement : expression SEMICOL\n                 | if_statement\n                 | while_statement\n                 | for_statement\n                 | vartype_statement\n                 | input_statement\n                 | union_statement\n                 | comparison\n                 | compare_id_value\n                 | bool_comparison\n                 | var_statement\n                 | var_assign\n                 | var_inc\n                 | var_dec\n                 | print_statement\n                 | break_statement\n                 | sizeof_statement\n                 \n    var_assign : ID EQUALS ID SEMICOL\n    \n    var_assign : ID EQUALS STRING SEMICOL\n               | ID EQUALS NUMBER SEMICOL\n               | ID EQUALS TRUE SEMICOL\n               | ID EQUALS FALSE SEMICOL\n    \n    var_inc : ID PLUS PLUS SEMICOL\n    \n    var_dec : ID MINUS MINUS SEMICOL\n    \n    var_statement : CHAR ID EQUALS STRING SEMICOL\n                  | FLOATTYPE ID EQUALS NUMBER SEMICOL\n                  | INT ID EQUALS NUMBER SEMICOL\n                  | BOOL ID EQUALS TRUE SEMICOL\n                  | BOOL ID EQUALS FALSE SEMICOL\n    \n        input_statement : INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL\n                        | CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL\n                        | FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL\n    \n    expression : ID\n    term : ID\n    factor : ID\n    \n    comparison : expression GTH expression\n                  | expression LTH expression\n                  | expression GTHOREQUAL expression\n                  | expression LTHOREQUAL expression\n                  | expression EQUALEQUAL expression\n                  | expression NOTEQUAL expression\n    \n        compare_id_value : ID GTH expression\n                         | ID LTH expression\n                         | ID GTHOREQUAL expression\n                         | ID LTHOREQUAL expression\n                         | ID EQUALEQUAL expression\n                         | ID NOTEQUAL expression \n    \n        bool_comparison : ID EQUALEQUAL ID\n                        | ID EQUALEQUAL TRUE\n                        | ID EQUALEQUAL FALSE\n                        | ID NOTEQUAL ID\n                        | ID NOTEQUAL TRUE\n                        | ID NOTEQUAL FALSE\n    \n        if_statement : IF LPAREN comparison RPAREN LBRACE statements RBRACE\n                     | IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE\n                     | IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE\n    \n        if_statement : IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n                     | IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n                     | IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n    \n        while_statement : WHILE LPAREN comparison RPAREN LBRACE statements RBRACE\n                        | WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE\n                        | WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE\n    \n        for_statement : FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE\n    \n        break_statement : BREAK SEMICOL\n    expression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term MODULO factorterm : factorfactor : NUMBERfactor : LPAREN expression RPARENempty :'
    
_lr_action_items = {'ID':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,27,28,29,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,61,62,64,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,114,115,116,117,129,130,131,132,133,134,135,153,161,162,163,164,165,166,167,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[20,20,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,61,65,66,67,-82,69,-81,-1,-11,74,74,61,61,61,61,61,61,61,61,61,61,86,90,94,102,102,102,109,-43,61,118,123,61,-74,128,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,61,143,144,145,-28,-29,-30,-31,-32,-33,-34,179,20,20,20,20,20,20,194,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,20,20,20,20,20,20,-64,-65,-66,-70,-71,-72,-6,-7,-8,20,-40,-41,-42,20,20,20,20,20,20,20,-73,-67,-69,-68,]),'IF':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,161,162,163,164,165,166,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[22,22,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,22,22,22,22,22,22,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,22,22,22,22,22,22,-64,-65,-66,-70,-71,-72,-6,-7,-8,22,-40,-41,-42,22,22,22,22,22,22,22,-73,-67,-69,-68,]),'WHILE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,161,162,163,164,165,166,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[24,24,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,24,24,24,24,24,24,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,24,24,24,24,24,24,-64,-65,-66,-70,-71,-72,-6,-7,-8,24,-40,-41,-42,24,24,24,24,24,24,24,-73,-67,-69,-68,]),'FOR':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,161,162,163,164,165,166,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[25,25,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,25,25,25,25,25,25,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,25,25,25,25,25,25,-64,-65,-66,-70,-71,-72,-6,-7,-8,25,-40,-41,-42,25,25,25,25,25,25,25,-73,-67,-69,-68,]),'VAR_TYPE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,161,162,163,164,165,166,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[26,26,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,26,26,26,26,26,26,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,26,26,26,26,26,26,-64,-65,-66,-70,-71,-72,-6,-7,-8,26,-40,-41,-42,26,26,26,26,26,26,26,-73,-67,-69,-68,]),'INT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,63,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,161,162,163,164,165,166,171,172,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[27,27,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,117,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,27,27,27,27,27,27,-5,195,-37,-35,-36,-38,-39,-3,-4,-9,-10,27,27,27,27,27,27,-64,-65,-66,-70,-71,-72,-6,-7,-8,27,-40,-41,-42,27,27,27,27,27,27,27,-73,-67,-69,-68,]),'CHAR':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,63,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,161,162,163,164,165,166,171,173,174,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[28,28,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,115,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,28,28,28,28,28,28,-5,-37,196,-35,-36,-38,-39,-3,-4,-9,-10,28,28,28,28,28,28,-64,-65,-66,-70,-71,-72,-6,-7,-8,28,-40,-41,-42,28,28,28,28,28,28,28,-73,-67,-69,-68,]),'FLOATTYPE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,63,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,161,162,163,164,165,166,171,173,175,176,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[29,29,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,116,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,29,29,29,29,29,29,-5,-37,-35,197,-36,-38,-39,-3,-4,-9,-10,29,29,29,29,29,29,-64,-65,-66,-70,-71,-72,-6,-7,-8,29,-40,-41,-42,29,29,29,29,29,29,29,-73,-67,-69,-68,]),'UNION':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,161,162,163,164,165,166,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[30,30,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,30,30,30,30,30,30,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,30,30,30,30,30,30,-64,-65,-66,-70,-71,-72,-6,-7,-8,30,-40,-41,-42,30,30,30,30,30,30,30,-73,-67,-69,-68,]),'BOOL':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,63,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,161,162,163,164,165,166,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[32,32,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,32,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,32,32,32,32,32,32,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,32,32,32,32,32,32,-64,-65,-66,-70,-71,-72,-6,-7,-8,32,-40,-41,-42,32,32,32,32,32,32,32,-73,-67,-69,-68,]),'PRINT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,161,162,163,164,165,166,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[33,33,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,33,33,33,33,33,33,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,33,33,33,33,33,33,-64,-65,-66,-70,-71,-72,-6,-7,-8,33,-40,-41,-42,33,33,33,33,33,33,33,-73,-67,-69,-68,]),'BREAK':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,161,162,163,164,165,166,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[34,34,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,34,34,34,34,34,34,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,34,34,34,34,34,34,-64,-65,-66,-70,-71,-72,-6,-7,-8,34,-40,-41,-42,34,34,34,34,34,34,34,-73,-67,-69,-68,]),'SIZEOF':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,161,162,163,164,165,166,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[35,35,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,35,35,35,35,35,35,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,35,35,35,35,35,35,-64,-65,-66,-70,-71,-72,-6,-7,-8,35,-40,-41,-42,35,35,35,35,35,35,35,-73,-67,-69,-68,]),'NUMBER':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,59,61,62,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,114,119,121,129,130,131,132,133,134,135,161,162,163,164,165,166,169,170,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[31,31,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,31,-82,-81,-1,-11,31,31,31,31,31,31,31,31,31,31,31,31,31,31,96,31,31,31,31,-43,31,31,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,31,148,152,-28,-29,-30,-31,-32,-33,-34,31,31,31,31,31,31,152,148,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,31,31,31,31,31,31,-64,-65,-66,-70,-71,-72,-6,-7,-8,31,-40,-41,-42,31,31,31,31,31,31,31,-73,-67,-69,-68,]),'LPAREN':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,30,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,56,57,58,59,61,62,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,114,129,130,131,132,133,134,135,147,149,151,161,162,163,164,165,166,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[23,23,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,59,23,62,63,64,68,-82,70,72,-81,-1,-11,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-43,23,23,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,23,-28,-29,-30,-31,-32,-33,-34,172,174,176,23,23,23,23,23,23,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,23,23,23,23,23,23,-64,-65,-66,-70,-71,-72,-6,-7,-8,23,-40,-41,-42,23,23,23,23,23,23,23,-73,-67,-69,-68,]),'$end':([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,171,173,175,177,181,182,183,184,185,186,201,202,203,204,205,206,211,212,213,218,219,220,228,229,230,231,],[0,-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,-64,-65,-66,-70,-71,-72,-6,-7,-8,-40,-41,-42,-73,-67,-69,-68,]),'RBRACE':([2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,31,36,37,38,61,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,110,129,130,131,132,133,134,135,171,173,175,177,181,182,183,184,185,186,187,188,189,190,191,192,201,202,203,204,205,206,211,212,213,218,219,220,224,225,226,227,228,229,230,231,],[-2,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-77,-82,-81,-1,-11,-43,-74,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,-83,-28,-29,-30,-31,-32,-33,-34,-5,-37,-35,-36,-38,-39,-3,-4,-9,-10,201,202,203,204,205,206,-64,-65,-66,-70,-71,-72,-6,-7,-8,-40,-41,-42,228,229,230,231,-73,-67,-69,-68,]),'SEMICOL':([3,20,21,31,34,36,61,73,74,75,76,77,78,79,80,81,94,95,96,97,98,99,100,101,102,103,104,110,142,146,148,150,152,155,156,157,158,159,160,198,199,200,208,209,210,],[38,-43,-77,-82,71,-81,-43,-75,-44,-76,-46,-47,-48,-49,-50,-51,129,130,131,132,133,134,135,-78,-45,-79,-80,-83,167,171,173,175,177,181,182,183,184,185,186,211,212,213,218,219,220,]),'PLUS':([3,20,21,31,36,54,60,61,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,101,102,103,104,108,109,110,125,194,],[39,54,-77,-82,-81,99,39,-43,-75,-44,-76,39,39,39,39,39,39,39,39,39,39,-43,39,-43,39,-78,-45,-79,-80,39,-43,-83,39,54,]),'MINUS':([3,20,21,31,36,55,60,61,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,101,102,103,104,108,109,110,125,],[40,55,-77,-82,-81,100,40,-43,-75,-44,-76,40,40,40,40,40,40,40,40,40,40,-43,40,-43,40,-78,-45,-79,-80,40,-43,-83,40,]),'GTH':([3,20,21,31,36,61,73,74,75,101,102,103,104,108,109,110,],[41,47,-77,-82,-81,-43,-75,-44,-76,-78,-45,-79,-80,41,47,-83,]),'LTH':([3,20,21,31,36,61,73,74,75,101,102,103,104,108,109,110,],[42,48,-77,-82,-81,-43,-75,-44,-76,-78,-45,-79,-80,42,48,-83,]),'GTHOREQUAL':([3,20,21,31,36,61,73,74,75,101,102,103,104,108,109,110,],[43,49,-77,-82,-81,-43,-75,-44,-76,-78,-45,-79,-80,43,49,-83,]),'LTHOREQUAL':([3,20,21,31,36,61,73,74,75,101,102,103,104,108,109,110,],[44,50,-77,-82,-81,-43,-75,-44,-76,-78,-45,-79,-80,44,50,-83,]),'EQUALEQUAL':([3,20,21,31,36,61,73,74,75,101,102,103,104,108,109,110,],[45,51,-77,-82,-81,-43,-75,-44,-76,-78,-45,-79,-80,45,51,-83,]),'NOTEQUAL':([3,20,21,31,36,61,73,74,75,101,102,103,104,108,109,110,],[46,52,-77,-82,-81,-43,-75,-44,-76,-78,-45,-79,-80,46,52,-83,]),'EQUALS':([20,65,66,67,69,143,144,145,],[53,119,120,121,124,168,169,170,]),'TIMES':([20,21,31,36,61,73,74,75,86,90,101,102,103,104,109,110,],[-44,56,-82,-81,-44,56,-44,56,-44,-44,-78,-45,-79,-80,-44,-83,]),'DIVIDE':([20,21,31,36,61,73,74,75,86,90,101,102,103,104,109,110,],[-44,57,-82,-81,-44,57,-44,57,-44,-44,-78,-45,-79,-80,-44,-83,]),'MODULO':([20,21,31,36,61,73,74,75,86,90,101,102,103,104,109,110,],[-44,58,-82,-81,-44,58,-44,58,-44,-44,-78,-45,-79,-80,-44,-83,]),'RPAREN':([21,31,36,60,61,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,103,104,105,106,107,110,111,112,113,118,125,126,127,128,134,178,179,180,193,195,196,197,],[-77,-82,-81,110,-43,-75,-44,-76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-43,-56,-59,-60,-43,-57,-62,-63,-78,-45,-79,-80,136,137,138,-83,139,140,141,146,157,158,159,160,-33,198,199,200,207,208,209,210,]),'TRUE':([51,52,53,62,124,],[88,92,97,112,155,]),'FALSE':([51,52,53,62,124,],[89,93,98,113,156,]),'STRING':([53,68,70,72,120,153,154,168,],[95,122,126,127,150,178,180,150,]),'INPUT':([119,120,121,],[147,149,151,]),'COMMA':([122,123,],[153,154,]),'LBRACE':([136,137,138,139,140,141,207,214,215,216,],[161,162,163,164,165,166,217,221,222,223,]),'ELSE':([201,202,203,],[214,215,216,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,161,162,163,164,165,166,217,221,222,223,],[1,187,188,189,190,191,192,224,225,226,227,]),'statement':([0,1,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[2,37,2,2,2,2,2,2,37,37,37,37,37,37,2,2,2,2,37,37,37,37,]),'expression':([0,1,23,41,42,43,44,45,46,47,48,49,50,51,52,59,62,70,114,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[3,3,60,76,77,78,79,80,81,82,83,84,85,87,91,108,108,125,108,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'if_statement':([0,1,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'while_statement':([0,1,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'for_statement':([0,1,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'vartype_statement':([0,1,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'input_statement':([0,1,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'union_statement':([0,1,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'comparison':([0,1,59,62,114,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[10,10,105,111,142,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'compare_id_value':([0,1,59,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[11,11,106,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'bool_comparison':([0,1,59,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[12,12,107,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'var_statement':([0,1,63,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[13,13,114,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'var_assign':([0,1,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'var_inc':([0,1,161,162,163,164,165,166,167,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[15,15,15,15,15,15,15,15,193,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'var_dec':([0,1,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'print_statement':([0,1,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'break_statement':([0,1,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'sizeof_statement':([0,1,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'term':([0,1,23,39,40,41,42,43,44,45,46,47,48,49,50,51,52,59,62,70,114,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[21,21,21,73,75,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'factor':([0,1,23,39,40,41,42,43,44,45,46,47,48,49,50,51,52,56,57,58,59,62,70,114,161,162,163,164,165,166,187,188,189,190,191,192,217,221,222,223,224,225,226,227,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,101,103,104,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements_multiple','Parser.py',61),
  ('statements -> statement','statements',1,'p_statements_single','Parser.py',67),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMICOL','print_statement',5,'p_statement_print','Parser.py',74),
  ('print_statement -> PRINT LPAREN STRING RPAREN SEMICOL','print_statement',5,'p_statement_print','Parser.py',75),
  ('vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL','vartype_statement',5,'p_statement_vartype','Parser.py',81),
  ('union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL','union_statement',7,'p_statement_union','Parser.py',93),
  ('union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL','union_statement',7,'p_statement_union_two','Parser.py',104),
  ('union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL','union_statement',7,'p_statement_union_three','Parser.py',129),
  ('sizeof_statement -> SIZEOF LPAREN STRING RPAREN SEMICOL','sizeof_statement',5,'p_string_size_statement','Parser.py',155),
  ('sizeof_statement -> SIZEOF LPAREN ID RPAREN SEMICOL','sizeof_statement',5,'p_id_size_statement','Parser.py',161),
  ('statement -> expression SEMICOL','statement',2,'p_statement_expr','Parser.py',169),
  ('statement -> if_statement','statement',1,'p_statement_expr','Parser.py',170),
  ('statement -> while_statement','statement',1,'p_statement_expr','Parser.py',171),
  ('statement -> for_statement','statement',1,'p_statement_expr','Parser.py',172),
  ('statement -> vartype_statement','statement',1,'p_statement_expr','Parser.py',173),
  ('statement -> input_statement','statement',1,'p_statement_expr','Parser.py',174),
  ('statement -> union_statement','statement',1,'p_statement_expr','Parser.py',175),
  ('statement -> comparison','statement',1,'p_statement_expr','Parser.py',176),
  ('statement -> compare_id_value','statement',1,'p_statement_expr','Parser.py',177),
  ('statement -> bool_comparison','statement',1,'p_statement_expr','Parser.py',178),
  ('statement -> var_statement','statement',1,'p_statement_expr','Parser.py',179),
  ('statement -> var_assign','statement',1,'p_statement_expr','Parser.py',180),
  ('statement -> var_inc','statement',1,'p_statement_expr','Parser.py',181),
  ('statement -> var_dec','statement',1,'p_statement_expr','Parser.py',182),
  ('statement -> print_statement','statement',1,'p_statement_expr','Parser.py',183),
  ('statement -> break_statement','statement',1,'p_statement_expr','Parser.py',184),
  ('statement -> sizeof_statement','statement',1,'p_statement_expr','Parser.py',185),
  ('var_assign -> ID EQUALS ID SEMICOL','var_assign',4,'p_statement_assign_var_id','Parser.py',200),
  ('var_assign -> ID EQUALS STRING SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',225),
  ('var_assign -> ID EQUALS NUMBER SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',226),
  ('var_assign -> ID EQUALS TRUE SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',227),
  ('var_assign -> ID EQUALS FALSE SEMICOL','var_assign',4,'p_statement_assign_var','Parser.py',228),
  ('var_inc -> ID PLUS PLUS SEMICOL','var_inc',4,'p_increment_var','Parser.py',263),
  ('var_dec -> ID MINUS MINUS SEMICOL','var_dec',4,'p_decrement_var','Parser.py',281),
  ('var_statement -> CHAR ID EQUALS STRING SEMICOL','var_statement',5,'p_statement_var','Parser.py',301),
  ('var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL','var_statement',5,'p_statement_var','Parser.py',302),
  ('var_statement -> INT ID EQUALS NUMBER SEMICOL','var_statement',5,'p_statement_var','Parser.py',303),
  ('var_statement -> BOOL ID EQUALS TRUE SEMICOL','var_statement',5,'p_statement_var','Parser.py',304),
  ('var_statement -> BOOL ID EQUALS FALSE SEMICOL','var_statement',5,'p_statement_var','Parser.py',305),
  ('input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL','input_statement',8,'p_input_statement','Parser.py',318),
  ('input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL','input_statement',8,'p_input_statement','Parser.py',319),
  ('input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL','input_statement',8,'p_input_statement','Parser.py',320),
  ('expression -> ID','expression',1,'p_variable_expression','Parser.py',357),
  ('term -> ID','term',1,'p_variable_expression','Parser.py',358),
  ('factor -> ID','factor',1,'p_variable_expression','Parser.py',359),
  ('comparison -> expression GTH expression','comparison',3,'p_expression_comparison','Parser.py',372),
  ('comparison -> expression LTH expression','comparison',3,'p_expression_comparison','Parser.py',373),
  ('comparison -> expression GTHOREQUAL expression','comparison',3,'p_expression_comparison','Parser.py',374),
  ('comparison -> expression LTHOREQUAL expression','comparison',3,'p_expression_comparison','Parser.py',375),
  ('comparison -> expression EQUALEQUAL expression','comparison',3,'p_expression_comparison','Parser.py',376),
  ('comparison -> expression NOTEQUAL expression','comparison',3,'p_expression_comparison','Parser.py',377),
  ('compare_id_value -> ID GTH expression','compare_id_value',3,'p_compare_id_value','Parser.py',417),
  ('compare_id_value -> ID LTH expression','compare_id_value',3,'p_compare_id_value','Parser.py',418),
  ('compare_id_value -> ID GTHOREQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',419),
  ('compare_id_value -> ID LTHOREQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',420),
  ('compare_id_value -> ID EQUALEQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',421),
  ('compare_id_value -> ID NOTEQUAL expression','compare_id_value',3,'p_compare_id_value','Parser.py',422),
  ('bool_comparison -> ID EQUALEQUAL ID','bool_comparison',3,'p_bool_comparison','Parser.py',474),
  ('bool_comparison -> ID EQUALEQUAL TRUE','bool_comparison',3,'p_bool_comparison','Parser.py',475),
  ('bool_comparison -> ID EQUALEQUAL FALSE','bool_comparison',3,'p_bool_comparison','Parser.py',476),
  ('bool_comparison -> ID NOTEQUAL ID','bool_comparison',3,'p_bool_comparison','Parser.py',477),
  ('bool_comparison -> ID NOTEQUAL TRUE','bool_comparison',3,'p_bool_comparison','Parser.py',478),
  ('bool_comparison -> ID NOTEQUAL FALSE','bool_comparison',3,'p_bool_comparison','Parser.py',479),
  ('if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',531),
  ('if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',532),
  ('if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE','if_statement',7,'p_IF','Parser.py',533),
  ('if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_IF_ELSE','Parser.py',549),
  ('if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_IF_ELSE','Parser.py',550),
  ('if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','if_statement',11,'p_IF_ELSE','Parser.py',551),
  ('while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',574),
  ('while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',575),
  ('while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE','while_statement',7,'p_WHILE','Parser.py',576),
  ('for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE','for_statement',10,'p_FOR','Parser.py',583),
  ('break_statement -> BREAK SEMICOL','break_statement',2,'p_break_statement','Parser.py',591),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','Parser.py',598),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','Parser.py',602),
  ('expression -> term','expression',1,'p_expression_term','Parser.py',606),
  ('term -> term TIMES factor','term',3,'p_term_times','Parser.py',610),
  ('term -> term DIVIDE factor','term',3,'p_term_div','Parser.py',614),
  ('term -> term MODULO factor','term',3,'p_term_modulo','Parser.py',618),
  ('term -> factor','term',1,'p_term_factor','Parser.py',622),
  ('factor -> NUMBER','factor',1,'p_factor_num','Parser.py',626),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','Parser.py',630),
  ('empty -> <empty>','empty',0,'p_empty','Parser.py',635),
]
