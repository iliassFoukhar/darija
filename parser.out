Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    CONST
    CONTINUE
    DEFAULT
    DO
    DOUBLE
    ELSE
    ENUM
    EXTERN
    FLOAT_CONST
    FOR
    GOTO
    INT_CONST
    LONG
    REGISTER
    RETURN
    SHORT
    SIGNED
    SIZEOF
    STATIC
    STRUCT
    SWITCH
    TYPEDEF
    UNION
    UNSIGNED
    VOID
    VOLATILE
    WHILE

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     print_statement -> PRINT LPAREN expression RPAREN SEMICOL
Rule 4     print_statement -> PRINT LPAREN STRING RPAREN SEMICOL
Rule 5     statement -> expression
Rule 6     statement -> if_statement
Rule 7     statement -> comparison
Rule 8     statement -> var_statement
Rule 9     statement -> var_assign
Rule 10    statement -> print_statement
Rule 11    var_assign -> ID EQUALS STRING SEMICOL
Rule 12    var_assign -> ID EQUALS NUMBER SEMICOL
Rule 13    var_statement -> CHAR ID EQUALS STRING SEMICOL
Rule 14    var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL
Rule 15    var_statement -> INT ID EQUALS NUMBER SEMICOL
Rule 16    expression -> ID
Rule 17    term -> ID
Rule 18    factor -> ID
Rule 19    comparison -> expression GTH expression
Rule 20    comparison -> expression LTH expression
Rule 21    comparison -> expression GTHOREQUAL expression
Rule 22    comparison -> expression LTHOREQUAL expression
Rule 23    comparison -> expression EQUALEQUAL expression
Rule 24    comparison -> expression NOTEQUAL expression
Rule 25    if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE
Rule 26    expression -> expression PLUS term
Rule 27    expression -> expression MINUS term
Rule 28    expression -> term
Rule 29    term -> term TIMES factor
Rule 30    term -> term DIVIDE factor
Rule 31    term -> term MODULO factor
Rule 32    term -> factor
Rule 33    factor -> NUMBER
Rule 34    factor -> LPAREN expression RPAREN
Rule 35    empty -> <empty>

Terminals, with rules where they appear

BREAK                : 
CASE                 : 
CHAR                 : 13
CONST                : 
CONTINUE             : 
DEFAULT              : 
DIVIDE               : 30
DO                   : 
DOUBLE               : 
ELSE                 : 
ENUM                 : 
EQUALEQUAL           : 23
EQUALS               : 11 12 13 14 15
EXTERN               : 
FLOATTYPE            : 14
FLOAT_CONST          : 
FOR                  : 
GOTO                 : 
GTH                  : 19
GTHOREQUAL           : 21
ID                   : 11 12 13 14 15 16 17 18
IF                   : 25
INT                  : 15
INT_CONST            : 
LBRACE               : 25
LONG                 : 
LPAREN               : 3 4 25 34
LTH                  : 20
LTHOREQUAL           : 22
MINUS                : 27
MODULO               : 31
NOTEQUAL             : 24
NUMBER               : 12 14 15 33
PLUS                 : 26
PRINT                : 3 4
RBRACE               : 25
REGISTER             : 
RETURN               : 
RPAREN               : 3 4 25 34
SEMICOL              : 3 4 11 12 13 14 15
SHORT                : 
SIGNED               : 
SIZEOF               : 
STATIC               : 
STRING               : 4 11 13
STRUCT               : 
SWITCH               : 
TIMES                : 29
TYPEDEF              : 
UNION                : 
UNSIGNED             : 
VOID                 : 
VOLATILE             : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

comparison           : 7 25
empty                : 
expression           : 3 5 19 19 20 20 21 21 22 22 23 23 24 24 26 27 34
factor               : 29 30 31 32
if_statement         : 6
print_statement      : 10
statement            : 1 2
statements           : 1 25 0
term                 : 26 27 28 29 30 31
var_assign           : 9
var_statement        : 8

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression
    (6) statement -> . if_statement
    (7) statement -> . comparison
    (8) statement -> . var_statement
    (9) statement -> . var_assign
    (10) statement -> . print_statement
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (25) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (19) comparison -> . expression GTH expression
    (20) comparison -> . expression LTH expression
    (21) comparison -> . expression GTHOREQUAL expression
    (22) comparison -> . expression LTHOREQUAL expression
    (23) comparison -> . expression EQUALEQUAL expression
    (24) comparison -> . expression NOTEQUAL expression
    (13) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (14) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (15) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (11) var_assign -> . ID EQUALS STRING SEMICOL
    (12) var_assign -> . ID EQUALS NUMBER SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 9
    IF              shift and go to state 11
    CHAR            shift and go to state 13
    FLOATTYPE       shift and go to state 14
    INT             shift and go to state 16
    PRINT           shift and go to state 17
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    comparison                     shift and go to state 5
    var_statement                  shift and go to state 6
    var_assign                     shift and go to state 7
    print_statement                shift and go to state 8
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (5) statement -> . expression
    (6) statement -> . if_statement
    (7) statement -> . comparison
    (8) statement -> . var_statement
    (9) statement -> . var_assign
    (10) statement -> . print_statement
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (25) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (19) comparison -> . expression GTH expression
    (20) comparison -> . expression LTH expression
    (21) comparison -> . expression GTHOREQUAL expression
    (22) comparison -> . expression LTHOREQUAL expression
    (23) comparison -> . expression EQUALEQUAL expression
    (24) comparison -> . expression NOTEQUAL expression
    (13) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (14) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (15) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (11) var_assign -> . ID EQUALS STRING SEMICOL
    (12) var_assign -> . ID EQUALS NUMBER SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 9
    IF              shift and go to state 11
    CHAR            shift and go to state 13
    FLOATTYPE       shift and go to state 14
    INT             shift and go to state 16
    PRINT           shift and go to state 17
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    statement                      shift and go to state 19
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    comparison                     shift and go to state 5
    var_statement                  shift and go to state 6
    var_assign                     shift and go to state 7
    print_statement                shift and go to state 8
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 2

    (2) statements -> statement .

    ID              reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    CHAR            reduce using rule 2 (statements -> statement .)
    FLOATTYPE       reduce using rule 2 (statements -> statement .)
    INT             reduce using rule 2 (statements -> statement .)
    PRINT           reduce using rule 2 (statements -> statement .)
    NUMBER          reduce using rule 2 (statements -> statement .)
    LPAREN          reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    RBRACE          reduce using rule 2 (statements -> statement .)


state 3

    (5) statement -> expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (19) comparison -> expression . GTH expression
    (20) comparison -> expression . LTH expression
    (21) comparison -> expression . GTHOREQUAL expression
    (22) comparison -> expression . LTHOREQUAL expression
    (23) comparison -> expression . EQUALEQUAL expression
    (24) comparison -> expression . NOTEQUAL expression

    ID              reduce using rule 5 (statement -> expression .)
    IF              reduce using rule 5 (statement -> expression .)
    CHAR            reduce using rule 5 (statement -> expression .)
    FLOATTYPE       reduce using rule 5 (statement -> expression .)
    INT             reduce using rule 5 (statement -> expression .)
    PRINT           reduce using rule 5 (statement -> expression .)
    NUMBER          reduce using rule 5 (statement -> expression .)
    LPAREN          reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    RBRACE          reduce using rule 5 (statement -> expression .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    GTH             shift and go to state 22
    LTH             shift and go to state 23
    GTHOREQUAL      shift and go to state 24
    LTHOREQUAL      shift and go to state 25
    EQUALEQUAL      shift and go to state 26
    NOTEQUAL        shift and go to state 27


state 4

    (6) statement -> if_statement .

    ID              reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    CHAR            reduce using rule 6 (statement -> if_statement .)
    FLOATTYPE       reduce using rule 6 (statement -> if_statement .)
    INT             reduce using rule 6 (statement -> if_statement .)
    PRINT           reduce using rule 6 (statement -> if_statement .)
    NUMBER          reduce using rule 6 (statement -> if_statement .)
    LPAREN          reduce using rule 6 (statement -> if_statement .)
    $end            reduce using rule 6 (statement -> if_statement .)
    RBRACE          reduce using rule 6 (statement -> if_statement .)


state 5

    (7) statement -> comparison .

    ID              reduce using rule 7 (statement -> comparison .)
    IF              reduce using rule 7 (statement -> comparison .)
    CHAR            reduce using rule 7 (statement -> comparison .)
    FLOATTYPE       reduce using rule 7 (statement -> comparison .)
    INT             reduce using rule 7 (statement -> comparison .)
    PRINT           reduce using rule 7 (statement -> comparison .)
    NUMBER          reduce using rule 7 (statement -> comparison .)
    LPAREN          reduce using rule 7 (statement -> comparison .)
    $end            reduce using rule 7 (statement -> comparison .)
    RBRACE          reduce using rule 7 (statement -> comparison .)


state 6

    (8) statement -> var_statement .

    ID              reduce using rule 8 (statement -> var_statement .)
    IF              reduce using rule 8 (statement -> var_statement .)
    CHAR            reduce using rule 8 (statement -> var_statement .)
    FLOATTYPE       reduce using rule 8 (statement -> var_statement .)
    INT             reduce using rule 8 (statement -> var_statement .)
    PRINT           reduce using rule 8 (statement -> var_statement .)
    NUMBER          reduce using rule 8 (statement -> var_statement .)
    LPAREN          reduce using rule 8 (statement -> var_statement .)
    $end            reduce using rule 8 (statement -> var_statement .)
    RBRACE          reduce using rule 8 (statement -> var_statement .)


state 7

    (9) statement -> var_assign .

    ID              reduce using rule 9 (statement -> var_assign .)
    IF              reduce using rule 9 (statement -> var_assign .)
    CHAR            reduce using rule 9 (statement -> var_assign .)
    FLOATTYPE       reduce using rule 9 (statement -> var_assign .)
    INT             reduce using rule 9 (statement -> var_assign .)
    PRINT           reduce using rule 9 (statement -> var_assign .)
    NUMBER          reduce using rule 9 (statement -> var_assign .)
    LPAREN          reduce using rule 9 (statement -> var_assign .)
    $end            reduce using rule 9 (statement -> var_assign .)
    RBRACE          reduce using rule 9 (statement -> var_assign .)


state 8

    (10) statement -> print_statement .

    ID              reduce using rule 10 (statement -> print_statement .)
    IF              reduce using rule 10 (statement -> print_statement .)
    CHAR            reduce using rule 10 (statement -> print_statement .)
    FLOATTYPE       reduce using rule 10 (statement -> print_statement .)
    INT             reduce using rule 10 (statement -> print_statement .)
    PRINT           reduce using rule 10 (statement -> print_statement .)
    NUMBER          reduce using rule 10 (statement -> print_statement .)
    LPAREN          reduce using rule 10 (statement -> print_statement .)
    $end            reduce using rule 10 (statement -> print_statement .)
    RBRACE          reduce using rule 10 (statement -> print_statement .)


state 9

    (16) expression -> ID .
    (11) var_assign -> ID . EQUALS STRING SEMICOL
    (12) var_assign -> ID . EQUALS NUMBER SEMICOL
    (17) term -> ID .
    (18) factor -> ID .

  ! reduce/reduce conflict for PLUS resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 16 (expression -> ID .)
    PLUS            reduce using rule 16 (expression -> ID .)
    MINUS           reduce using rule 16 (expression -> ID .)
    GTH             reduce using rule 16 (expression -> ID .)
    LTH             reduce using rule 16 (expression -> ID .)
    GTHOREQUAL      reduce using rule 16 (expression -> ID .)
    LTHOREQUAL      reduce using rule 16 (expression -> ID .)
    EQUALEQUAL      reduce using rule 16 (expression -> ID .)
    NOTEQUAL        reduce using rule 16 (expression -> ID .)
    ID              reduce using rule 16 (expression -> ID .)
    IF              reduce using rule 16 (expression -> ID .)
    CHAR            reduce using rule 16 (expression -> ID .)
    FLOATTYPE       reduce using rule 16 (expression -> ID .)
    INT             reduce using rule 16 (expression -> ID .)
    PRINT           reduce using rule 16 (expression -> ID .)
    NUMBER          reduce using rule 16 (expression -> ID .)
    LPAREN          reduce using rule 16 (expression -> ID .)
    $end            reduce using rule 16 (expression -> ID .)
    RBRACE          reduce using rule 16 (expression -> ID .)
    EQUALS          shift and go to state 28
    TIMES           reduce using rule 17 (term -> ID .)
    DIVIDE          reduce using rule 17 (term -> ID .)
    MODULO          reduce using rule 17 (term -> ID .)

  ! PLUS            [ reduce using rule 17 (term -> ID .) ]
  ! MINUS           [ reduce using rule 17 (term -> ID .) ]
  ! GTH             [ reduce using rule 17 (term -> ID .) ]
  ! LTH             [ reduce using rule 17 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 17 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 17 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 17 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 17 (term -> ID .) ]
  ! ID              [ reduce using rule 17 (term -> ID .) ]
  ! IF              [ reduce using rule 17 (term -> ID .) ]
  ! CHAR            [ reduce using rule 17 (term -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 17 (term -> ID .) ]
  ! INT             [ reduce using rule 17 (term -> ID .) ]
  ! PRINT           [ reduce using rule 17 (term -> ID .) ]
  ! NUMBER          [ reduce using rule 17 (term -> ID .) ]
  ! LPAREN          [ reduce using rule 17 (term -> ID .) ]
  ! $end            [ reduce using rule 17 (term -> ID .) ]
  ! RBRACE          [ reduce using rule 17 (term -> ID .) ]
  ! TIMES           [ reduce using rule 18 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 18 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 18 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 18 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 18 (factor -> ID .) ]
  ! GTH             [ reduce using rule 18 (factor -> ID .) ]
  ! LTH             [ reduce using rule 18 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 18 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 18 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 18 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 18 (factor -> ID .) ]
  ! ID              [ reduce using rule 18 (factor -> ID .) ]
  ! IF              [ reduce using rule 18 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 18 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 18 (factor -> ID .) ]
  ! INT             [ reduce using rule 18 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 18 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 18 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 18 (factor -> ID .) ]
  ! $end            [ reduce using rule 18 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 18 (factor -> ID .) ]


state 10

    (28) expression -> term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor
    (31) term -> term . MODULO factor

    PLUS            reduce using rule 28 (expression -> term .)
    MINUS           reduce using rule 28 (expression -> term .)
    GTH             reduce using rule 28 (expression -> term .)
    LTH             reduce using rule 28 (expression -> term .)
    GTHOREQUAL      reduce using rule 28 (expression -> term .)
    LTHOREQUAL      reduce using rule 28 (expression -> term .)
    EQUALEQUAL      reduce using rule 28 (expression -> term .)
    NOTEQUAL        reduce using rule 28 (expression -> term .)
    ID              reduce using rule 28 (expression -> term .)
    IF              reduce using rule 28 (expression -> term .)
    CHAR            reduce using rule 28 (expression -> term .)
    FLOATTYPE       reduce using rule 28 (expression -> term .)
    INT             reduce using rule 28 (expression -> term .)
    PRINT           reduce using rule 28 (expression -> term .)
    NUMBER          reduce using rule 28 (expression -> term .)
    LPAREN          reduce using rule 28 (expression -> term .)
    $end            reduce using rule 28 (expression -> term .)
    RPAREN          reduce using rule 28 (expression -> term .)
    RBRACE          reduce using rule 28 (expression -> term .)
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31


state 11

    (25) if_statement -> IF . LPAREN comparison RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 32


state 12

    (34) factor -> LPAREN . expression RPAREN
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 34
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    expression                     shift and go to state 33
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 13

    (13) var_statement -> CHAR . ID EQUALS STRING SEMICOL

    ID              shift and go to state 35


state 14

    (14) var_statement -> FLOATTYPE . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 36


state 15

    (33) factor -> NUMBER .

    TIMES           reduce using rule 33 (factor -> NUMBER .)
    DIVIDE          reduce using rule 33 (factor -> NUMBER .)
    MODULO          reduce using rule 33 (factor -> NUMBER .)
    PLUS            reduce using rule 33 (factor -> NUMBER .)
    MINUS           reduce using rule 33 (factor -> NUMBER .)
    GTH             reduce using rule 33 (factor -> NUMBER .)
    LTH             reduce using rule 33 (factor -> NUMBER .)
    GTHOREQUAL      reduce using rule 33 (factor -> NUMBER .)
    LTHOREQUAL      reduce using rule 33 (factor -> NUMBER .)
    EQUALEQUAL      reduce using rule 33 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 33 (factor -> NUMBER .)
    ID              reduce using rule 33 (factor -> NUMBER .)
    IF              reduce using rule 33 (factor -> NUMBER .)
    CHAR            reduce using rule 33 (factor -> NUMBER .)
    FLOATTYPE       reduce using rule 33 (factor -> NUMBER .)
    INT             reduce using rule 33 (factor -> NUMBER .)
    PRINT           reduce using rule 33 (factor -> NUMBER .)
    NUMBER          reduce using rule 33 (factor -> NUMBER .)
    LPAREN          reduce using rule 33 (factor -> NUMBER .)
    $end            reduce using rule 33 (factor -> NUMBER .)
    RPAREN          reduce using rule 33 (factor -> NUMBER .)
    RBRACE          reduce using rule 33 (factor -> NUMBER .)


state 16

    (15) var_statement -> INT . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 37


state 17

    (3) print_statement -> PRINT . LPAREN expression RPAREN SEMICOL
    (4) print_statement -> PRINT . LPAREN STRING RPAREN SEMICOL

    LPAREN          shift and go to state 38


state 18

    (32) term -> factor .

    TIMES           reduce using rule 32 (term -> factor .)
    DIVIDE          reduce using rule 32 (term -> factor .)
    MODULO          reduce using rule 32 (term -> factor .)
    PLUS            reduce using rule 32 (term -> factor .)
    MINUS           reduce using rule 32 (term -> factor .)
    GTH             reduce using rule 32 (term -> factor .)
    LTH             reduce using rule 32 (term -> factor .)
    GTHOREQUAL      reduce using rule 32 (term -> factor .)
    LTHOREQUAL      reduce using rule 32 (term -> factor .)
    EQUALEQUAL      reduce using rule 32 (term -> factor .)
    NOTEQUAL        reduce using rule 32 (term -> factor .)
    ID              reduce using rule 32 (term -> factor .)
    IF              reduce using rule 32 (term -> factor .)
    CHAR            reduce using rule 32 (term -> factor .)
    FLOATTYPE       reduce using rule 32 (term -> factor .)
    INT             reduce using rule 32 (term -> factor .)
    PRINT           reduce using rule 32 (term -> factor .)
    NUMBER          reduce using rule 32 (term -> factor .)
    LPAREN          reduce using rule 32 (term -> factor .)
    $end            reduce using rule 32 (term -> factor .)
    RPAREN          reduce using rule 32 (term -> factor .)
    RBRACE          reduce using rule 32 (term -> factor .)


state 19

    (1) statements -> statements statement .

    ID              reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    CHAR            reduce using rule 1 (statements -> statements statement .)
    FLOATTYPE       reduce using rule 1 (statements -> statements statement .)
    INT             reduce using rule 1 (statements -> statements statement .)
    PRINT           reduce using rule 1 (statements -> statements statement .)
    NUMBER          reduce using rule 1 (statements -> statements statement .)
    LPAREN          reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    RBRACE          reduce using rule 1 (statements -> statements statement .)


state 20

    (26) expression -> expression PLUS . term
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 40
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    term                           shift and go to state 39
    factor                         shift and go to state 18

state 21

    (27) expression -> expression MINUS . term
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 40
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    term                           shift and go to state 41
    factor                         shift and go to state 18

state 22

    (19) comparison -> expression GTH . expression
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 34
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    expression                     shift and go to state 42
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 23

    (20) comparison -> expression LTH . expression
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 34
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    expression                     shift and go to state 43
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 24

    (21) comparison -> expression GTHOREQUAL . expression
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 34
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    expression                     shift and go to state 44
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 25

    (22) comparison -> expression LTHOREQUAL . expression
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 34
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    expression                     shift and go to state 45
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 26

    (23) comparison -> expression EQUALEQUAL . expression
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 34
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    expression                     shift and go to state 46
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 27

    (24) comparison -> expression NOTEQUAL . expression
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 34
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    expression                     shift and go to state 47
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 28

    (11) var_assign -> ID EQUALS . STRING SEMICOL
    (12) var_assign -> ID EQUALS . NUMBER SEMICOL

    STRING          shift and go to state 48
    NUMBER          shift and go to state 49


state 29

    (29) term -> term TIMES . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 51
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    factor                         shift and go to state 50

state 30

    (30) term -> term DIVIDE . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 51
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    factor                         shift and go to state 52

state 31

    (31) term -> term MODULO . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 51
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    factor                         shift and go to state 53

state 32

    (25) if_statement -> IF LPAREN . comparison RPAREN LBRACE statements RBRACE
    (19) comparison -> . expression GTH expression
    (20) comparison -> . expression LTH expression
    (21) comparison -> . expression GTHOREQUAL expression
    (22) comparison -> . expression LTHOREQUAL expression
    (23) comparison -> . expression EQUALEQUAL expression
    (24) comparison -> . expression NOTEQUAL expression
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 34
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    comparison                     shift and go to state 54
    expression                     shift and go to state 55
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 33

    (34) factor -> LPAREN expression . RPAREN
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    RPAREN          shift and go to state 56
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 34

    (16) expression -> ID .
    (17) term -> ID .
    (18) factor -> ID .

  ! reduce/reduce conflict for RPAREN resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 16 (expression -> ID .)
    RPAREN          reduce using rule 16 (expression -> ID .)
    PLUS            reduce using rule 16 (expression -> ID .)
    MINUS           reduce using rule 16 (expression -> ID .)
    ID              reduce using rule 16 (expression -> ID .)
    IF              reduce using rule 16 (expression -> ID .)
    CHAR            reduce using rule 16 (expression -> ID .)
    FLOATTYPE       reduce using rule 16 (expression -> ID .)
    INT             reduce using rule 16 (expression -> ID .)
    PRINT           reduce using rule 16 (expression -> ID .)
    NUMBER          reduce using rule 16 (expression -> ID .)
    LPAREN          reduce using rule 16 (expression -> ID .)
    $end            reduce using rule 16 (expression -> ID .)
    RBRACE          reduce using rule 16 (expression -> ID .)
    GTH             reduce using rule 16 (expression -> ID .)
    LTH             reduce using rule 16 (expression -> ID .)
    GTHOREQUAL      reduce using rule 16 (expression -> ID .)
    LTHOREQUAL      reduce using rule 16 (expression -> ID .)
    EQUALEQUAL      reduce using rule 16 (expression -> ID .)
    NOTEQUAL        reduce using rule 16 (expression -> ID .)
    TIMES           reduce using rule 17 (term -> ID .)
    DIVIDE          reduce using rule 17 (term -> ID .)
    MODULO          reduce using rule 17 (term -> ID .)

  ! RPAREN          [ reduce using rule 17 (term -> ID .) ]
  ! PLUS            [ reduce using rule 17 (term -> ID .) ]
  ! MINUS           [ reduce using rule 17 (term -> ID .) ]
  ! ID              [ reduce using rule 17 (term -> ID .) ]
  ! IF              [ reduce using rule 17 (term -> ID .) ]
  ! CHAR            [ reduce using rule 17 (term -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 17 (term -> ID .) ]
  ! INT             [ reduce using rule 17 (term -> ID .) ]
  ! PRINT           [ reduce using rule 17 (term -> ID .) ]
  ! NUMBER          [ reduce using rule 17 (term -> ID .) ]
  ! LPAREN          [ reduce using rule 17 (term -> ID .) ]
  ! $end            [ reduce using rule 17 (term -> ID .) ]
  ! RBRACE          [ reduce using rule 17 (term -> ID .) ]
  ! GTH             [ reduce using rule 17 (term -> ID .) ]
  ! LTH             [ reduce using rule 17 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 17 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 17 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 17 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 17 (term -> ID .) ]
  ! TIMES           [ reduce using rule 18 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 18 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 18 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 18 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 18 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 18 (factor -> ID .) ]
  ! ID              [ reduce using rule 18 (factor -> ID .) ]
  ! IF              [ reduce using rule 18 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 18 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 18 (factor -> ID .) ]
  ! INT             [ reduce using rule 18 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 18 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 18 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 18 (factor -> ID .) ]
  ! $end            [ reduce using rule 18 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 18 (factor -> ID .) ]
  ! GTH             [ reduce using rule 18 (factor -> ID .) ]
  ! LTH             [ reduce using rule 18 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 18 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 18 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 18 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 18 (factor -> ID .) ]


state 35

    (13) var_statement -> CHAR ID . EQUALS STRING SEMICOL

    EQUALS          shift and go to state 57


state 36

    (14) var_statement -> FLOATTYPE ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 58


state 37

    (15) var_statement -> INT ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 59


state 38

    (3) print_statement -> PRINT LPAREN . expression RPAREN SEMICOL
    (4) print_statement -> PRINT LPAREN . STRING RPAREN SEMICOL
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    STRING          shift and go to state 61
    ID              shift and go to state 34
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    expression                     shift and go to state 60
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 39

    (26) expression -> expression PLUS term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor
    (31) term -> term . MODULO factor

    PLUS            reduce using rule 26 (expression -> expression PLUS term .)
    MINUS           reduce using rule 26 (expression -> expression PLUS term .)
    GTH             reduce using rule 26 (expression -> expression PLUS term .)
    LTH             reduce using rule 26 (expression -> expression PLUS term .)
    GTHOREQUAL      reduce using rule 26 (expression -> expression PLUS term .)
    LTHOREQUAL      reduce using rule 26 (expression -> expression PLUS term .)
    EQUALEQUAL      reduce using rule 26 (expression -> expression PLUS term .)
    NOTEQUAL        reduce using rule 26 (expression -> expression PLUS term .)
    ID              reduce using rule 26 (expression -> expression PLUS term .)
    IF              reduce using rule 26 (expression -> expression PLUS term .)
    CHAR            reduce using rule 26 (expression -> expression PLUS term .)
    FLOATTYPE       reduce using rule 26 (expression -> expression PLUS term .)
    INT             reduce using rule 26 (expression -> expression PLUS term .)
    PRINT           reduce using rule 26 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 26 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 26 (expression -> expression PLUS term .)
    $end            reduce using rule 26 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 26 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 26 (expression -> expression PLUS term .)
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31


state 40

    (17) term -> ID .
    (18) factor -> ID .

  ! reduce/reduce conflict for TIMES resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 17 (term -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 17 (term -> ID .)
    TIMES           reduce using rule 17 (term -> ID .)
    DIVIDE          reduce using rule 17 (term -> ID .)
    MODULO          reduce using rule 17 (term -> ID .)
    PLUS            reduce using rule 17 (term -> ID .)
    MINUS           reduce using rule 17 (term -> ID .)
    GTH             reduce using rule 17 (term -> ID .)
    LTH             reduce using rule 17 (term -> ID .)
    GTHOREQUAL      reduce using rule 17 (term -> ID .)
    LTHOREQUAL      reduce using rule 17 (term -> ID .)
    EQUALEQUAL      reduce using rule 17 (term -> ID .)
    NOTEQUAL        reduce using rule 17 (term -> ID .)
    ID              reduce using rule 17 (term -> ID .)
    IF              reduce using rule 17 (term -> ID .)
    CHAR            reduce using rule 17 (term -> ID .)
    FLOATTYPE       reduce using rule 17 (term -> ID .)
    INT             reduce using rule 17 (term -> ID .)
    PRINT           reduce using rule 17 (term -> ID .)
    NUMBER          reduce using rule 17 (term -> ID .)
    LPAREN          reduce using rule 17 (term -> ID .)
    $end            reduce using rule 17 (term -> ID .)
    RPAREN          reduce using rule 17 (term -> ID .)
    RBRACE          reduce using rule 17 (term -> ID .)

  ! TIMES           [ reduce using rule 18 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 18 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 18 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 18 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 18 (factor -> ID .) ]
  ! GTH             [ reduce using rule 18 (factor -> ID .) ]
  ! LTH             [ reduce using rule 18 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 18 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 18 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 18 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 18 (factor -> ID .) ]
  ! ID              [ reduce using rule 18 (factor -> ID .) ]
  ! IF              [ reduce using rule 18 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 18 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 18 (factor -> ID .) ]
  ! INT             [ reduce using rule 18 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 18 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 18 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 18 (factor -> ID .) ]
  ! $end            [ reduce using rule 18 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 18 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 18 (factor -> ID .) ]


state 41

    (27) expression -> expression MINUS term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor
    (31) term -> term . MODULO factor

    PLUS            reduce using rule 27 (expression -> expression MINUS term .)
    MINUS           reduce using rule 27 (expression -> expression MINUS term .)
    GTH             reduce using rule 27 (expression -> expression MINUS term .)
    LTH             reduce using rule 27 (expression -> expression MINUS term .)
    GTHOREQUAL      reduce using rule 27 (expression -> expression MINUS term .)
    LTHOREQUAL      reduce using rule 27 (expression -> expression MINUS term .)
    EQUALEQUAL      reduce using rule 27 (expression -> expression MINUS term .)
    NOTEQUAL        reduce using rule 27 (expression -> expression MINUS term .)
    ID              reduce using rule 27 (expression -> expression MINUS term .)
    IF              reduce using rule 27 (expression -> expression MINUS term .)
    CHAR            reduce using rule 27 (expression -> expression MINUS term .)
    FLOATTYPE       reduce using rule 27 (expression -> expression MINUS term .)
    INT             reduce using rule 27 (expression -> expression MINUS term .)
    PRINT           reduce using rule 27 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 27 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 27 (expression -> expression MINUS term .)
    $end            reduce using rule 27 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 27 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 27 (expression -> expression MINUS term .)
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MODULO          shift and go to state 31


state 42

    (19) comparison -> expression GTH expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    ID              reduce using rule 19 (comparison -> expression GTH expression .)
    IF              reduce using rule 19 (comparison -> expression GTH expression .)
    CHAR            reduce using rule 19 (comparison -> expression GTH expression .)
    FLOATTYPE       reduce using rule 19 (comparison -> expression GTH expression .)
    INT             reduce using rule 19 (comparison -> expression GTH expression .)
    PRINT           reduce using rule 19 (comparison -> expression GTH expression .)
    NUMBER          reduce using rule 19 (comparison -> expression GTH expression .)
    LPAREN          reduce using rule 19 (comparison -> expression GTH expression .)
    $end            reduce using rule 19 (comparison -> expression GTH expression .)
    RPAREN          reduce using rule 19 (comparison -> expression GTH expression .)
    RBRACE          reduce using rule 19 (comparison -> expression GTH expression .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 43

    (20) comparison -> expression LTH expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    ID              reduce using rule 20 (comparison -> expression LTH expression .)
    IF              reduce using rule 20 (comparison -> expression LTH expression .)
    CHAR            reduce using rule 20 (comparison -> expression LTH expression .)
    FLOATTYPE       reduce using rule 20 (comparison -> expression LTH expression .)
    INT             reduce using rule 20 (comparison -> expression LTH expression .)
    PRINT           reduce using rule 20 (comparison -> expression LTH expression .)
    NUMBER          reduce using rule 20 (comparison -> expression LTH expression .)
    LPAREN          reduce using rule 20 (comparison -> expression LTH expression .)
    $end            reduce using rule 20 (comparison -> expression LTH expression .)
    RPAREN          reduce using rule 20 (comparison -> expression LTH expression .)
    RBRACE          reduce using rule 20 (comparison -> expression LTH expression .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 44

    (21) comparison -> expression GTHOREQUAL expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    ID              reduce using rule 21 (comparison -> expression GTHOREQUAL expression .)
    IF              reduce using rule 21 (comparison -> expression GTHOREQUAL expression .)
    CHAR            reduce using rule 21 (comparison -> expression GTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 21 (comparison -> expression GTHOREQUAL expression .)
    INT             reduce using rule 21 (comparison -> expression GTHOREQUAL expression .)
    PRINT           reduce using rule 21 (comparison -> expression GTHOREQUAL expression .)
    NUMBER          reduce using rule 21 (comparison -> expression GTHOREQUAL expression .)
    LPAREN          reduce using rule 21 (comparison -> expression GTHOREQUAL expression .)
    $end            reduce using rule 21 (comparison -> expression GTHOREQUAL expression .)
    RPAREN          reduce using rule 21 (comparison -> expression GTHOREQUAL expression .)
    RBRACE          reduce using rule 21 (comparison -> expression GTHOREQUAL expression .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 45

    (22) comparison -> expression LTHOREQUAL expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    ID              reduce using rule 22 (comparison -> expression LTHOREQUAL expression .)
    IF              reduce using rule 22 (comparison -> expression LTHOREQUAL expression .)
    CHAR            reduce using rule 22 (comparison -> expression LTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 22 (comparison -> expression LTHOREQUAL expression .)
    INT             reduce using rule 22 (comparison -> expression LTHOREQUAL expression .)
    PRINT           reduce using rule 22 (comparison -> expression LTHOREQUAL expression .)
    NUMBER          reduce using rule 22 (comparison -> expression LTHOREQUAL expression .)
    LPAREN          reduce using rule 22 (comparison -> expression LTHOREQUAL expression .)
    $end            reduce using rule 22 (comparison -> expression LTHOREQUAL expression .)
    RPAREN          reduce using rule 22 (comparison -> expression LTHOREQUAL expression .)
    RBRACE          reduce using rule 22 (comparison -> expression LTHOREQUAL expression .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 46

    (23) comparison -> expression EQUALEQUAL expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    ID              reduce using rule 23 (comparison -> expression EQUALEQUAL expression .)
    IF              reduce using rule 23 (comparison -> expression EQUALEQUAL expression .)
    CHAR            reduce using rule 23 (comparison -> expression EQUALEQUAL expression .)
    FLOATTYPE       reduce using rule 23 (comparison -> expression EQUALEQUAL expression .)
    INT             reduce using rule 23 (comparison -> expression EQUALEQUAL expression .)
    PRINT           reduce using rule 23 (comparison -> expression EQUALEQUAL expression .)
    NUMBER          reduce using rule 23 (comparison -> expression EQUALEQUAL expression .)
    LPAREN          reduce using rule 23 (comparison -> expression EQUALEQUAL expression .)
    $end            reduce using rule 23 (comparison -> expression EQUALEQUAL expression .)
    RPAREN          reduce using rule 23 (comparison -> expression EQUALEQUAL expression .)
    RBRACE          reduce using rule 23 (comparison -> expression EQUALEQUAL expression .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 47

    (24) comparison -> expression NOTEQUAL expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    ID              reduce using rule 24 (comparison -> expression NOTEQUAL expression .)
    IF              reduce using rule 24 (comparison -> expression NOTEQUAL expression .)
    CHAR            reduce using rule 24 (comparison -> expression NOTEQUAL expression .)
    FLOATTYPE       reduce using rule 24 (comparison -> expression NOTEQUAL expression .)
    INT             reduce using rule 24 (comparison -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 24 (comparison -> expression NOTEQUAL expression .)
    NUMBER          reduce using rule 24 (comparison -> expression NOTEQUAL expression .)
    LPAREN          reduce using rule 24 (comparison -> expression NOTEQUAL expression .)
    $end            reduce using rule 24 (comparison -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 24 (comparison -> expression NOTEQUAL expression .)
    RBRACE          reduce using rule 24 (comparison -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 48

    (11) var_assign -> ID EQUALS STRING . SEMICOL

    SEMICOL         shift and go to state 62


state 49

    (12) var_assign -> ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 63


state 50

    (29) term -> term TIMES factor .

    TIMES           reduce using rule 29 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 29 (term -> term TIMES factor .)
    MODULO          reduce using rule 29 (term -> term TIMES factor .)
    PLUS            reduce using rule 29 (term -> term TIMES factor .)
    MINUS           reduce using rule 29 (term -> term TIMES factor .)
    GTH             reduce using rule 29 (term -> term TIMES factor .)
    LTH             reduce using rule 29 (term -> term TIMES factor .)
    GTHOREQUAL      reduce using rule 29 (term -> term TIMES factor .)
    LTHOREQUAL      reduce using rule 29 (term -> term TIMES factor .)
    EQUALEQUAL      reduce using rule 29 (term -> term TIMES factor .)
    NOTEQUAL        reduce using rule 29 (term -> term TIMES factor .)
    ID              reduce using rule 29 (term -> term TIMES factor .)
    IF              reduce using rule 29 (term -> term TIMES factor .)
    CHAR            reduce using rule 29 (term -> term TIMES factor .)
    FLOATTYPE       reduce using rule 29 (term -> term TIMES factor .)
    INT             reduce using rule 29 (term -> term TIMES factor .)
    PRINT           reduce using rule 29 (term -> term TIMES factor .)
    NUMBER          reduce using rule 29 (term -> term TIMES factor .)
    LPAREN          reduce using rule 29 (term -> term TIMES factor .)
    $end            reduce using rule 29 (term -> term TIMES factor .)
    RPAREN          reduce using rule 29 (term -> term TIMES factor .)
    RBRACE          reduce using rule 29 (term -> term TIMES factor .)


state 51

    (18) factor -> ID .

    TIMES           reduce using rule 18 (factor -> ID .)
    DIVIDE          reduce using rule 18 (factor -> ID .)
    MODULO          reduce using rule 18 (factor -> ID .)
    PLUS            reduce using rule 18 (factor -> ID .)
    MINUS           reduce using rule 18 (factor -> ID .)
    GTH             reduce using rule 18 (factor -> ID .)
    LTH             reduce using rule 18 (factor -> ID .)
    GTHOREQUAL      reduce using rule 18 (factor -> ID .)
    LTHOREQUAL      reduce using rule 18 (factor -> ID .)
    EQUALEQUAL      reduce using rule 18 (factor -> ID .)
    NOTEQUAL        reduce using rule 18 (factor -> ID .)
    ID              reduce using rule 18 (factor -> ID .)
    IF              reduce using rule 18 (factor -> ID .)
    CHAR            reduce using rule 18 (factor -> ID .)
    FLOATTYPE       reduce using rule 18 (factor -> ID .)
    INT             reduce using rule 18 (factor -> ID .)
    PRINT           reduce using rule 18 (factor -> ID .)
    NUMBER          reduce using rule 18 (factor -> ID .)
    LPAREN          reduce using rule 18 (factor -> ID .)
    $end            reduce using rule 18 (factor -> ID .)
    RPAREN          reduce using rule 18 (factor -> ID .)
    RBRACE          reduce using rule 18 (factor -> ID .)


state 52

    (30) term -> term DIVIDE factor .

    TIMES           reduce using rule 30 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 30 (term -> term DIVIDE factor .)
    MODULO          reduce using rule 30 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 30 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 30 (term -> term DIVIDE factor .)
    GTH             reduce using rule 30 (term -> term DIVIDE factor .)
    LTH             reduce using rule 30 (term -> term DIVIDE factor .)
    GTHOREQUAL      reduce using rule 30 (term -> term DIVIDE factor .)
    LTHOREQUAL      reduce using rule 30 (term -> term DIVIDE factor .)
    EQUALEQUAL      reduce using rule 30 (term -> term DIVIDE factor .)
    NOTEQUAL        reduce using rule 30 (term -> term DIVIDE factor .)
    ID              reduce using rule 30 (term -> term DIVIDE factor .)
    IF              reduce using rule 30 (term -> term DIVIDE factor .)
    CHAR            reduce using rule 30 (term -> term DIVIDE factor .)
    FLOATTYPE       reduce using rule 30 (term -> term DIVIDE factor .)
    INT             reduce using rule 30 (term -> term DIVIDE factor .)
    PRINT           reduce using rule 30 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 30 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 30 (term -> term DIVIDE factor .)
    $end            reduce using rule 30 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 30 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 30 (term -> term DIVIDE factor .)


state 53

    (31) term -> term MODULO factor .

    TIMES           reduce using rule 31 (term -> term MODULO factor .)
    DIVIDE          reduce using rule 31 (term -> term MODULO factor .)
    MODULO          reduce using rule 31 (term -> term MODULO factor .)
    PLUS            reduce using rule 31 (term -> term MODULO factor .)
    MINUS           reduce using rule 31 (term -> term MODULO factor .)
    GTH             reduce using rule 31 (term -> term MODULO factor .)
    LTH             reduce using rule 31 (term -> term MODULO factor .)
    GTHOREQUAL      reduce using rule 31 (term -> term MODULO factor .)
    LTHOREQUAL      reduce using rule 31 (term -> term MODULO factor .)
    EQUALEQUAL      reduce using rule 31 (term -> term MODULO factor .)
    NOTEQUAL        reduce using rule 31 (term -> term MODULO factor .)
    ID              reduce using rule 31 (term -> term MODULO factor .)
    IF              reduce using rule 31 (term -> term MODULO factor .)
    CHAR            reduce using rule 31 (term -> term MODULO factor .)
    FLOATTYPE       reduce using rule 31 (term -> term MODULO factor .)
    INT             reduce using rule 31 (term -> term MODULO factor .)
    PRINT           reduce using rule 31 (term -> term MODULO factor .)
    NUMBER          reduce using rule 31 (term -> term MODULO factor .)
    LPAREN          reduce using rule 31 (term -> term MODULO factor .)
    $end            reduce using rule 31 (term -> term MODULO factor .)
    RPAREN          reduce using rule 31 (term -> term MODULO factor .)
    RBRACE          reduce using rule 31 (term -> term MODULO factor .)


state 54

    (25) if_statement -> IF LPAREN comparison . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 64


state 55

    (19) comparison -> expression . GTH expression
    (20) comparison -> expression . LTH expression
    (21) comparison -> expression . GTHOREQUAL expression
    (22) comparison -> expression . LTHOREQUAL expression
    (23) comparison -> expression . EQUALEQUAL expression
    (24) comparison -> expression . NOTEQUAL expression
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    GTH             shift and go to state 22
    LTH             shift and go to state 23
    GTHOREQUAL      shift and go to state 24
    LTHOREQUAL      shift and go to state 25
    EQUALEQUAL      shift and go to state 26
    NOTEQUAL        shift and go to state 27
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 56

    (34) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    GTH             reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    LTH             reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    GTHOREQUAL      reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    LTHOREQUAL      reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    EQUALEQUAL      reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    FLOATTYPE       reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    INT             reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 34 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 34 (factor -> LPAREN expression RPAREN .)


state 57

    (13) var_statement -> CHAR ID EQUALS . STRING SEMICOL

    STRING          shift and go to state 65


state 58

    (14) var_statement -> FLOATTYPE ID EQUALS . NUMBER SEMICOL

    NUMBER          shift and go to state 66


state 59

    (15) var_statement -> INT ID EQUALS . NUMBER SEMICOL

    NUMBER          shift and go to state 67


state 60

    (3) print_statement -> PRINT LPAREN expression . RPAREN SEMICOL
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    RPAREN          shift and go to state 68
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21


state 61

    (4) print_statement -> PRINT LPAREN STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 69


state 62

    (11) var_assign -> ID EQUALS STRING SEMICOL .

    ID              reduce using rule 11 (var_assign -> ID EQUALS STRING SEMICOL .)
    IF              reduce using rule 11 (var_assign -> ID EQUALS STRING SEMICOL .)
    CHAR            reduce using rule 11 (var_assign -> ID EQUALS STRING SEMICOL .)
    FLOATTYPE       reduce using rule 11 (var_assign -> ID EQUALS STRING SEMICOL .)
    INT             reduce using rule 11 (var_assign -> ID EQUALS STRING SEMICOL .)
    PRINT           reduce using rule 11 (var_assign -> ID EQUALS STRING SEMICOL .)
    NUMBER          reduce using rule 11 (var_assign -> ID EQUALS STRING SEMICOL .)
    LPAREN          reduce using rule 11 (var_assign -> ID EQUALS STRING SEMICOL .)
    $end            reduce using rule 11 (var_assign -> ID EQUALS STRING SEMICOL .)
    RBRACE          reduce using rule 11 (var_assign -> ID EQUALS STRING SEMICOL .)


state 63

    (12) var_assign -> ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 12 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 12 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 12 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 12 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 12 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 12 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 12 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 12 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 12 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 12 (var_assign -> ID EQUALS NUMBER SEMICOL .)


state 64

    (25) if_statement -> IF LPAREN comparison RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 70


state 65

    (13) var_statement -> CHAR ID EQUALS STRING . SEMICOL

    SEMICOL         shift and go to state 71


state 66

    (14) var_statement -> FLOATTYPE ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 72


state 67

    (15) var_statement -> INT ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 73


state 68

    (3) print_statement -> PRINT LPAREN expression RPAREN . SEMICOL

    SEMICOL         shift and go to state 74


state 69

    (4) print_statement -> PRINT LPAREN STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 75


state 70

    (25) if_statement -> IF LPAREN comparison RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression
    (6) statement -> . if_statement
    (7) statement -> . comparison
    (8) statement -> . var_statement
    (9) statement -> . var_assign
    (10) statement -> . print_statement
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (25) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (19) comparison -> . expression GTH expression
    (20) comparison -> . expression LTH expression
    (21) comparison -> . expression GTHOREQUAL expression
    (22) comparison -> . expression LTHOREQUAL expression
    (23) comparison -> . expression EQUALEQUAL expression
    (24) comparison -> . expression NOTEQUAL expression
    (13) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (14) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (15) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (11) var_assign -> . ID EQUALS STRING SEMICOL
    (12) var_assign -> . ID EQUALS NUMBER SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 9
    IF              shift and go to state 11
    CHAR            shift and go to state 13
    FLOATTYPE       shift and go to state 14
    INT             shift and go to state 16
    PRINT           shift and go to state 17
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    comparison                     shift and go to state 5
    statements                     shift and go to state 76
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    var_statement                  shift and go to state 6
    var_assign                     shift and go to state 7
    print_statement                shift and go to state 8
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 71

    (13) var_statement -> CHAR ID EQUALS STRING SEMICOL .

    ID              reduce using rule 13 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    IF              reduce using rule 13 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    CHAR            reduce using rule 13 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    FLOATTYPE       reduce using rule 13 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    INT             reduce using rule 13 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    PRINT           reduce using rule 13 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    NUMBER          reduce using rule 13 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    LPAREN          reduce using rule 13 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    $end            reduce using rule 13 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    RBRACE          reduce using rule 13 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)


state 72

    (14) var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 14 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 14 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 14 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 14 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 14 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 14 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 14 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 14 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 14 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 14 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)


state 73

    (15) var_statement -> INT ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 15 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 15 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 15 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 15 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 15 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 15 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 15 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 15 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 15 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 15 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)


state 74

    (3) print_statement -> PRINT LPAREN expression RPAREN SEMICOL .

    ID              reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    IF              reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    CHAR            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    INT             reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    PRINT           reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    NUMBER          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    LPAREN          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    $end            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    RBRACE          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)


state 75

    (4) print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .

    ID              reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    IF              reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    CHAR            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    INT             reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    PRINT           reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    NUMBER          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    LPAREN          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    $end            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    RBRACE          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)


state 76

    (25) if_statement -> IF LPAREN comparison RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression
    (6) statement -> . if_statement
    (7) statement -> . comparison
    (8) statement -> . var_statement
    (9) statement -> . var_assign
    (10) statement -> . print_statement
    (16) expression -> . ID
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (25) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (19) comparison -> . expression GTH expression
    (20) comparison -> . expression LTH expression
    (21) comparison -> . expression GTHOREQUAL expression
    (22) comparison -> . expression LTHOREQUAL expression
    (23) comparison -> . expression EQUALEQUAL expression
    (24) comparison -> . expression NOTEQUAL expression
    (13) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (14) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (15) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (11) var_assign -> . ID EQUALS STRING SEMICOL
    (12) var_assign -> . ID EQUALS NUMBER SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (17) term -> . ID
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . term MODULO factor
    (32) term -> . factor
    (18) factor -> . ID
    (33) factor -> . NUMBER
    (34) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 77
    ID              shift and go to state 9
    IF              shift and go to state 11
    CHAR            shift and go to state 13
    FLOATTYPE       shift and go to state 14
    INT             shift and go to state 16
    PRINT           shift and go to state 17
    NUMBER          shift and go to state 15
    LPAREN          shift and go to state 12

    comparison                     shift and go to state 5
    statement                      shift and go to state 19
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    var_statement                  shift and go to state 6
    var_assign                     shift and go to state 7
    print_statement                shift and go to state 8
    term                           shift and go to state 10
    factor                         shift and go to state 18

state 77

    (25) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 25 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 25 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 25 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 25 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 25 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 25 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 25 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 25 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 25 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 25 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 9 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 9
WARNING: reduce/reduce conflict in state 9 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 9
WARNING: reduce/reduce conflict in state 9 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 9
WARNING: reduce/reduce conflict in state 34 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 34
WARNING: reduce/reduce conflict in state 34 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 34
WARNING: reduce/reduce conflict in state 34 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 34
WARNING: reduce/reduce conflict in state 40 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 40
