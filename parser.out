Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CONSTANT
    CONTINUE
    FLOAT_CONST
    INT_CONST
    RETURN
    SIZEOF
    UNION
    VAR_TYPE
    VOID

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     print_statement -> PRINT LPAREN expression RPAREN SEMICOL
Rule 4     print_statement -> PRINT LPAREN STRING RPAREN SEMICOL
Rule 5     statement -> expression SEMICOL
Rule 6     statement -> while_statement
Rule 7     statement -> for_statement
Rule 8     statement -> if_statement
Rule 9     statement -> comparison
Rule 10    statement -> var_statement
Rule 11    statement -> var_assign
Rule 12    statement -> var_inc
Rule 13    statement -> var_dec
Rule 14    statement -> print_statement
Rule 15    var_assign -> ID EQUALS ID SEMICOL
Rule 16    var_assign -> ID EQUALS STRING SEMICOL
Rule 17    var_assign -> ID EQUALS NUMBER SEMICOL
Rule 18    var_assign -> ID EQUALS TRUE SEMICOL
Rule 19    var_assign -> ID EQUALS FALSE SEMICOL
Rule 20    var_inc -> ID PLUS PLUS SEMICOL
Rule 21    var_dec -> ID MINUS MINUS SEMICOL
Rule 22    var_statement -> CHAR ID EQUALS STRING SEMICOL
Rule 23    var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL
Rule 24    var_statement -> INT ID EQUALS NUMBER SEMICOL
Rule 25    var_statement -> BOOL ID EQUALS TRUE SEMICOL
Rule 26    var_statement -> BOOL ID EQUALS FALSE SEMICOL
Rule 27    expression -> ID
Rule 28    term -> ID
Rule 29    factor -> ID
Rule 30    comparison -> expression GTH expression
Rule 31    comparison -> expression LTH expression
Rule 32    comparison -> expression GTHOREQUAL expression
Rule 33    comparison -> expression LTHOREQUAL expression
Rule 34    comparison -> expression EQUALEQUAL expression
Rule 35    comparison -> expression NOTEQUAL expression
Rule 36    if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE
Rule 37    if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 38    while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
Rule 39    while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
Rule 40    while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
Rule 41    for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
Rule 42    expression -> expression PLUS term
Rule 43    expression -> expression MINUS term
Rule 44    expression -> term
Rule 45    term -> term TIMES factor
Rule 46    term -> term DIVIDE factor
Rule 47    term -> term MODULO factor
Rule 48    term -> factor
Rule 49    factor -> NUMBER
Rule 50    factor -> LPAREN expression RPAREN
Rule 51    empty -> <empty>

Terminals, with rules where they appear

BOOL                 : 25 26
BREAK                : 
CHAR                 : 22
CONSTANT             : 
CONTINUE             : 
DIVIDE               : 46
ELSE                 : 37
EQUALEQUAL           : 34
EQUALS               : 15 16 17 18 19 22 23 24 25 26
FALSE                : 19 26 40
FLOATTYPE            : 23
FLOAT_CONST          : 
FOR                  : 41
GTH                  : 30
GTHOREQUAL           : 32
ID                   : 15 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
IF                   : 36 37
INT                  : 24
INT_CONST            : 
LBRACE               : 36 37 37 38 39 40 41
LPAREN               : 3 4 36 37 38 39 40 41 50
LTH                  : 31
LTHOREQUAL           : 33
MINUS                : 21 21 43
MODULO               : 47
NOTEQUAL             : 35
NUMBER               : 17 23 24 49
PLUS                 : 20 20 42
PRINT                : 3 4
RBRACE               : 36 37 37 38 39 40 41
RETURN               : 
RPAREN               : 3 4 36 37 38 39 40 41 50
SEMICOL              : 3 4 5 15 16 17 18 19 20 21 22 23 24 25 26 41
SIZEOF               : 
STRING               : 4 16 22
TIMES                : 45
TRUE                 : 18 25 39
UNION                : 
VAR_TYPE             : 
VOID                 : 
WHILE                : 38 39 40
error                : 

Nonterminals, with rules where they appear

comparison           : 9 36 37 38 41
empty                : 
expression           : 3 5 30 30 31 31 32 32 33 33 34 34 35 35 42 43 50
factor               : 45 46 47 48
for_statement        : 7
if_statement         : 8
print_statement      : 14
statement            : 1 2
statements           : 1 36 37 37 38 39 40 41 0
term                 : 42 43 44 45 46 47
var_assign           : 11
var_dec              : 13
var_inc              : 12 41
var_statement        : 10 41
while_statement      : 6

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    var_statement                  shift and go to state 8
    var_assign                     shift and go to state 9
    var_inc                        shift and go to state 10
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    statement                      shift and go to state 26
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    var_statement                  shift and go to state 8
    var_assign                     shift and go to state 9
    var_inc                        shift and go to state 10
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 2

    (2) statements -> statement .

    ID              reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    CHAR            reduce using rule 2 (statements -> statement .)
    FLOATTYPE       reduce using rule 2 (statements -> statement .)
    INT             reduce using rule 2 (statements -> statement .)
    BOOL            reduce using rule 2 (statements -> statement .)
    PRINT           reduce using rule 2 (statements -> statement .)
    NUMBER          reduce using rule 2 (statements -> statement .)
    LPAREN          reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    RBRACE          reduce using rule 2 (statements -> statement .)


state 3

    (5) statement -> expression . SEMICOL
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term
    (30) comparison -> expression . GTH expression
    (31) comparison -> expression . LTH expression
    (32) comparison -> expression . GTHOREQUAL expression
    (33) comparison -> expression . LTHOREQUAL expression
    (34) comparison -> expression . EQUALEQUAL expression
    (35) comparison -> expression . NOTEQUAL expression

    SEMICOL         shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    GTH             shift and go to state 30
    LTH             shift and go to state 31
    GTHOREQUAL      shift and go to state 32
    LTHOREQUAL      shift and go to state 33
    EQUALEQUAL      shift and go to state 34
    NOTEQUAL        shift and go to state 35


state 4

    (6) statement -> while_statement .

    ID              reduce using rule 6 (statement -> while_statement .)
    WHILE           reduce using rule 6 (statement -> while_statement .)
    FOR             reduce using rule 6 (statement -> while_statement .)
    IF              reduce using rule 6 (statement -> while_statement .)
    CHAR            reduce using rule 6 (statement -> while_statement .)
    FLOATTYPE       reduce using rule 6 (statement -> while_statement .)
    INT             reduce using rule 6 (statement -> while_statement .)
    BOOL            reduce using rule 6 (statement -> while_statement .)
    PRINT           reduce using rule 6 (statement -> while_statement .)
    NUMBER          reduce using rule 6 (statement -> while_statement .)
    LPAREN          reduce using rule 6 (statement -> while_statement .)
    $end            reduce using rule 6 (statement -> while_statement .)
    RBRACE          reduce using rule 6 (statement -> while_statement .)


state 5

    (7) statement -> for_statement .

    ID              reduce using rule 7 (statement -> for_statement .)
    WHILE           reduce using rule 7 (statement -> for_statement .)
    FOR             reduce using rule 7 (statement -> for_statement .)
    IF              reduce using rule 7 (statement -> for_statement .)
    CHAR            reduce using rule 7 (statement -> for_statement .)
    FLOATTYPE       reduce using rule 7 (statement -> for_statement .)
    INT             reduce using rule 7 (statement -> for_statement .)
    BOOL            reduce using rule 7 (statement -> for_statement .)
    PRINT           reduce using rule 7 (statement -> for_statement .)
    NUMBER          reduce using rule 7 (statement -> for_statement .)
    LPAREN          reduce using rule 7 (statement -> for_statement .)
    $end            reduce using rule 7 (statement -> for_statement .)
    RBRACE          reduce using rule 7 (statement -> for_statement .)


state 6

    (8) statement -> if_statement .

    ID              reduce using rule 8 (statement -> if_statement .)
    WHILE           reduce using rule 8 (statement -> if_statement .)
    FOR             reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    CHAR            reduce using rule 8 (statement -> if_statement .)
    FLOATTYPE       reduce using rule 8 (statement -> if_statement .)
    INT             reduce using rule 8 (statement -> if_statement .)
    BOOL            reduce using rule 8 (statement -> if_statement .)
    PRINT           reduce using rule 8 (statement -> if_statement .)
    NUMBER          reduce using rule 8 (statement -> if_statement .)
    LPAREN          reduce using rule 8 (statement -> if_statement .)
    $end            reduce using rule 8 (statement -> if_statement .)
    RBRACE          reduce using rule 8 (statement -> if_statement .)


state 7

    (9) statement -> comparison .

    ID              reduce using rule 9 (statement -> comparison .)
    WHILE           reduce using rule 9 (statement -> comparison .)
    FOR             reduce using rule 9 (statement -> comparison .)
    IF              reduce using rule 9 (statement -> comparison .)
    CHAR            reduce using rule 9 (statement -> comparison .)
    FLOATTYPE       reduce using rule 9 (statement -> comparison .)
    INT             reduce using rule 9 (statement -> comparison .)
    BOOL            reduce using rule 9 (statement -> comparison .)
    PRINT           reduce using rule 9 (statement -> comparison .)
    NUMBER          reduce using rule 9 (statement -> comparison .)
    LPAREN          reduce using rule 9 (statement -> comparison .)
    $end            reduce using rule 9 (statement -> comparison .)
    RBRACE          reduce using rule 9 (statement -> comparison .)


state 8

    (10) statement -> var_statement .

    ID              reduce using rule 10 (statement -> var_statement .)
    WHILE           reduce using rule 10 (statement -> var_statement .)
    FOR             reduce using rule 10 (statement -> var_statement .)
    IF              reduce using rule 10 (statement -> var_statement .)
    CHAR            reduce using rule 10 (statement -> var_statement .)
    FLOATTYPE       reduce using rule 10 (statement -> var_statement .)
    INT             reduce using rule 10 (statement -> var_statement .)
    BOOL            reduce using rule 10 (statement -> var_statement .)
    PRINT           reduce using rule 10 (statement -> var_statement .)
    NUMBER          reduce using rule 10 (statement -> var_statement .)
    LPAREN          reduce using rule 10 (statement -> var_statement .)
    $end            reduce using rule 10 (statement -> var_statement .)
    RBRACE          reduce using rule 10 (statement -> var_statement .)


state 9

    (11) statement -> var_assign .

    ID              reduce using rule 11 (statement -> var_assign .)
    WHILE           reduce using rule 11 (statement -> var_assign .)
    FOR             reduce using rule 11 (statement -> var_assign .)
    IF              reduce using rule 11 (statement -> var_assign .)
    CHAR            reduce using rule 11 (statement -> var_assign .)
    FLOATTYPE       reduce using rule 11 (statement -> var_assign .)
    INT             reduce using rule 11 (statement -> var_assign .)
    BOOL            reduce using rule 11 (statement -> var_assign .)
    PRINT           reduce using rule 11 (statement -> var_assign .)
    NUMBER          reduce using rule 11 (statement -> var_assign .)
    LPAREN          reduce using rule 11 (statement -> var_assign .)
    $end            reduce using rule 11 (statement -> var_assign .)
    RBRACE          reduce using rule 11 (statement -> var_assign .)


state 10

    (12) statement -> var_inc .

    ID              reduce using rule 12 (statement -> var_inc .)
    WHILE           reduce using rule 12 (statement -> var_inc .)
    FOR             reduce using rule 12 (statement -> var_inc .)
    IF              reduce using rule 12 (statement -> var_inc .)
    CHAR            reduce using rule 12 (statement -> var_inc .)
    FLOATTYPE       reduce using rule 12 (statement -> var_inc .)
    INT             reduce using rule 12 (statement -> var_inc .)
    BOOL            reduce using rule 12 (statement -> var_inc .)
    PRINT           reduce using rule 12 (statement -> var_inc .)
    NUMBER          reduce using rule 12 (statement -> var_inc .)
    LPAREN          reduce using rule 12 (statement -> var_inc .)
    $end            reduce using rule 12 (statement -> var_inc .)
    RBRACE          reduce using rule 12 (statement -> var_inc .)


state 11

    (13) statement -> var_dec .

    ID              reduce using rule 13 (statement -> var_dec .)
    WHILE           reduce using rule 13 (statement -> var_dec .)
    FOR             reduce using rule 13 (statement -> var_dec .)
    IF              reduce using rule 13 (statement -> var_dec .)
    CHAR            reduce using rule 13 (statement -> var_dec .)
    FLOATTYPE       reduce using rule 13 (statement -> var_dec .)
    INT             reduce using rule 13 (statement -> var_dec .)
    BOOL            reduce using rule 13 (statement -> var_dec .)
    PRINT           reduce using rule 13 (statement -> var_dec .)
    NUMBER          reduce using rule 13 (statement -> var_dec .)
    LPAREN          reduce using rule 13 (statement -> var_dec .)
    $end            reduce using rule 13 (statement -> var_dec .)
    RBRACE          reduce using rule 13 (statement -> var_dec .)


state 12

    (14) statement -> print_statement .

    ID              reduce using rule 14 (statement -> print_statement .)
    WHILE           reduce using rule 14 (statement -> print_statement .)
    FOR             reduce using rule 14 (statement -> print_statement .)
    IF              reduce using rule 14 (statement -> print_statement .)
    CHAR            reduce using rule 14 (statement -> print_statement .)
    FLOATTYPE       reduce using rule 14 (statement -> print_statement .)
    INT             reduce using rule 14 (statement -> print_statement .)
    BOOL            reduce using rule 14 (statement -> print_statement .)
    PRINT           reduce using rule 14 (statement -> print_statement .)
    NUMBER          reduce using rule 14 (statement -> print_statement .)
    LPAREN          reduce using rule 14 (statement -> print_statement .)
    $end            reduce using rule 14 (statement -> print_statement .)
    RBRACE          reduce using rule 14 (statement -> print_statement .)


state 13

    (27) expression -> ID .
    (15) var_assign -> ID . EQUALS ID SEMICOL
    (16) var_assign -> ID . EQUALS STRING SEMICOL
    (17) var_assign -> ID . EQUALS NUMBER SEMICOL
    (18) var_assign -> ID . EQUALS TRUE SEMICOL
    (19) var_assign -> ID . EQUALS FALSE SEMICOL
    (20) var_inc -> ID . PLUS PLUS SEMICOL
    (21) var_dec -> ID . MINUS MINUS SEMICOL
    (28) term -> ID .
    (29) factor -> ID .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for SEMICOL resolved using rule 27 (expression -> ID .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for GTH resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 27 (expression -> ID .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for GTH resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 27 (expression -> ID .)
    SEMICOL         reduce using rule 27 (expression -> ID .)
    GTH             reduce using rule 27 (expression -> ID .)
    LTH             reduce using rule 27 (expression -> ID .)
    GTHOREQUAL      reduce using rule 27 (expression -> ID .)
    LTHOREQUAL      reduce using rule 27 (expression -> ID .)
    EQUALEQUAL      reduce using rule 27 (expression -> ID .)
    NOTEQUAL        reduce using rule 27 (expression -> ID .)
    EQUALS          shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    TIMES           reduce using rule 28 (term -> ID .)
    DIVIDE          reduce using rule 28 (term -> ID .)
    MODULO          reduce using rule 28 (term -> ID .)

  ! PLUS            [ reduce using rule 27 (expression -> ID .) ]
  ! MINUS           [ reduce using rule 27 (expression -> ID .) ]
  ! SEMICOL         [ reduce using rule 28 (term -> ID .) ]
  ! PLUS            [ reduce using rule 28 (term -> ID .) ]
  ! MINUS           [ reduce using rule 28 (term -> ID .) ]
  ! GTH             [ reduce using rule 28 (term -> ID .) ]
  ! LTH             [ reduce using rule 28 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 28 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 28 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 28 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 28 (term -> ID .) ]
  ! TIMES           [ reduce using rule 29 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 29 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 29 (factor -> ID .) ]
  ! SEMICOL         [ reduce using rule 29 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 29 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 29 (factor -> ID .) ]
  ! GTH             [ reduce using rule 29 (factor -> ID .) ]
  ! LTH             [ reduce using rule 29 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 29 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 29 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 29 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 29 (factor -> ID .) ]


state 14

    (44) expression -> term .
    (45) term -> term . TIMES factor
    (46) term -> term . DIVIDE factor
    (47) term -> term . MODULO factor

    SEMICOL         reduce using rule 44 (expression -> term .)
    PLUS            reduce using rule 44 (expression -> term .)
    MINUS           reduce using rule 44 (expression -> term .)
    GTH             reduce using rule 44 (expression -> term .)
    LTH             reduce using rule 44 (expression -> term .)
    GTHOREQUAL      reduce using rule 44 (expression -> term .)
    LTHOREQUAL      reduce using rule 44 (expression -> term .)
    EQUALEQUAL      reduce using rule 44 (expression -> term .)
    NOTEQUAL        reduce using rule 44 (expression -> term .)
    RPAREN          reduce using rule 44 (expression -> term .)
    ID              reduce using rule 44 (expression -> term .)
    WHILE           reduce using rule 44 (expression -> term .)
    FOR             reduce using rule 44 (expression -> term .)
    IF              reduce using rule 44 (expression -> term .)
    CHAR            reduce using rule 44 (expression -> term .)
    FLOATTYPE       reduce using rule 44 (expression -> term .)
    INT             reduce using rule 44 (expression -> term .)
    BOOL            reduce using rule 44 (expression -> term .)
    PRINT           reduce using rule 44 (expression -> term .)
    NUMBER          reduce using rule 44 (expression -> term .)
    LPAREN          reduce using rule 44 (expression -> term .)
    $end            reduce using rule 44 (expression -> term .)
    RBRACE          reduce using rule 44 (expression -> term .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    MODULO          shift and go to state 41


state 15

    (38) while_statement -> WHILE . LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> WHILE . LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> WHILE . LPAREN FALSE RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 42


state 16

    (50) factor -> LPAREN . expression RPAREN
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    expression                     shift and go to state 43
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 17

    (41) for_statement -> FOR . LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 45


state 18

    (36) if_statement -> IF . LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> IF . LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LPAREN          shift and go to state 46


state 19

    (22) var_statement -> CHAR . ID EQUALS STRING SEMICOL

    ID              shift and go to state 47


state 20

    (23) var_statement -> FLOATTYPE . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 48


state 21

    (49) factor -> NUMBER .

    TIMES           reduce using rule 49 (factor -> NUMBER .)
    DIVIDE          reduce using rule 49 (factor -> NUMBER .)
    MODULO          reduce using rule 49 (factor -> NUMBER .)
    SEMICOL         reduce using rule 49 (factor -> NUMBER .)
    PLUS            reduce using rule 49 (factor -> NUMBER .)
    MINUS           reduce using rule 49 (factor -> NUMBER .)
    GTH             reduce using rule 49 (factor -> NUMBER .)
    LTH             reduce using rule 49 (factor -> NUMBER .)
    GTHOREQUAL      reduce using rule 49 (factor -> NUMBER .)
    LTHOREQUAL      reduce using rule 49 (factor -> NUMBER .)
    EQUALEQUAL      reduce using rule 49 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 49 (factor -> NUMBER .)
    RPAREN          reduce using rule 49 (factor -> NUMBER .)
    ID              reduce using rule 49 (factor -> NUMBER .)
    WHILE           reduce using rule 49 (factor -> NUMBER .)
    FOR             reduce using rule 49 (factor -> NUMBER .)
    IF              reduce using rule 49 (factor -> NUMBER .)
    CHAR            reduce using rule 49 (factor -> NUMBER .)
    FLOATTYPE       reduce using rule 49 (factor -> NUMBER .)
    INT             reduce using rule 49 (factor -> NUMBER .)
    BOOL            reduce using rule 49 (factor -> NUMBER .)
    PRINT           reduce using rule 49 (factor -> NUMBER .)
    NUMBER          reduce using rule 49 (factor -> NUMBER .)
    LPAREN          reduce using rule 49 (factor -> NUMBER .)
    $end            reduce using rule 49 (factor -> NUMBER .)
    RBRACE          reduce using rule 49 (factor -> NUMBER .)


state 22

    (24) var_statement -> INT . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 49


state 23

    (25) var_statement -> BOOL . ID EQUALS TRUE SEMICOL
    (26) var_statement -> BOOL . ID EQUALS FALSE SEMICOL

    ID              shift and go to state 50


state 24

    (3) print_statement -> PRINT . LPAREN expression RPAREN SEMICOL
    (4) print_statement -> PRINT . LPAREN STRING RPAREN SEMICOL

    LPAREN          shift and go to state 51


state 25

    (48) term -> factor .

    TIMES           reduce using rule 48 (term -> factor .)
    DIVIDE          reduce using rule 48 (term -> factor .)
    MODULO          reduce using rule 48 (term -> factor .)
    SEMICOL         reduce using rule 48 (term -> factor .)
    PLUS            reduce using rule 48 (term -> factor .)
    MINUS           reduce using rule 48 (term -> factor .)
    GTH             reduce using rule 48 (term -> factor .)
    LTH             reduce using rule 48 (term -> factor .)
    GTHOREQUAL      reduce using rule 48 (term -> factor .)
    LTHOREQUAL      reduce using rule 48 (term -> factor .)
    EQUALEQUAL      reduce using rule 48 (term -> factor .)
    NOTEQUAL        reduce using rule 48 (term -> factor .)
    RPAREN          reduce using rule 48 (term -> factor .)
    ID              reduce using rule 48 (term -> factor .)
    WHILE           reduce using rule 48 (term -> factor .)
    FOR             reduce using rule 48 (term -> factor .)
    IF              reduce using rule 48 (term -> factor .)
    CHAR            reduce using rule 48 (term -> factor .)
    FLOATTYPE       reduce using rule 48 (term -> factor .)
    INT             reduce using rule 48 (term -> factor .)
    BOOL            reduce using rule 48 (term -> factor .)
    PRINT           reduce using rule 48 (term -> factor .)
    NUMBER          reduce using rule 48 (term -> factor .)
    LPAREN          reduce using rule 48 (term -> factor .)
    $end            reduce using rule 48 (term -> factor .)
    RBRACE          reduce using rule 48 (term -> factor .)


state 26

    (1) statements -> statements statement .

    ID              reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    CHAR            reduce using rule 1 (statements -> statements statement .)
    FLOATTYPE       reduce using rule 1 (statements -> statements statement .)
    INT             reduce using rule 1 (statements -> statements statement .)
    BOOL            reduce using rule 1 (statements -> statements statement .)
    PRINT           reduce using rule 1 (statements -> statements statement .)
    NUMBER          reduce using rule 1 (statements -> statements statement .)
    LPAREN          reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    RBRACE          reduce using rule 1 (statements -> statements statement .)


state 27

    (5) statement -> expression SEMICOL .

    ID              reduce using rule 5 (statement -> expression SEMICOL .)
    WHILE           reduce using rule 5 (statement -> expression SEMICOL .)
    FOR             reduce using rule 5 (statement -> expression SEMICOL .)
    IF              reduce using rule 5 (statement -> expression SEMICOL .)
    CHAR            reduce using rule 5 (statement -> expression SEMICOL .)
    FLOATTYPE       reduce using rule 5 (statement -> expression SEMICOL .)
    INT             reduce using rule 5 (statement -> expression SEMICOL .)
    BOOL            reduce using rule 5 (statement -> expression SEMICOL .)
    PRINT           reduce using rule 5 (statement -> expression SEMICOL .)
    NUMBER          reduce using rule 5 (statement -> expression SEMICOL .)
    LPAREN          reduce using rule 5 (statement -> expression SEMICOL .)
    $end            reduce using rule 5 (statement -> expression SEMICOL .)
    RBRACE          reduce using rule 5 (statement -> expression SEMICOL .)


state 28

    (42) expression -> expression PLUS . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 53
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    term                           shift and go to state 52
    factor                         shift and go to state 25

state 29

    (43) expression -> expression MINUS . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 53
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    term                           shift and go to state 54
    factor                         shift and go to state 25

state 30

    (30) comparison -> expression GTH . expression
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    expression                     shift and go to state 55
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 31

    (31) comparison -> expression LTH . expression
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    expression                     shift and go to state 56
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 32

    (32) comparison -> expression GTHOREQUAL . expression
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    expression                     shift and go to state 57
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 33

    (33) comparison -> expression LTHOREQUAL . expression
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    expression                     shift and go to state 58
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 34

    (34) comparison -> expression EQUALEQUAL . expression
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    expression                     shift and go to state 59
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 35

    (35) comparison -> expression NOTEQUAL . expression
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    expression                     shift and go to state 60
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 36

    (15) var_assign -> ID EQUALS . ID SEMICOL
    (16) var_assign -> ID EQUALS . STRING SEMICOL
    (17) var_assign -> ID EQUALS . NUMBER SEMICOL
    (18) var_assign -> ID EQUALS . TRUE SEMICOL
    (19) var_assign -> ID EQUALS . FALSE SEMICOL

    ID              shift and go to state 61
    STRING          shift and go to state 62
    NUMBER          shift and go to state 63
    TRUE            shift and go to state 64
    FALSE           shift and go to state 65


state 37

    (20) var_inc -> ID PLUS . PLUS SEMICOL

    PLUS            shift and go to state 66


state 38

    (21) var_dec -> ID MINUS . MINUS SEMICOL

    MINUS           shift and go to state 67


state 39

    (45) term -> term TIMES . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 69
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    factor                         shift and go to state 68

state 40

    (46) term -> term DIVIDE . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 69
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    factor                         shift and go to state 70

state 41

    (47) term -> term MODULO . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 69
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    factor                         shift and go to state 71

state 42

    (38) while_statement -> WHILE LPAREN . comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> WHILE LPAREN . TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> WHILE LPAREN . FALSE RPAREN LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    TRUE            shift and go to state 73
    FALSE           shift and go to state 74
    ID              shift and go to state 44
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 72
    expression                     shift and go to state 75
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 43

    (50) factor -> LPAREN expression . RPAREN
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    RPAREN          shift and go to state 76
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29


state 44

    (27) expression -> ID .
    (28) term -> ID .
    (29) factor -> ID .

  ! reduce/reduce conflict for RPAREN resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 27 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 27 (expression -> ID .)
    RPAREN          reduce using rule 27 (expression -> ID .)
    PLUS            reduce using rule 27 (expression -> ID .)
    MINUS           reduce using rule 27 (expression -> ID .)
    ID              reduce using rule 27 (expression -> ID .)
    WHILE           reduce using rule 27 (expression -> ID .)
    FOR             reduce using rule 27 (expression -> ID .)
    IF              reduce using rule 27 (expression -> ID .)
    CHAR            reduce using rule 27 (expression -> ID .)
    FLOATTYPE       reduce using rule 27 (expression -> ID .)
    INT             reduce using rule 27 (expression -> ID .)
    BOOL            reduce using rule 27 (expression -> ID .)
    PRINT           reduce using rule 27 (expression -> ID .)
    NUMBER          reduce using rule 27 (expression -> ID .)
    LPAREN          reduce using rule 27 (expression -> ID .)
    $end            reduce using rule 27 (expression -> ID .)
    SEMICOL         reduce using rule 27 (expression -> ID .)
    RBRACE          reduce using rule 27 (expression -> ID .)
    GTH             reduce using rule 27 (expression -> ID .)
    LTH             reduce using rule 27 (expression -> ID .)
    GTHOREQUAL      reduce using rule 27 (expression -> ID .)
    LTHOREQUAL      reduce using rule 27 (expression -> ID .)
    EQUALEQUAL      reduce using rule 27 (expression -> ID .)
    NOTEQUAL        reduce using rule 27 (expression -> ID .)
    TIMES           reduce using rule 28 (term -> ID .)
    DIVIDE          reduce using rule 28 (term -> ID .)
    MODULO          reduce using rule 28 (term -> ID .)

  ! RPAREN          [ reduce using rule 28 (term -> ID .) ]
  ! PLUS            [ reduce using rule 28 (term -> ID .) ]
  ! MINUS           [ reduce using rule 28 (term -> ID .) ]
  ! ID              [ reduce using rule 28 (term -> ID .) ]
  ! WHILE           [ reduce using rule 28 (term -> ID .) ]
  ! FOR             [ reduce using rule 28 (term -> ID .) ]
  ! IF              [ reduce using rule 28 (term -> ID .) ]
  ! CHAR            [ reduce using rule 28 (term -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 28 (term -> ID .) ]
  ! INT             [ reduce using rule 28 (term -> ID .) ]
  ! BOOL            [ reduce using rule 28 (term -> ID .) ]
  ! PRINT           [ reduce using rule 28 (term -> ID .) ]
  ! NUMBER          [ reduce using rule 28 (term -> ID .) ]
  ! LPAREN          [ reduce using rule 28 (term -> ID .) ]
  ! $end            [ reduce using rule 28 (term -> ID .) ]
  ! SEMICOL         [ reduce using rule 28 (term -> ID .) ]
  ! RBRACE          [ reduce using rule 28 (term -> ID .) ]
  ! GTH             [ reduce using rule 28 (term -> ID .) ]
  ! LTH             [ reduce using rule 28 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 28 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 28 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 28 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 28 (term -> ID .) ]
  ! TIMES           [ reduce using rule 29 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 29 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 29 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 29 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 29 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 29 (factor -> ID .) ]
  ! ID              [ reduce using rule 29 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 29 (factor -> ID .) ]
  ! FOR             [ reduce using rule 29 (factor -> ID .) ]
  ! IF              [ reduce using rule 29 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 29 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 29 (factor -> ID .) ]
  ! INT             [ reduce using rule 29 (factor -> ID .) ]
  ! BOOL            [ reduce using rule 29 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 29 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 29 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 29 (factor -> ID .) ]
  ! $end            [ reduce using rule 29 (factor -> ID .) ]
  ! SEMICOL         [ reduce using rule 29 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 29 (factor -> ID .) ]
  ! GTH             [ reduce using rule 29 (factor -> ID .) ]
  ! LTH             [ reduce using rule 29 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 29 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 29 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 29 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 29 (factor -> ID .) ]


state 45

    (41) for_statement -> FOR LPAREN . var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL

    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23

    var_statement                  shift and go to state 77

state 46

    (36) if_statement -> IF LPAREN . comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> IF LPAREN . comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 78
    expression                     shift and go to state 75
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 47

    (22) var_statement -> CHAR ID . EQUALS STRING SEMICOL

    EQUALS          shift and go to state 79


state 48

    (23) var_statement -> FLOATTYPE ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 80


state 49

    (24) var_statement -> INT ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 81


state 50

    (25) var_statement -> BOOL ID . EQUALS TRUE SEMICOL
    (26) var_statement -> BOOL ID . EQUALS FALSE SEMICOL

    EQUALS          shift and go to state 82


state 51

    (3) print_statement -> PRINT LPAREN . expression RPAREN SEMICOL
    (4) print_statement -> PRINT LPAREN . STRING RPAREN SEMICOL
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    STRING          shift and go to state 84
    ID              shift and go to state 44
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    expression                     shift and go to state 83
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 52

    (42) expression -> expression PLUS term .
    (45) term -> term . TIMES factor
    (46) term -> term . DIVIDE factor
    (47) term -> term . MODULO factor

    SEMICOL         reduce using rule 42 (expression -> expression PLUS term .)
    PLUS            reduce using rule 42 (expression -> expression PLUS term .)
    MINUS           reduce using rule 42 (expression -> expression PLUS term .)
    GTH             reduce using rule 42 (expression -> expression PLUS term .)
    LTH             reduce using rule 42 (expression -> expression PLUS term .)
    GTHOREQUAL      reduce using rule 42 (expression -> expression PLUS term .)
    LTHOREQUAL      reduce using rule 42 (expression -> expression PLUS term .)
    EQUALEQUAL      reduce using rule 42 (expression -> expression PLUS term .)
    NOTEQUAL        reduce using rule 42 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 42 (expression -> expression PLUS term .)
    ID              reduce using rule 42 (expression -> expression PLUS term .)
    WHILE           reduce using rule 42 (expression -> expression PLUS term .)
    FOR             reduce using rule 42 (expression -> expression PLUS term .)
    IF              reduce using rule 42 (expression -> expression PLUS term .)
    CHAR            reduce using rule 42 (expression -> expression PLUS term .)
    FLOATTYPE       reduce using rule 42 (expression -> expression PLUS term .)
    INT             reduce using rule 42 (expression -> expression PLUS term .)
    BOOL            reduce using rule 42 (expression -> expression PLUS term .)
    PRINT           reduce using rule 42 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 42 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 42 (expression -> expression PLUS term .)
    $end            reduce using rule 42 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 42 (expression -> expression PLUS term .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    MODULO          shift and go to state 41


state 53

    (28) term -> ID .
    (29) factor -> ID .

  ! reduce/reduce conflict for TIMES resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 28 (term -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 28 (term -> ID .)
    TIMES           reduce using rule 28 (term -> ID .)
    DIVIDE          reduce using rule 28 (term -> ID .)
    MODULO          reduce using rule 28 (term -> ID .)
    SEMICOL         reduce using rule 28 (term -> ID .)
    PLUS            reduce using rule 28 (term -> ID .)
    MINUS           reduce using rule 28 (term -> ID .)
    GTH             reduce using rule 28 (term -> ID .)
    LTH             reduce using rule 28 (term -> ID .)
    GTHOREQUAL      reduce using rule 28 (term -> ID .)
    LTHOREQUAL      reduce using rule 28 (term -> ID .)
    EQUALEQUAL      reduce using rule 28 (term -> ID .)
    NOTEQUAL        reduce using rule 28 (term -> ID .)
    RPAREN          reduce using rule 28 (term -> ID .)
    ID              reduce using rule 28 (term -> ID .)
    WHILE           reduce using rule 28 (term -> ID .)
    FOR             reduce using rule 28 (term -> ID .)
    IF              reduce using rule 28 (term -> ID .)
    CHAR            reduce using rule 28 (term -> ID .)
    FLOATTYPE       reduce using rule 28 (term -> ID .)
    INT             reduce using rule 28 (term -> ID .)
    BOOL            reduce using rule 28 (term -> ID .)
    PRINT           reduce using rule 28 (term -> ID .)
    NUMBER          reduce using rule 28 (term -> ID .)
    LPAREN          reduce using rule 28 (term -> ID .)
    $end            reduce using rule 28 (term -> ID .)
    RBRACE          reduce using rule 28 (term -> ID .)

  ! TIMES           [ reduce using rule 29 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 29 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 29 (factor -> ID .) ]
  ! SEMICOL         [ reduce using rule 29 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 29 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 29 (factor -> ID .) ]
  ! GTH             [ reduce using rule 29 (factor -> ID .) ]
  ! LTH             [ reduce using rule 29 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 29 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 29 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 29 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 29 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 29 (factor -> ID .) ]
  ! ID              [ reduce using rule 29 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 29 (factor -> ID .) ]
  ! FOR             [ reduce using rule 29 (factor -> ID .) ]
  ! IF              [ reduce using rule 29 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 29 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 29 (factor -> ID .) ]
  ! INT             [ reduce using rule 29 (factor -> ID .) ]
  ! BOOL            [ reduce using rule 29 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 29 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 29 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 29 (factor -> ID .) ]
  ! $end            [ reduce using rule 29 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 29 (factor -> ID .) ]


state 54

    (43) expression -> expression MINUS term .
    (45) term -> term . TIMES factor
    (46) term -> term . DIVIDE factor
    (47) term -> term . MODULO factor

    SEMICOL         reduce using rule 43 (expression -> expression MINUS term .)
    PLUS            reduce using rule 43 (expression -> expression MINUS term .)
    MINUS           reduce using rule 43 (expression -> expression MINUS term .)
    GTH             reduce using rule 43 (expression -> expression MINUS term .)
    LTH             reduce using rule 43 (expression -> expression MINUS term .)
    GTHOREQUAL      reduce using rule 43 (expression -> expression MINUS term .)
    LTHOREQUAL      reduce using rule 43 (expression -> expression MINUS term .)
    EQUALEQUAL      reduce using rule 43 (expression -> expression MINUS term .)
    NOTEQUAL        reduce using rule 43 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 43 (expression -> expression MINUS term .)
    ID              reduce using rule 43 (expression -> expression MINUS term .)
    WHILE           reduce using rule 43 (expression -> expression MINUS term .)
    FOR             reduce using rule 43 (expression -> expression MINUS term .)
    IF              reduce using rule 43 (expression -> expression MINUS term .)
    CHAR            reduce using rule 43 (expression -> expression MINUS term .)
    FLOATTYPE       reduce using rule 43 (expression -> expression MINUS term .)
    INT             reduce using rule 43 (expression -> expression MINUS term .)
    BOOL            reduce using rule 43 (expression -> expression MINUS term .)
    PRINT           reduce using rule 43 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 43 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 43 (expression -> expression MINUS term .)
    $end            reduce using rule 43 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 43 (expression -> expression MINUS term .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40
    MODULO          shift and go to state 41


state 55

    (30) comparison -> expression GTH expression .
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    ID              reduce using rule 30 (comparison -> expression GTH expression .)
    WHILE           reduce using rule 30 (comparison -> expression GTH expression .)
    FOR             reduce using rule 30 (comparison -> expression GTH expression .)
    IF              reduce using rule 30 (comparison -> expression GTH expression .)
    CHAR            reduce using rule 30 (comparison -> expression GTH expression .)
    FLOATTYPE       reduce using rule 30 (comparison -> expression GTH expression .)
    INT             reduce using rule 30 (comparison -> expression GTH expression .)
    BOOL            reduce using rule 30 (comparison -> expression GTH expression .)
    PRINT           reduce using rule 30 (comparison -> expression GTH expression .)
    NUMBER          reduce using rule 30 (comparison -> expression GTH expression .)
    LPAREN          reduce using rule 30 (comparison -> expression GTH expression .)
    $end            reduce using rule 30 (comparison -> expression GTH expression .)
    RPAREN          reduce using rule 30 (comparison -> expression GTH expression .)
    SEMICOL         reduce using rule 30 (comparison -> expression GTH expression .)
    RBRACE          reduce using rule 30 (comparison -> expression GTH expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29


state 56

    (31) comparison -> expression LTH expression .
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    ID              reduce using rule 31 (comparison -> expression LTH expression .)
    WHILE           reduce using rule 31 (comparison -> expression LTH expression .)
    FOR             reduce using rule 31 (comparison -> expression LTH expression .)
    IF              reduce using rule 31 (comparison -> expression LTH expression .)
    CHAR            reduce using rule 31 (comparison -> expression LTH expression .)
    FLOATTYPE       reduce using rule 31 (comparison -> expression LTH expression .)
    INT             reduce using rule 31 (comparison -> expression LTH expression .)
    BOOL            reduce using rule 31 (comparison -> expression LTH expression .)
    PRINT           reduce using rule 31 (comparison -> expression LTH expression .)
    NUMBER          reduce using rule 31 (comparison -> expression LTH expression .)
    LPAREN          reduce using rule 31 (comparison -> expression LTH expression .)
    $end            reduce using rule 31 (comparison -> expression LTH expression .)
    RPAREN          reduce using rule 31 (comparison -> expression LTH expression .)
    SEMICOL         reduce using rule 31 (comparison -> expression LTH expression .)
    RBRACE          reduce using rule 31 (comparison -> expression LTH expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29


state 57

    (32) comparison -> expression GTHOREQUAL expression .
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    ID              reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    WHILE           reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    FOR             reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    IF              reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    CHAR            reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    INT             reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    BOOL            reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    PRINT           reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    NUMBER          reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    LPAREN          reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    $end            reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    RPAREN          reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    SEMICOL         reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    RBRACE          reduce using rule 32 (comparison -> expression GTHOREQUAL expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29


state 58

    (33) comparison -> expression LTHOREQUAL expression .
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    ID              reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    WHILE           reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    FOR             reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    IF              reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    CHAR            reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    INT             reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    BOOL            reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    PRINT           reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    NUMBER          reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    LPAREN          reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    $end            reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    RPAREN          reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    SEMICOL         reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    RBRACE          reduce using rule 33 (comparison -> expression LTHOREQUAL expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29


state 59

    (34) comparison -> expression EQUALEQUAL expression .
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    ID              reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    WHILE           reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    FOR             reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    IF              reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    CHAR            reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    FLOATTYPE       reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    INT             reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    BOOL            reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    PRINT           reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    NUMBER          reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    LPAREN          reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    $end            reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    RPAREN          reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    SEMICOL         reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    RBRACE          reduce using rule 34 (comparison -> expression EQUALEQUAL expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29


state 60

    (35) comparison -> expression NOTEQUAL expression .
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    ID              reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    FOR             reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    IF              reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    CHAR            reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    FLOATTYPE       reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    INT             reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    BOOL            reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    NUMBER          reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    LPAREN          reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    $end            reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    SEMICOL         reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    RBRACE          reduce using rule 35 (comparison -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29


state 61

    (15) var_assign -> ID EQUALS ID . SEMICOL

    SEMICOL         shift and go to state 85


state 62

    (16) var_assign -> ID EQUALS STRING . SEMICOL

    SEMICOL         shift and go to state 86


state 63

    (17) var_assign -> ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 87


state 64

    (18) var_assign -> ID EQUALS TRUE . SEMICOL

    SEMICOL         shift and go to state 88


state 65

    (19) var_assign -> ID EQUALS FALSE . SEMICOL

    SEMICOL         shift and go to state 89


state 66

    (20) var_inc -> ID PLUS PLUS . SEMICOL

    SEMICOL         shift and go to state 90


state 67

    (21) var_dec -> ID MINUS MINUS . SEMICOL

    SEMICOL         shift and go to state 91


state 68

    (45) term -> term TIMES factor .

    TIMES           reduce using rule 45 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 45 (term -> term TIMES factor .)
    MODULO          reduce using rule 45 (term -> term TIMES factor .)
    SEMICOL         reduce using rule 45 (term -> term TIMES factor .)
    PLUS            reduce using rule 45 (term -> term TIMES factor .)
    MINUS           reduce using rule 45 (term -> term TIMES factor .)
    GTH             reduce using rule 45 (term -> term TIMES factor .)
    LTH             reduce using rule 45 (term -> term TIMES factor .)
    GTHOREQUAL      reduce using rule 45 (term -> term TIMES factor .)
    LTHOREQUAL      reduce using rule 45 (term -> term TIMES factor .)
    EQUALEQUAL      reduce using rule 45 (term -> term TIMES factor .)
    NOTEQUAL        reduce using rule 45 (term -> term TIMES factor .)
    RPAREN          reduce using rule 45 (term -> term TIMES factor .)
    ID              reduce using rule 45 (term -> term TIMES factor .)
    WHILE           reduce using rule 45 (term -> term TIMES factor .)
    FOR             reduce using rule 45 (term -> term TIMES factor .)
    IF              reduce using rule 45 (term -> term TIMES factor .)
    CHAR            reduce using rule 45 (term -> term TIMES factor .)
    FLOATTYPE       reduce using rule 45 (term -> term TIMES factor .)
    INT             reduce using rule 45 (term -> term TIMES factor .)
    BOOL            reduce using rule 45 (term -> term TIMES factor .)
    PRINT           reduce using rule 45 (term -> term TIMES factor .)
    NUMBER          reduce using rule 45 (term -> term TIMES factor .)
    LPAREN          reduce using rule 45 (term -> term TIMES factor .)
    $end            reduce using rule 45 (term -> term TIMES factor .)
    RBRACE          reduce using rule 45 (term -> term TIMES factor .)


state 69

    (29) factor -> ID .

    TIMES           reduce using rule 29 (factor -> ID .)
    DIVIDE          reduce using rule 29 (factor -> ID .)
    MODULO          reduce using rule 29 (factor -> ID .)
    SEMICOL         reduce using rule 29 (factor -> ID .)
    PLUS            reduce using rule 29 (factor -> ID .)
    MINUS           reduce using rule 29 (factor -> ID .)
    GTH             reduce using rule 29 (factor -> ID .)
    LTH             reduce using rule 29 (factor -> ID .)
    GTHOREQUAL      reduce using rule 29 (factor -> ID .)
    LTHOREQUAL      reduce using rule 29 (factor -> ID .)
    EQUALEQUAL      reduce using rule 29 (factor -> ID .)
    NOTEQUAL        reduce using rule 29 (factor -> ID .)
    RPAREN          reduce using rule 29 (factor -> ID .)
    ID              reduce using rule 29 (factor -> ID .)
    WHILE           reduce using rule 29 (factor -> ID .)
    FOR             reduce using rule 29 (factor -> ID .)
    IF              reduce using rule 29 (factor -> ID .)
    CHAR            reduce using rule 29 (factor -> ID .)
    FLOATTYPE       reduce using rule 29 (factor -> ID .)
    INT             reduce using rule 29 (factor -> ID .)
    BOOL            reduce using rule 29 (factor -> ID .)
    PRINT           reduce using rule 29 (factor -> ID .)
    NUMBER          reduce using rule 29 (factor -> ID .)
    LPAREN          reduce using rule 29 (factor -> ID .)
    $end            reduce using rule 29 (factor -> ID .)
    RBRACE          reduce using rule 29 (factor -> ID .)


state 70

    (46) term -> term DIVIDE factor .

    TIMES           reduce using rule 46 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 46 (term -> term DIVIDE factor .)
    MODULO          reduce using rule 46 (term -> term DIVIDE factor .)
    SEMICOL         reduce using rule 46 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 46 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 46 (term -> term DIVIDE factor .)
    GTH             reduce using rule 46 (term -> term DIVIDE factor .)
    LTH             reduce using rule 46 (term -> term DIVIDE factor .)
    GTHOREQUAL      reduce using rule 46 (term -> term DIVIDE factor .)
    LTHOREQUAL      reduce using rule 46 (term -> term DIVIDE factor .)
    EQUALEQUAL      reduce using rule 46 (term -> term DIVIDE factor .)
    NOTEQUAL        reduce using rule 46 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 46 (term -> term DIVIDE factor .)
    ID              reduce using rule 46 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 46 (term -> term DIVIDE factor .)
    FOR             reduce using rule 46 (term -> term DIVIDE factor .)
    IF              reduce using rule 46 (term -> term DIVIDE factor .)
    CHAR            reduce using rule 46 (term -> term DIVIDE factor .)
    FLOATTYPE       reduce using rule 46 (term -> term DIVIDE factor .)
    INT             reduce using rule 46 (term -> term DIVIDE factor .)
    BOOL            reduce using rule 46 (term -> term DIVIDE factor .)
    PRINT           reduce using rule 46 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 46 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 46 (term -> term DIVIDE factor .)
    $end            reduce using rule 46 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 46 (term -> term DIVIDE factor .)


state 71

    (47) term -> term MODULO factor .

    TIMES           reduce using rule 47 (term -> term MODULO factor .)
    DIVIDE          reduce using rule 47 (term -> term MODULO factor .)
    MODULO          reduce using rule 47 (term -> term MODULO factor .)
    SEMICOL         reduce using rule 47 (term -> term MODULO factor .)
    PLUS            reduce using rule 47 (term -> term MODULO factor .)
    MINUS           reduce using rule 47 (term -> term MODULO factor .)
    GTH             reduce using rule 47 (term -> term MODULO factor .)
    LTH             reduce using rule 47 (term -> term MODULO factor .)
    GTHOREQUAL      reduce using rule 47 (term -> term MODULO factor .)
    LTHOREQUAL      reduce using rule 47 (term -> term MODULO factor .)
    EQUALEQUAL      reduce using rule 47 (term -> term MODULO factor .)
    NOTEQUAL        reduce using rule 47 (term -> term MODULO factor .)
    RPAREN          reduce using rule 47 (term -> term MODULO factor .)
    ID              reduce using rule 47 (term -> term MODULO factor .)
    WHILE           reduce using rule 47 (term -> term MODULO factor .)
    FOR             reduce using rule 47 (term -> term MODULO factor .)
    IF              reduce using rule 47 (term -> term MODULO factor .)
    CHAR            reduce using rule 47 (term -> term MODULO factor .)
    FLOATTYPE       reduce using rule 47 (term -> term MODULO factor .)
    INT             reduce using rule 47 (term -> term MODULO factor .)
    BOOL            reduce using rule 47 (term -> term MODULO factor .)
    PRINT           reduce using rule 47 (term -> term MODULO factor .)
    NUMBER          reduce using rule 47 (term -> term MODULO factor .)
    LPAREN          reduce using rule 47 (term -> term MODULO factor .)
    $end            reduce using rule 47 (term -> term MODULO factor .)
    RBRACE          reduce using rule 47 (term -> term MODULO factor .)


state 72

    (38) while_statement -> WHILE LPAREN comparison . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 92


state 73

    (39) while_statement -> WHILE LPAREN TRUE . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 93


state 74

    (40) while_statement -> WHILE LPAREN FALSE . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 94


state 75

    (30) comparison -> expression . GTH expression
    (31) comparison -> expression . LTH expression
    (32) comparison -> expression . GTHOREQUAL expression
    (33) comparison -> expression . LTHOREQUAL expression
    (34) comparison -> expression . EQUALEQUAL expression
    (35) comparison -> expression . NOTEQUAL expression
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    GTH             shift and go to state 30
    LTH             shift and go to state 31
    GTHOREQUAL      shift and go to state 32
    LTHOREQUAL      shift and go to state 33
    EQUALEQUAL      shift and go to state 34
    NOTEQUAL        shift and go to state 35
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29


state 76

    (50) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    SEMICOL         reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    GTH             reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    LTH             reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    GTHOREQUAL      reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    LTHOREQUAL      reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    EQUALEQUAL      reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    FLOATTYPE       reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    INT             reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    BOOL            reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 50 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 50 (factor -> LPAREN expression RPAREN .)


state 77

    (41) for_statement -> FOR LPAREN var_statement . comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 44
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 95
    expression                     shift and go to state 75
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 78

    (36) if_statement -> IF LPAREN comparison . RPAREN LBRACE statements RBRACE
    (37) if_statement -> IF LPAREN comparison . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    RPAREN          shift and go to state 96


state 79

    (22) var_statement -> CHAR ID EQUALS . STRING SEMICOL

    STRING          shift and go to state 97


state 80

    (23) var_statement -> FLOATTYPE ID EQUALS . NUMBER SEMICOL

    NUMBER          shift and go to state 98


state 81

    (24) var_statement -> INT ID EQUALS . NUMBER SEMICOL

    NUMBER          shift and go to state 99


state 82

    (25) var_statement -> BOOL ID EQUALS . TRUE SEMICOL
    (26) var_statement -> BOOL ID EQUALS . FALSE SEMICOL

    TRUE            shift and go to state 100
    FALSE           shift and go to state 101


state 83

    (3) print_statement -> PRINT LPAREN expression . RPAREN SEMICOL
    (42) expression -> expression . PLUS term
    (43) expression -> expression . MINUS term

    RPAREN          shift and go to state 102
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29


state 84

    (4) print_statement -> PRINT LPAREN STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 103


state 85

    (15) var_assign -> ID EQUALS ID SEMICOL .

    ID              reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)
    WHILE           reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)
    FOR             reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)
    IF              reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)
    CHAR            reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)
    FLOATTYPE       reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)
    INT             reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)
    BOOL            reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)
    PRINT           reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)
    NUMBER          reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)
    LPAREN          reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)
    $end            reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)
    RBRACE          reduce using rule 15 (var_assign -> ID EQUALS ID SEMICOL .)


state 86

    (16) var_assign -> ID EQUALS STRING SEMICOL .

    ID              reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)
    WHILE           reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)
    FOR             reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)
    IF              reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)
    CHAR            reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)
    FLOATTYPE       reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)
    INT             reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)
    BOOL            reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)
    PRINT           reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)
    NUMBER          reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)
    LPAREN          reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)
    $end            reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)
    RBRACE          reduce using rule 16 (var_assign -> ID EQUALS STRING SEMICOL .)


state 87

    (17) var_assign -> ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    WHILE           reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    FOR             reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    BOOL            reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 17 (var_assign -> ID EQUALS NUMBER SEMICOL .)


state 88

    (18) var_assign -> ID EQUALS TRUE SEMICOL .

    ID              reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)
    WHILE           reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)
    FOR             reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)
    IF              reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)
    CHAR            reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)
    FLOATTYPE       reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)
    INT             reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)
    BOOL            reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)
    PRINT           reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)
    NUMBER          reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)
    LPAREN          reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)
    $end            reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)
    RBRACE          reduce using rule 18 (var_assign -> ID EQUALS TRUE SEMICOL .)


state 89

    (19) var_assign -> ID EQUALS FALSE SEMICOL .

    ID              reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)
    WHILE           reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)
    FOR             reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)
    IF              reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)
    CHAR            reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)
    FLOATTYPE       reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)
    INT             reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)
    BOOL            reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)
    PRINT           reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)
    NUMBER          reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)
    LPAREN          reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)
    $end            reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)
    RBRACE          reduce using rule 19 (var_assign -> ID EQUALS FALSE SEMICOL .)


state 90

    (20) var_inc -> ID PLUS PLUS SEMICOL .

    ID              reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    WHILE           reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    FOR             reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    IF              reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    CHAR            reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    FLOATTYPE       reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    INT             reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    BOOL            reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    PRINT           reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    NUMBER          reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    LPAREN          reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    $end            reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    RBRACE          reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)
    RPAREN          reduce using rule 20 (var_inc -> ID PLUS PLUS SEMICOL .)


state 91

    (21) var_dec -> ID MINUS MINUS SEMICOL .

    ID              reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)
    WHILE           reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)
    FOR             reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)
    IF              reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)
    CHAR            reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)
    FLOATTYPE       reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)
    INT             reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)
    BOOL            reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)
    PRINT           reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)
    NUMBER          reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)
    LPAREN          reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)
    $end            reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)
    RBRACE          reduce using rule 21 (var_dec -> ID MINUS MINUS SEMICOL .)


state 92

    (38) while_statement -> WHILE LPAREN comparison RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 104


state 93

    (39) while_statement -> WHILE LPAREN TRUE RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 105


state 94

    (40) while_statement -> WHILE LPAREN FALSE RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 106


state 95

    (41) for_statement -> FOR LPAREN var_statement comparison . SEMICOL var_inc RPAREN LBRACE statements RBRACE

    SEMICOL         shift and go to state 107


state 96

    (36) if_statement -> IF LPAREN comparison RPAREN . LBRACE statements RBRACE
    (37) if_statement -> IF LPAREN comparison RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 108


state 97

    (22) var_statement -> CHAR ID EQUALS STRING . SEMICOL

    SEMICOL         shift and go to state 109


state 98

    (23) var_statement -> FLOATTYPE ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 110


state 99

    (24) var_statement -> INT ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 111


state 100

    (25) var_statement -> BOOL ID EQUALS TRUE . SEMICOL

    SEMICOL         shift and go to state 112


state 101

    (26) var_statement -> BOOL ID EQUALS FALSE . SEMICOL

    SEMICOL         shift and go to state 113


state 102

    (3) print_statement -> PRINT LPAREN expression RPAREN . SEMICOL

    SEMICOL         shift and go to state 114


state 103

    (4) print_statement -> PRINT LPAREN STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 115


state 104

    (38) while_statement -> WHILE LPAREN comparison RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 7
    statements                     shift and go to state 116
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    var_statement                  shift and go to state 8
    var_assign                     shift and go to state 9
    var_inc                        shift and go to state 10
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 105

    (39) while_statement -> WHILE LPAREN TRUE RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    statements                     shift and go to state 117
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    var_statement                  shift and go to state 8
    var_assign                     shift and go to state 9
    var_inc                        shift and go to state 10
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 106

    (40) while_statement -> WHILE LPAREN FALSE RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    statements                     shift and go to state 118
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    var_statement                  shift and go to state 8
    var_assign                     shift and go to state 9
    var_inc                        shift and go to state 10
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 107

    (41) for_statement -> FOR LPAREN var_statement comparison SEMICOL . var_inc RPAREN LBRACE statements RBRACE
    (20) var_inc -> . ID PLUS PLUS SEMICOL

    ID              shift and go to state 120

    var_inc                        shift and go to state 119

state 108

    (36) if_statement -> IF LPAREN comparison RPAREN LBRACE . statements RBRACE
    (37) if_statement -> IF LPAREN comparison RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 7
    statements                     shift and go to state 121
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    var_statement                  shift and go to state 8
    var_assign                     shift and go to state 9
    var_inc                        shift and go to state 10
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 109

    (22) var_statement -> CHAR ID EQUALS STRING SEMICOL .

    ID              reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    WHILE           reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    FOR             reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    IF              reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    CHAR            reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    FLOATTYPE       reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    INT             reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    BOOL            reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    PRINT           reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    NUMBER          reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    LPAREN          reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    $end            reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    RBRACE          reduce using rule 22 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)


state 110

    (23) var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    WHILE           reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    FOR             reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    BOOL            reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 23 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)


state 111

    (24) var_statement -> INT ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    WHILE           reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    FOR             reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    BOOL            reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 24 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)


state 112

    (25) var_statement -> BOOL ID EQUALS TRUE SEMICOL .

    ID              reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    WHILE           reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    FOR             reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    IF              reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    CHAR            reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    FLOATTYPE       reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    INT             reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    BOOL            reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    PRINT           reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    NUMBER          reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    LPAREN          reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    $end            reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    RBRACE          reduce using rule 25 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)


state 113

    (26) var_statement -> BOOL ID EQUALS FALSE SEMICOL .

    ID              reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    WHILE           reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    FOR             reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    IF              reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    CHAR            reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    FLOATTYPE       reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    INT             reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    BOOL            reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    PRINT           reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    NUMBER          reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    LPAREN          reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    $end            reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    RBRACE          reduce using rule 26 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)


state 114

    (3) print_statement -> PRINT LPAREN expression RPAREN SEMICOL .

    ID              reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    WHILE           reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    FOR             reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    IF              reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    CHAR            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    INT             reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    BOOL            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    PRINT           reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    NUMBER          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    LPAREN          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    $end            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    RBRACE          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)


state 115

    (4) print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .

    ID              reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    WHILE           reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    FOR             reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    IF              reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    CHAR            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    INT             reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    BOOL            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    PRINT           reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    NUMBER          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    LPAREN          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    $end            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    RBRACE          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)


state 116

    (38) while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 122
    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 7
    statement                      shift and go to state 26
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    var_statement                  shift and go to state 8
    var_assign                     shift and go to state 9
    var_inc                        shift and go to state 10
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 117

    (39) while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 123
    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    statement                      shift and go to state 26
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    var_statement                  shift and go to state 8
    var_assign                     shift and go to state 9
    var_inc                        shift and go to state 10
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 118

    (40) while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 124
    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    statement                      shift and go to state 26
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    var_statement                  shift and go to state 8
    var_assign                     shift and go to state 9
    var_inc                        shift and go to state 10
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 119

    (41) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 125


state 120

    (20) var_inc -> ID . PLUS PLUS SEMICOL

    PLUS            shift and go to state 37


state 121

    (36) if_statement -> IF LPAREN comparison RPAREN LBRACE statements . RBRACE
    (37) if_statement -> IF LPAREN comparison RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 126
    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 7
    statement                      shift and go to state 26
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    var_statement                  shift and go to state 8
    var_assign                     shift and go to state 9
    var_inc                        shift and go to state 10
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 122

    (38) while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 38 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)


state 123

    (39) while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 39 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)


state 124

    (40) while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 40 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)


state 125

    (41) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 127


state 126

    (36) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .
    (37) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    ID              reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 36 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 128


state 127

    (41) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    var_statement                  shift and go to state 8
    comparison                     shift and go to state 7
    var_inc                        shift and go to state 10
    statements                     shift and go to state 129
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    var_assign                     shift and go to state 9
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 128

    (37) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 130


state 129

    (41) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 131
    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    var_statement                  shift and go to state 8
    comparison                     shift and go to state 7
    var_inc                        shift and go to state 10
    statement                      shift and go to state 26
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    var_assign                     shift and go to state 9
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 130

    (37) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 7
    statements                     shift and go to state 132
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    var_statement                  shift and go to state 8
    var_assign                     shift and go to state 9
    var_inc                        shift and go to state 10
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 131

    (41) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 41 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)


state 132

    (37) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . var_statement
    (11) statement -> . var_assign
    (12) statement -> . var_inc
    (13) statement -> . var_dec
    (14) statement -> . print_statement
    (27) expression -> . ID
    (42) expression -> . expression PLUS term
    (43) expression -> . expression MINUS term
    (44) expression -> . term
    (38) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (39) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (40) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (41) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (36) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (37) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (30) comparison -> . expression GTH expression
    (31) comparison -> . expression LTH expression
    (32) comparison -> . expression GTHOREQUAL expression
    (33) comparison -> . expression LTHOREQUAL expression
    (34) comparison -> . expression EQUALEQUAL expression
    (35) comparison -> . expression NOTEQUAL expression
    (22) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (23) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (24) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (25) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (26) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (15) var_assign -> . ID EQUALS ID SEMICOL
    (16) var_assign -> . ID EQUALS STRING SEMICOL
    (17) var_assign -> . ID EQUALS NUMBER SEMICOL
    (18) var_assign -> . ID EQUALS TRUE SEMICOL
    (19) var_assign -> . ID EQUALS FALSE SEMICOL
    (20) var_inc -> . ID PLUS PLUS SEMICOL
    (21) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (28) term -> . ID
    (45) term -> . term TIMES factor
    (46) term -> . term DIVIDE factor
    (47) term -> . term MODULO factor
    (48) term -> . factor
    (29) factor -> . ID
    (49) factor -> . NUMBER
    (50) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 133
    ID              shift and go to state 13
    WHILE           shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 18
    CHAR            shift and go to state 19
    FLOATTYPE       shift and go to state 20
    INT             shift and go to state 22
    BOOL            shift and go to state 23
    PRINT           shift and go to state 24
    NUMBER          shift and go to state 21
    LPAREN          shift and go to state 16

    comparison                     shift and go to state 7
    statement                      shift and go to state 26
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    var_statement                  shift and go to state 8
    var_assign                     shift and go to state 9
    var_inc                        shift and go to state 10
    var_dec                        shift and go to state 11
    print_statement                shift and go to state 12
    term                           shift and go to state 14
    factor                         shift and go to state 25

state 133

    (37) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    ID              reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    WHILE           reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    CHAR            reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    INT             reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BOOL            reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    PRINT           reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NUMBER          reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    LPAREN          reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 37 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 13 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 13 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 13 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 13 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 13 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 13 resolved as shift
WARNING: reduce/reduce conflict in state 13 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 13
WARNING: reduce/reduce conflict in state 13 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 13
WARNING: reduce/reduce conflict in state 13 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 13
WARNING: reduce/reduce conflict in state 44 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 44
WARNING: reduce/reduce conflict in state 44 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 44
WARNING: reduce/reduce conflict in state 44 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 44
WARNING: reduce/reduce conflict in state 53 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 53
