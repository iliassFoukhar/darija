Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CONSTANT
    CONTINUE
    FLOAT_CONST
    INT_CONST
    RETURN
    SIZEOF
    UNION
    VAR_TYPE
    VOID

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     print_statement -> PRINT LPAREN expression RPAREN SEMICOL
Rule 4     print_statement -> PRINT LPAREN STRING RPAREN SEMICOL
Rule 5     statement -> expression SEMICOL
Rule 6     statement -> while_statement
Rule 7     statement -> for_statement
Rule 8     statement -> if_statement
Rule 9     statement -> comparison
Rule 10    statement -> compare_id_value
Rule 11    statement -> bool_comparison
Rule 12    statement -> var_statement
Rule 13    statement -> var_assign
Rule 14    statement -> var_inc
Rule 15    statement -> var_dec
Rule 16    statement -> print_statement
Rule 17    statement -> break_statement
Rule 18    var_assign -> ID EQUALS ID SEMICOL
Rule 19    var_assign -> ID EQUALS STRING SEMICOL
Rule 20    var_assign -> ID EQUALS NUMBER SEMICOL
Rule 21    var_assign -> ID EQUALS TRUE SEMICOL
Rule 22    var_assign -> ID EQUALS FALSE SEMICOL
Rule 23    var_inc -> ID PLUS PLUS SEMICOL
Rule 24    var_dec -> ID MINUS MINUS SEMICOL
Rule 25    var_statement -> CHAR ID EQUALS STRING SEMICOL
Rule 26    var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL
Rule 27    var_statement -> INT ID EQUALS NUMBER SEMICOL
Rule 28    var_statement -> BOOL ID EQUALS TRUE SEMICOL
Rule 29    var_statement -> BOOL ID EQUALS FALSE SEMICOL
Rule 30    expression -> ID
Rule 31    term -> ID
Rule 32    factor -> ID
Rule 33    comparison -> expression GTH expression
Rule 34    comparison -> expression LTH expression
Rule 35    comparison -> expression GTHOREQUAL expression
Rule 36    comparison -> expression LTHOREQUAL expression
Rule 37    comparison -> expression EQUALEQUAL expression
Rule 38    comparison -> expression NOTEQUAL expression
Rule 39    compare_id_value -> ID GTH expression
Rule 40    compare_id_value -> ID LTH expression
Rule 41    compare_id_value -> ID GTHOREQUAL expression
Rule 42    compare_id_value -> ID LTHOREQUAL expression
Rule 43    compare_id_value -> ID EQUALEQUAL expression
Rule 44    compare_id_value -> ID NOTEQUAL expression
Rule 45    bool_comparison -> ID EQUALEQUAL ID
Rule 46    bool_comparison -> ID EQUALEQUAL TRUE
Rule 47    bool_comparison -> ID EQUALEQUAL FALSE
Rule 48    bool_comparison -> ID NOTEQUAL ID
Rule 49    bool_comparison -> ID NOTEQUAL TRUE
Rule 50    bool_comparison -> ID NOTEQUAL FALSE
Rule 51    if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE
Rule 52    if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
Rule 53    if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
Rule 54    if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 55    if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 56    while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
Rule 57    while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
Rule 58    while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
Rule 59    for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
Rule 60    break_statement -> BREAK SEMICOL
Rule 61    expression -> expression PLUS term
Rule 62    expression -> expression MINUS term
Rule 63    expression -> term
Rule 64    term -> term TIMES factor
Rule 65    term -> term DIVIDE factor
Rule 66    term -> term MODULO factor
Rule 67    term -> factor
Rule 68    factor -> NUMBER
Rule 69    factor -> LPAREN expression RPAREN
Rule 70    empty -> <empty>

Terminals, with rules where they appear

BOOL                 : 28 29
BREAK                : 60
CHAR                 : 25
CONSTANT             : 
CONTINUE             : 
DIVIDE               : 65
ELSE                 : 54 55
EQUALEQUAL           : 37 43 45 46 47
EQUALS               : 18 19 20 21 22 25 26 27 28 29
FALSE                : 22 29 47 50 58
FLOATTYPE            : 26
FLOAT_CONST          : 
FOR                  : 59
GTH                  : 33 39
GTHOREQUAL           : 35 41
ID                   : 18 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 39 40 41 42 43 44 45 45 46 47 48 48 49 50
IF                   : 51 52 53 54 55
INT                  : 27
INT_CONST            : 
LBRACE               : 51 52 53 54 54 55 55 56 57 58 59
LPAREN               : 3 4 51 52 53 54 55 56 57 58 59 69
LTH                  : 34 40
LTHOREQUAL           : 36 42
MINUS                : 24 24 62
MODULO               : 66
NOTEQUAL             : 38 44 48 49 50
NUMBER               : 20 26 27 68
PLUS                 : 23 23 61
PRINT                : 3 4
RBRACE               : 51 52 53 54 54 55 55 56 57 58 59
RETURN               : 
RPAREN               : 3 4 51 52 53 54 55 56 57 58 59 69
SEMICOL              : 3 4 5 18 19 20 21 22 23 24 25 26 27 28 29 59 60
SIZEOF               : 
STRING               : 4 19 25
TIMES                : 64
TRUE                 : 21 28 46 49 57
UNION                : 
VAR_TYPE             : 
VOID                 : 
WHILE                : 56 57 58
error                : 

Nonterminals, with rules where they appear

bool_comparison      : 11 53 55
break_statement      : 17
compare_id_value     : 10 52
comparison           : 9 51 54 56 59
empty                : 
expression           : 3 5 33 33 34 34 35 35 36 36 37 37 38 38 39 40 41 42 43 44 61 62 69
factor               : 64 65 66 67
for_statement        : 7
if_statement         : 8
print_statement      : 16
statement            : 1 2
statements           : 1 51 52 53 54 54 55 55 56 57 58 59 0
term                 : 61 62 63 64 65 66
var_assign           : 13
var_dec              : 15
var_inc              : 14 59
var_statement        : 12 59
while_statement      : 6

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    statement                      shift and go to state 30
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 2

    (2) statements -> statement .

    ID              reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    CHAR            reduce using rule 2 (statements -> statement .)
    FLOATTYPE       reduce using rule 2 (statements -> statement .)
    INT             reduce using rule 2 (statements -> statement .)
    BOOL            reduce using rule 2 (statements -> statement .)
    PRINT           reduce using rule 2 (statements -> statement .)
    BREAK           reduce using rule 2 (statements -> statement .)
    NUMBER          reduce using rule 2 (statements -> statement .)
    LPAREN          reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    RBRACE          reduce using rule 2 (statements -> statement .)


state 3

    (5) statement -> expression . SEMICOL
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term
    (33) comparison -> expression . GTH expression
    (34) comparison -> expression . LTH expression
    (35) comparison -> expression . GTHOREQUAL expression
    (36) comparison -> expression . LTHOREQUAL expression
    (37) comparison -> expression . EQUALEQUAL expression
    (38) comparison -> expression . NOTEQUAL expression

    SEMICOL         shift and go to state 31
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33
    GTH             shift and go to state 34
    LTH             shift and go to state 35
    GTHOREQUAL      shift and go to state 36
    LTHOREQUAL      shift and go to state 37
    EQUALEQUAL      shift and go to state 38
    NOTEQUAL        shift and go to state 39


state 4

    (6) statement -> while_statement .

    ID              reduce using rule 6 (statement -> while_statement .)
    WHILE           reduce using rule 6 (statement -> while_statement .)
    FOR             reduce using rule 6 (statement -> while_statement .)
    IF              reduce using rule 6 (statement -> while_statement .)
    CHAR            reduce using rule 6 (statement -> while_statement .)
    FLOATTYPE       reduce using rule 6 (statement -> while_statement .)
    INT             reduce using rule 6 (statement -> while_statement .)
    BOOL            reduce using rule 6 (statement -> while_statement .)
    PRINT           reduce using rule 6 (statement -> while_statement .)
    BREAK           reduce using rule 6 (statement -> while_statement .)
    NUMBER          reduce using rule 6 (statement -> while_statement .)
    LPAREN          reduce using rule 6 (statement -> while_statement .)
    $end            reduce using rule 6 (statement -> while_statement .)
    RBRACE          reduce using rule 6 (statement -> while_statement .)


state 5

    (7) statement -> for_statement .

    ID              reduce using rule 7 (statement -> for_statement .)
    WHILE           reduce using rule 7 (statement -> for_statement .)
    FOR             reduce using rule 7 (statement -> for_statement .)
    IF              reduce using rule 7 (statement -> for_statement .)
    CHAR            reduce using rule 7 (statement -> for_statement .)
    FLOATTYPE       reduce using rule 7 (statement -> for_statement .)
    INT             reduce using rule 7 (statement -> for_statement .)
    BOOL            reduce using rule 7 (statement -> for_statement .)
    PRINT           reduce using rule 7 (statement -> for_statement .)
    BREAK           reduce using rule 7 (statement -> for_statement .)
    NUMBER          reduce using rule 7 (statement -> for_statement .)
    LPAREN          reduce using rule 7 (statement -> for_statement .)
    $end            reduce using rule 7 (statement -> for_statement .)
    RBRACE          reduce using rule 7 (statement -> for_statement .)


state 6

    (8) statement -> if_statement .

    ID              reduce using rule 8 (statement -> if_statement .)
    WHILE           reduce using rule 8 (statement -> if_statement .)
    FOR             reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    CHAR            reduce using rule 8 (statement -> if_statement .)
    FLOATTYPE       reduce using rule 8 (statement -> if_statement .)
    INT             reduce using rule 8 (statement -> if_statement .)
    BOOL            reduce using rule 8 (statement -> if_statement .)
    PRINT           reduce using rule 8 (statement -> if_statement .)
    BREAK           reduce using rule 8 (statement -> if_statement .)
    NUMBER          reduce using rule 8 (statement -> if_statement .)
    LPAREN          reduce using rule 8 (statement -> if_statement .)
    $end            reduce using rule 8 (statement -> if_statement .)
    RBRACE          reduce using rule 8 (statement -> if_statement .)


state 7

    (9) statement -> comparison .

    ID              reduce using rule 9 (statement -> comparison .)
    WHILE           reduce using rule 9 (statement -> comparison .)
    FOR             reduce using rule 9 (statement -> comparison .)
    IF              reduce using rule 9 (statement -> comparison .)
    CHAR            reduce using rule 9 (statement -> comparison .)
    FLOATTYPE       reduce using rule 9 (statement -> comparison .)
    INT             reduce using rule 9 (statement -> comparison .)
    BOOL            reduce using rule 9 (statement -> comparison .)
    PRINT           reduce using rule 9 (statement -> comparison .)
    BREAK           reduce using rule 9 (statement -> comparison .)
    NUMBER          reduce using rule 9 (statement -> comparison .)
    LPAREN          reduce using rule 9 (statement -> comparison .)
    $end            reduce using rule 9 (statement -> comparison .)
    RBRACE          reduce using rule 9 (statement -> comparison .)


state 8

    (10) statement -> compare_id_value .

    ID              reduce using rule 10 (statement -> compare_id_value .)
    WHILE           reduce using rule 10 (statement -> compare_id_value .)
    FOR             reduce using rule 10 (statement -> compare_id_value .)
    IF              reduce using rule 10 (statement -> compare_id_value .)
    CHAR            reduce using rule 10 (statement -> compare_id_value .)
    FLOATTYPE       reduce using rule 10 (statement -> compare_id_value .)
    INT             reduce using rule 10 (statement -> compare_id_value .)
    BOOL            reduce using rule 10 (statement -> compare_id_value .)
    PRINT           reduce using rule 10 (statement -> compare_id_value .)
    BREAK           reduce using rule 10 (statement -> compare_id_value .)
    NUMBER          reduce using rule 10 (statement -> compare_id_value .)
    LPAREN          reduce using rule 10 (statement -> compare_id_value .)
    $end            reduce using rule 10 (statement -> compare_id_value .)
    RBRACE          reduce using rule 10 (statement -> compare_id_value .)


state 9

    (11) statement -> bool_comparison .

    ID              reduce using rule 11 (statement -> bool_comparison .)
    WHILE           reduce using rule 11 (statement -> bool_comparison .)
    FOR             reduce using rule 11 (statement -> bool_comparison .)
    IF              reduce using rule 11 (statement -> bool_comparison .)
    CHAR            reduce using rule 11 (statement -> bool_comparison .)
    FLOATTYPE       reduce using rule 11 (statement -> bool_comparison .)
    INT             reduce using rule 11 (statement -> bool_comparison .)
    BOOL            reduce using rule 11 (statement -> bool_comparison .)
    PRINT           reduce using rule 11 (statement -> bool_comparison .)
    BREAK           reduce using rule 11 (statement -> bool_comparison .)
    NUMBER          reduce using rule 11 (statement -> bool_comparison .)
    LPAREN          reduce using rule 11 (statement -> bool_comparison .)
    $end            reduce using rule 11 (statement -> bool_comparison .)
    RBRACE          reduce using rule 11 (statement -> bool_comparison .)


state 10

    (12) statement -> var_statement .

    ID              reduce using rule 12 (statement -> var_statement .)
    WHILE           reduce using rule 12 (statement -> var_statement .)
    FOR             reduce using rule 12 (statement -> var_statement .)
    IF              reduce using rule 12 (statement -> var_statement .)
    CHAR            reduce using rule 12 (statement -> var_statement .)
    FLOATTYPE       reduce using rule 12 (statement -> var_statement .)
    INT             reduce using rule 12 (statement -> var_statement .)
    BOOL            reduce using rule 12 (statement -> var_statement .)
    PRINT           reduce using rule 12 (statement -> var_statement .)
    BREAK           reduce using rule 12 (statement -> var_statement .)
    NUMBER          reduce using rule 12 (statement -> var_statement .)
    LPAREN          reduce using rule 12 (statement -> var_statement .)
    $end            reduce using rule 12 (statement -> var_statement .)
    RBRACE          reduce using rule 12 (statement -> var_statement .)


state 11

    (13) statement -> var_assign .

    ID              reduce using rule 13 (statement -> var_assign .)
    WHILE           reduce using rule 13 (statement -> var_assign .)
    FOR             reduce using rule 13 (statement -> var_assign .)
    IF              reduce using rule 13 (statement -> var_assign .)
    CHAR            reduce using rule 13 (statement -> var_assign .)
    FLOATTYPE       reduce using rule 13 (statement -> var_assign .)
    INT             reduce using rule 13 (statement -> var_assign .)
    BOOL            reduce using rule 13 (statement -> var_assign .)
    PRINT           reduce using rule 13 (statement -> var_assign .)
    BREAK           reduce using rule 13 (statement -> var_assign .)
    NUMBER          reduce using rule 13 (statement -> var_assign .)
    LPAREN          reduce using rule 13 (statement -> var_assign .)
    $end            reduce using rule 13 (statement -> var_assign .)
    RBRACE          reduce using rule 13 (statement -> var_assign .)


state 12

    (14) statement -> var_inc .

    ID              reduce using rule 14 (statement -> var_inc .)
    WHILE           reduce using rule 14 (statement -> var_inc .)
    FOR             reduce using rule 14 (statement -> var_inc .)
    IF              reduce using rule 14 (statement -> var_inc .)
    CHAR            reduce using rule 14 (statement -> var_inc .)
    FLOATTYPE       reduce using rule 14 (statement -> var_inc .)
    INT             reduce using rule 14 (statement -> var_inc .)
    BOOL            reduce using rule 14 (statement -> var_inc .)
    PRINT           reduce using rule 14 (statement -> var_inc .)
    BREAK           reduce using rule 14 (statement -> var_inc .)
    NUMBER          reduce using rule 14 (statement -> var_inc .)
    LPAREN          reduce using rule 14 (statement -> var_inc .)
    $end            reduce using rule 14 (statement -> var_inc .)
    RBRACE          reduce using rule 14 (statement -> var_inc .)


state 13

    (15) statement -> var_dec .

    ID              reduce using rule 15 (statement -> var_dec .)
    WHILE           reduce using rule 15 (statement -> var_dec .)
    FOR             reduce using rule 15 (statement -> var_dec .)
    IF              reduce using rule 15 (statement -> var_dec .)
    CHAR            reduce using rule 15 (statement -> var_dec .)
    FLOATTYPE       reduce using rule 15 (statement -> var_dec .)
    INT             reduce using rule 15 (statement -> var_dec .)
    BOOL            reduce using rule 15 (statement -> var_dec .)
    PRINT           reduce using rule 15 (statement -> var_dec .)
    BREAK           reduce using rule 15 (statement -> var_dec .)
    NUMBER          reduce using rule 15 (statement -> var_dec .)
    LPAREN          reduce using rule 15 (statement -> var_dec .)
    $end            reduce using rule 15 (statement -> var_dec .)
    RBRACE          reduce using rule 15 (statement -> var_dec .)


state 14

    (16) statement -> print_statement .

    ID              reduce using rule 16 (statement -> print_statement .)
    WHILE           reduce using rule 16 (statement -> print_statement .)
    FOR             reduce using rule 16 (statement -> print_statement .)
    IF              reduce using rule 16 (statement -> print_statement .)
    CHAR            reduce using rule 16 (statement -> print_statement .)
    FLOATTYPE       reduce using rule 16 (statement -> print_statement .)
    INT             reduce using rule 16 (statement -> print_statement .)
    BOOL            reduce using rule 16 (statement -> print_statement .)
    PRINT           reduce using rule 16 (statement -> print_statement .)
    BREAK           reduce using rule 16 (statement -> print_statement .)
    NUMBER          reduce using rule 16 (statement -> print_statement .)
    LPAREN          reduce using rule 16 (statement -> print_statement .)
    $end            reduce using rule 16 (statement -> print_statement .)
    RBRACE          reduce using rule 16 (statement -> print_statement .)


state 15

    (17) statement -> break_statement .

    ID              reduce using rule 17 (statement -> break_statement .)
    WHILE           reduce using rule 17 (statement -> break_statement .)
    FOR             reduce using rule 17 (statement -> break_statement .)
    IF              reduce using rule 17 (statement -> break_statement .)
    CHAR            reduce using rule 17 (statement -> break_statement .)
    FLOATTYPE       reduce using rule 17 (statement -> break_statement .)
    INT             reduce using rule 17 (statement -> break_statement .)
    BOOL            reduce using rule 17 (statement -> break_statement .)
    PRINT           reduce using rule 17 (statement -> break_statement .)
    BREAK           reduce using rule 17 (statement -> break_statement .)
    NUMBER          reduce using rule 17 (statement -> break_statement .)
    LPAREN          reduce using rule 17 (statement -> break_statement .)
    $end            reduce using rule 17 (statement -> break_statement .)
    RBRACE          reduce using rule 17 (statement -> break_statement .)


state 16

    (30) expression -> ID .
    (39) compare_id_value -> ID . GTH expression
    (40) compare_id_value -> ID . LTH expression
    (41) compare_id_value -> ID . GTHOREQUAL expression
    (42) compare_id_value -> ID . LTHOREQUAL expression
    (43) compare_id_value -> ID . EQUALEQUAL expression
    (44) compare_id_value -> ID . NOTEQUAL expression
    (45) bool_comparison -> ID . EQUALEQUAL ID
    (46) bool_comparison -> ID . EQUALEQUAL TRUE
    (47) bool_comparison -> ID . EQUALEQUAL FALSE
    (48) bool_comparison -> ID . NOTEQUAL ID
    (49) bool_comparison -> ID . NOTEQUAL TRUE
    (50) bool_comparison -> ID . NOTEQUAL FALSE
    (18) var_assign -> ID . EQUALS ID SEMICOL
    (19) var_assign -> ID . EQUALS STRING SEMICOL
    (20) var_assign -> ID . EQUALS NUMBER SEMICOL
    (21) var_assign -> ID . EQUALS TRUE SEMICOL
    (22) var_assign -> ID . EQUALS FALSE SEMICOL
    (23) var_inc -> ID . PLUS PLUS SEMICOL
    (24) var_dec -> ID . MINUS MINUS SEMICOL
    (31) term -> ID .
    (32) factor -> ID .

  ! shift/reduce conflict for GTH resolved as shift
  ! shift/reduce conflict for LTH resolved as shift
  ! shift/reduce conflict for GTHOREQUAL resolved as shift
  ! shift/reduce conflict for LTHOREQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for SEMICOL resolved using rule 30 (expression -> ID .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTH resolved as shift
  ! shift/reduce conflict for LTH resolved as shift
  ! shift/reduce conflict for GTHOREQUAL resolved as shift
  ! shift/reduce conflict for LTHOREQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 30 (expression -> ID .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTH resolved as shift
  ! shift/reduce conflict for LTH resolved as shift
  ! shift/reduce conflict for GTHOREQUAL resolved as shift
  ! shift/reduce conflict for LTHOREQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
    SEMICOL         reduce using rule 30 (expression -> ID .)
    GTH             shift and go to state 40
    LTH             shift and go to state 41
    GTHOREQUAL      shift and go to state 42
    LTHOREQUAL      shift and go to state 43
    EQUALEQUAL      shift and go to state 44
    NOTEQUAL        shift and go to state 45
    EQUALS          shift and go to state 46
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48
    TIMES           reduce using rule 31 (term -> ID .)
    DIVIDE          reduce using rule 31 (term -> ID .)
    MODULO          reduce using rule 31 (term -> ID .)

  ! PLUS            [ reduce using rule 30 (expression -> ID .) ]
  ! MINUS           [ reduce using rule 30 (expression -> ID .) ]
  ! GTH             [ reduce using rule 30 (expression -> ID .) ]
  ! LTH             [ reduce using rule 30 (expression -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 30 (expression -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 30 (expression -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 30 (expression -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 30 (expression -> ID .) ]
  ! SEMICOL         [ reduce using rule 31 (term -> ID .) ]
  ! PLUS            [ reduce using rule 31 (term -> ID .) ]
  ! MINUS           [ reduce using rule 31 (term -> ID .) ]
  ! GTH             [ reduce using rule 31 (term -> ID .) ]
  ! LTH             [ reduce using rule 31 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 31 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 31 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 31 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 31 (term -> ID .) ]
  ! TIMES           [ reduce using rule 32 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 32 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 32 (factor -> ID .) ]
  ! SEMICOL         [ reduce using rule 32 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 32 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 32 (factor -> ID .) ]
  ! GTH             [ reduce using rule 32 (factor -> ID .) ]
  ! LTH             [ reduce using rule 32 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 32 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 32 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 32 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 32 (factor -> ID .) ]


state 17

    (63) expression -> term .
    (64) term -> term . TIMES factor
    (65) term -> term . DIVIDE factor
    (66) term -> term . MODULO factor

    SEMICOL         reduce using rule 63 (expression -> term .)
    PLUS            reduce using rule 63 (expression -> term .)
    MINUS           reduce using rule 63 (expression -> term .)
    GTH             reduce using rule 63 (expression -> term .)
    LTH             reduce using rule 63 (expression -> term .)
    GTHOREQUAL      reduce using rule 63 (expression -> term .)
    LTHOREQUAL      reduce using rule 63 (expression -> term .)
    EQUALEQUAL      reduce using rule 63 (expression -> term .)
    NOTEQUAL        reduce using rule 63 (expression -> term .)
    RPAREN          reduce using rule 63 (expression -> term .)
    ID              reduce using rule 63 (expression -> term .)
    WHILE           reduce using rule 63 (expression -> term .)
    FOR             reduce using rule 63 (expression -> term .)
    IF              reduce using rule 63 (expression -> term .)
    CHAR            reduce using rule 63 (expression -> term .)
    FLOATTYPE       reduce using rule 63 (expression -> term .)
    INT             reduce using rule 63 (expression -> term .)
    BOOL            reduce using rule 63 (expression -> term .)
    PRINT           reduce using rule 63 (expression -> term .)
    BREAK           reduce using rule 63 (expression -> term .)
    NUMBER          reduce using rule 63 (expression -> term .)
    LPAREN          reduce using rule 63 (expression -> term .)
    $end            reduce using rule 63 (expression -> term .)
    RBRACE          reduce using rule 63 (expression -> term .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    MODULO          shift and go to state 51


state 18

    (56) while_statement -> WHILE . LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> WHILE . LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> WHILE . LPAREN FALSE RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 52


state 19

    (69) factor -> LPAREN . expression RPAREN
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 53
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 20

    (59) for_statement -> FOR . LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 55


state 21

    (51) if_statement -> IF . LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> IF . LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> IF . LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> IF . LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> IF . LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LPAREN          shift and go to state 56


state 22

    (25) var_statement -> CHAR . ID EQUALS STRING SEMICOL

    ID              shift and go to state 57


state 23

    (26) var_statement -> FLOATTYPE . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 58


state 24

    (68) factor -> NUMBER .

    TIMES           reduce using rule 68 (factor -> NUMBER .)
    DIVIDE          reduce using rule 68 (factor -> NUMBER .)
    MODULO          reduce using rule 68 (factor -> NUMBER .)
    SEMICOL         reduce using rule 68 (factor -> NUMBER .)
    PLUS            reduce using rule 68 (factor -> NUMBER .)
    MINUS           reduce using rule 68 (factor -> NUMBER .)
    GTH             reduce using rule 68 (factor -> NUMBER .)
    LTH             reduce using rule 68 (factor -> NUMBER .)
    GTHOREQUAL      reduce using rule 68 (factor -> NUMBER .)
    LTHOREQUAL      reduce using rule 68 (factor -> NUMBER .)
    EQUALEQUAL      reduce using rule 68 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 68 (factor -> NUMBER .)
    RPAREN          reduce using rule 68 (factor -> NUMBER .)
    ID              reduce using rule 68 (factor -> NUMBER .)
    WHILE           reduce using rule 68 (factor -> NUMBER .)
    FOR             reduce using rule 68 (factor -> NUMBER .)
    IF              reduce using rule 68 (factor -> NUMBER .)
    CHAR            reduce using rule 68 (factor -> NUMBER .)
    FLOATTYPE       reduce using rule 68 (factor -> NUMBER .)
    INT             reduce using rule 68 (factor -> NUMBER .)
    BOOL            reduce using rule 68 (factor -> NUMBER .)
    PRINT           reduce using rule 68 (factor -> NUMBER .)
    BREAK           reduce using rule 68 (factor -> NUMBER .)
    NUMBER          reduce using rule 68 (factor -> NUMBER .)
    LPAREN          reduce using rule 68 (factor -> NUMBER .)
    $end            reduce using rule 68 (factor -> NUMBER .)
    RBRACE          reduce using rule 68 (factor -> NUMBER .)


state 25

    (27) var_statement -> INT . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 59


state 26

    (28) var_statement -> BOOL . ID EQUALS TRUE SEMICOL
    (29) var_statement -> BOOL . ID EQUALS FALSE SEMICOL

    ID              shift and go to state 60


state 27

    (3) print_statement -> PRINT . LPAREN expression RPAREN SEMICOL
    (4) print_statement -> PRINT . LPAREN STRING RPAREN SEMICOL

    LPAREN          shift and go to state 61


state 28

    (60) break_statement -> BREAK . SEMICOL

    SEMICOL         shift and go to state 62


state 29

    (67) term -> factor .

    TIMES           reduce using rule 67 (term -> factor .)
    DIVIDE          reduce using rule 67 (term -> factor .)
    MODULO          reduce using rule 67 (term -> factor .)
    SEMICOL         reduce using rule 67 (term -> factor .)
    PLUS            reduce using rule 67 (term -> factor .)
    MINUS           reduce using rule 67 (term -> factor .)
    GTH             reduce using rule 67 (term -> factor .)
    LTH             reduce using rule 67 (term -> factor .)
    GTHOREQUAL      reduce using rule 67 (term -> factor .)
    LTHOREQUAL      reduce using rule 67 (term -> factor .)
    EQUALEQUAL      reduce using rule 67 (term -> factor .)
    NOTEQUAL        reduce using rule 67 (term -> factor .)
    RPAREN          reduce using rule 67 (term -> factor .)
    ID              reduce using rule 67 (term -> factor .)
    WHILE           reduce using rule 67 (term -> factor .)
    FOR             reduce using rule 67 (term -> factor .)
    IF              reduce using rule 67 (term -> factor .)
    CHAR            reduce using rule 67 (term -> factor .)
    FLOATTYPE       reduce using rule 67 (term -> factor .)
    INT             reduce using rule 67 (term -> factor .)
    BOOL            reduce using rule 67 (term -> factor .)
    PRINT           reduce using rule 67 (term -> factor .)
    BREAK           reduce using rule 67 (term -> factor .)
    NUMBER          reduce using rule 67 (term -> factor .)
    LPAREN          reduce using rule 67 (term -> factor .)
    $end            reduce using rule 67 (term -> factor .)
    RBRACE          reduce using rule 67 (term -> factor .)


state 30

    (1) statements -> statements statement .

    ID              reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    CHAR            reduce using rule 1 (statements -> statements statement .)
    FLOATTYPE       reduce using rule 1 (statements -> statements statement .)
    INT             reduce using rule 1 (statements -> statements statement .)
    BOOL            reduce using rule 1 (statements -> statements statement .)
    PRINT           reduce using rule 1 (statements -> statements statement .)
    BREAK           reduce using rule 1 (statements -> statements statement .)
    NUMBER          reduce using rule 1 (statements -> statements statement .)
    LPAREN          reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    RBRACE          reduce using rule 1 (statements -> statements statement .)


state 31

    (5) statement -> expression SEMICOL .

    ID              reduce using rule 5 (statement -> expression SEMICOL .)
    WHILE           reduce using rule 5 (statement -> expression SEMICOL .)
    FOR             reduce using rule 5 (statement -> expression SEMICOL .)
    IF              reduce using rule 5 (statement -> expression SEMICOL .)
    CHAR            reduce using rule 5 (statement -> expression SEMICOL .)
    FLOATTYPE       reduce using rule 5 (statement -> expression SEMICOL .)
    INT             reduce using rule 5 (statement -> expression SEMICOL .)
    BOOL            reduce using rule 5 (statement -> expression SEMICOL .)
    PRINT           reduce using rule 5 (statement -> expression SEMICOL .)
    BREAK           reduce using rule 5 (statement -> expression SEMICOL .)
    NUMBER          reduce using rule 5 (statement -> expression SEMICOL .)
    LPAREN          reduce using rule 5 (statement -> expression SEMICOL .)
    $end            reduce using rule 5 (statement -> expression SEMICOL .)
    RBRACE          reduce using rule 5 (statement -> expression SEMICOL .)


state 32

    (61) expression -> expression PLUS . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 64
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    term                           shift and go to state 63
    factor                         shift and go to state 29

state 33

    (62) expression -> expression MINUS . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 64
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    term                           shift and go to state 65
    factor                         shift and go to state 29

state 34

    (33) comparison -> expression GTH . expression
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 66
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 35

    (34) comparison -> expression LTH . expression
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 67
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 36

    (35) comparison -> expression GTHOREQUAL . expression
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 68
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 37

    (36) comparison -> expression LTHOREQUAL . expression
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 69
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 38

    (37) comparison -> expression EQUALEQUAL . expression
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 70
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 39

    (38) comparison -> expression NOTEQUAL . expression
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 71
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 40

    (39) compare_id_value -> ID GTH . expression
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 72
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 41

    (40) compare_id_value -> ID LTH . expression
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 73
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 42

    (41) compare_id_value -> ID GTHOREQUAL . expression
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 74
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 43

    (42) compare_id_value -> ID LTHOREQUAL . expression
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 75
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 44

    (43) compare_id_value -> ID EQUALEQUAL . expression
    (45) bool_comparison -> ID EQUALEQUAL . ID
    (46) bool_comparison -> ID EQUALEQUAL . TRUE
    (47) bool_comparison -> ID EQUALEQUAL . FALSE
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 76
    TRUE            shift and go to state 78
    FALSE           shift and go to state 79
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 77
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 45

    (44) compare_id_value -> ID NOTEQUAL . expression
    (48) bool_comparison -> ID NOTEQUAL . ID
    (49) bool_comparison -> ID NOTEQUAL . TRUE
    (50) bool_comparison -> ID NOTEQUAL . FALSE
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 80
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 81
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 46

    (18) var_assign -> ID EQUALS . ID SEMICOL
    (19) var_assign -> ID EQUALS . STRING SEMICOL
    (20) var_assign -> ID EQUALS . NUMBER SEMICOL
    (21) var_assign -> ID EQUALS . TRUE SEMICOL
    (22) var_assign -> ID EQUALS . FALSE SEMICOL

    ID              shift and go to state 84
    STRING          shift and go to state 85
    NUMBER          shift and go to state 86
    TRUE            shift and go to state 87
    FALSE           shift and go to state 88


state 47

    (23) var_inc -> ID PLUS . PLUS SEMICOL

    PLUS            shift and go to state 89


state 48

    (24) var_dec -> ID MINUS . MINUS SEMICOL

    MINUS           shift and go to state 90


state 49

    (64) term -> term TIMES . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 92
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    factor                         shift and go to state 91

state 50

    (65) term -> term DIVIDE . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 92
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    factor                         shift and go to state 93

state 51

    (66) term -> term MODULO . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 92
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    factor                         shift and go to state 94

state 52

    (56) while_statement -> WHILE LPAREN . comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> WHILE LPAREN . TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> WHILE LPAREN . FALSE RPAREN LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    TRUE            shift and go to state 96
    FALSE           shift and go to state 97
    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    comparison                     shift and go to state 95
    expression                     shift and go to state 98
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 53

    (69) factor -> LPAREN expression . RPAREN
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    RPAREN          shift and go to state 99
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 54

    (30) expression -> ID .
    (31) term -> ID .
    (32) factor -> ID .

  ! reduce/reduce conflict for RPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 30 (expression -> ID .)
    RPAREN          reduce using rule 30 (expression -> ID .)
    PLUS            reduce using rule 30 (expression -> ID .)
    MINUS           reduce using rule 30 (expression -> ID .)
    ID              reduce using rule 30 (expression -> ID .)
    WHILE           reduce using rule 30 (expression -> ID .)
    FOR             reduce using rule 30 (expression -> ID .)
    IF              reduce using rule 30 (expression -> ID .)
    CHAR            reduce using rule 30 (expression -> ID .)
    FLOATTYPE       reduce using rule 30 (expression -> ID .)
    INT             reduce using rule 30 (expression -> ID .)
    BOOL            reduce using rule 30 (expression -> ID .)
    PRINT           reduce using rule 30 (expression -> ID .)
    BREAK           reduce using rule 30 (expression -> ID .)
    NUMBER          reduce using rule 30 (expression -> ID .)
    LPAREN          reduce using rule 30 (expression -> ID .)
    $end            reduce using rule 30 (expression -> ID .)
    SEMICOL         reduce using rule 30 (expression -> ID .)
    RBRACE          reduce using rule 30 (expression -> ID .)
    GTH             reduce using rule 30 (expression -> ID .)
    LTH             reduce using rule 30 (expression -> ID .)
    GTHOREQUAL      reduce using rule 30 (expression -> ID .)
    LTHOREQUAL      reduce using rule 30 (expression -> ID .)
    EQUALEQUAL      reduce using rule 30 (expression -> ID .)
    NOTEQUAL        reduce using rule 30 (expression -> ID .)
    TIMES           reduce using rule 31 (term -> ID .)
    DIVIDE          reduce using rule 31 (term -> ID .)
    MODULO          reduce using rule 31 (term -> ID .)

  ! RPAREN          [ reduce using rule 31 (term -> ID .) ]
  ! PLUS            [ reduce using rule 31 (term -> ID .) ]
  ! MINUS           [ reduce using rule 31 (term -> ID .) ]
  ! ID              [ reduce using rule 31 (term -> ID .) ]
  ! WHILE           [ reduce using rule 31 (term -> ID .) ]
  ! FOR             [ reduce using rule 31 (term -> ID .) ]
  ! IF              [ reduce using rule 31 (term -> ID .) ]
  ! CHAR            [ reduce using rule 31 (term -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 31 (term -> ID .) ]
  ! INT             [ reduce using rule 31 (term -> ID .) ]
  ! BOOL            [ reduce using rule 31 (term -> ID .) ]
  ! PRINT           [ reduce using rule 31 (term -> ID .) ]
  ! BREAK           [ reduce using rule 31 (term -> ID .) ]
  ! NUMBER          [ reduce using rule 31 (term -> ID .) ]
  ! LPAREN          [ reduce using rule 31 (term -> ID .) ]
  ! $end            [ reduce using rule 31 (term -> ID .) ]
  ! SEMICOL         [ reduce using rule 31 (term -> ID .) ]
  ! RBRACE          [ reduce using rule 31 (term -> ID .) ]
  ! GTH             [ reduce using rule 31 (term -> ID .) ]
  ! LTH             [ reduce using rule 31 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 31 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 31 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 31 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 31 (term -> ID .) ]
  ! TIMES           [ reduce using rule 32 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 32 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 32 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 32 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 32 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 32 (factor -> ID .) ]
  ! ID              [ reduce using rule 32 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 32 (factor -> ID .) ]
  ! FOR             [ reduce using rule 32 (factor -> ID .) ]
  ! IF              [ reduce using rule 32 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 32 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 32 (factor -> ID .) ]
  ! INT             [ reduce using rule 32 (factor -> ID .) ]
  ! BOOL            [ reduce using rule 32 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 32 (factor -> ID .) ]
  ! BREAK           [ reduce using rule 32 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 32 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 32 (factor -> ID .) ]
  ! $end            [ reduce using rule 32 (factor -> ID .) ]
  ! SEMICOL         [ reduce using rule 32 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 32 (factor -> ID .) ]
  ! GTH             [ reduce using rule 32 (factor -> ID .) ]
  ! LTH             [ reduce using rule 32 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 32 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 32 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 32 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 32 (factor -> ID .) ]


state 55

    (59) for_statement -> FOR LPAREN . var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL

    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26

    var_statement                  shift and go to state 100

state 56

    (51) if_statement -> IF LPAREN . comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> IF LPAREN . compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> IF LPAREN . bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> IF LPAREN . comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> IF LPAREN . bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 104
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    comparison                     shift and go to state 101
    compare_id_value               shift and go to state 102
    bool_comparison                shift and go to state 103
    expression                     shift and go to state 98
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 57

    (25) var_statement -> CHAR ID . EQUALS STRING SEMICOL

    EQUALS          shift and go to state 105


state 58

    (26) var_statement -> FLOATTYPE ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 106


state 59

    (27) var_statement -> INT ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 107


state 60

    (28) var_statement -> BOOL ID . EQUALS TRUE SEMICOL
    (29) var_statement -> BOOL ID . EQUALS FALSE SEMICOL

    EQUALS          shift and go to state 108


state 61

    (3) print_statement -> PRINT LPAREN . expression RPAREN SEMICOL
    (4) print_statement -> PRINT LPAREN . STRING RPAREN SEMICOL
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    STRING          shift and go to state 110
    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    expression                     shift and go to state 109
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 62

    (60) break_statement -> BREAK SEMICOL .

    ID              reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    WHILE           reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    FOR             reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    IF              reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    CHAR            reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    FLOATTYPE       reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    INT             reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    BOOL            reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    PRINT           reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    BREAK           reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    NUMBER          reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    LPAREN          reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    $end            reduce using rule 60 (break_statement -> BREAK SEMICOL .)
    RBRACE          reduce using rule 60 (break_statement -> BREAK SEMICOL .)


state 63

    (61) expression -> expression PLUS term .
    (64) term -> term . TIMES factor
    (65) term -> term . DIVIDE factor
    (66) term -> term . MODULO factor

    SEMICOL         reduce using rule 61 (expression -> expression PLUS term .)
    PLUS            reduce using rule 61 (expression -> expression PLUS term .)
    MINUS           reduce using rule 61 (expression -> expression PLUS term .)
    GTH             reduce using rule 61 (expression -> expression PLUS term .)
    LTH             reduce using rule 61 (expression -> expression PLUS term .)
    GTHOREQUAL      reduce using rule 61 (expression -> expression PLUS term .)
    LTHOREQUAL      reduce using rule 61 (expression -> expression PLUS term .)
    EQUALEQUAL      reduce using rule 61 (expression -> expression PLUS term .)
    NOTEQUAL        reduce using rule 61 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 61 (expression -> expression PLUS term .)
    ID              reduce using rule 61 (expression -> expression PLUS term .)
    WHILE           reduce using rule 61 (expression -> expression PLUS term .)
    FOR             reduce using rule 61 (expression -> expression PLUS term .)
    IF              reduce using rule 61 (expression -> expression PLUS term .)
    CHAR            reduce using rule 61 (expression -> expression PLUS term .)
    FLOATTYPE       reduce using rule 61 (expression -> expression PLUS term .)
    INT             reduce using rule 61 (expression -> expression PLUS term .)
    BOOL            reduce using rule 61 (expression -> expression PLUS term .)
    PRINT           reduce using rule 61 (expression -> expression PLUS term .)
    BREAK           reduce using rule 61 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 61 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 61 (expression -> expression PLUS term .)
    $end            reduce using rule 61 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 61 (expression -> expression PLUS term .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    MODULO          shift and go to state 51


state 64

    (31) term -> ID .
    (32) factor -> ID .

  ! reduce/reduce conflict for TIMES resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 31 (term -> ID .)
    TIMES           reduce using rule 31 (term -> ID .)
    DIVIDE          reduce using rule 31 (term -> ID .)
    MODULO          reduce using rule 31 (term -> ID .)
    SEMICOL         reduce using rule 31 (term -> ID .)
    PLUS            reduce using rule 31 (term -> ID .)
    MINUS           reduce using rule 31 (term -> ID .)
    GTH             reduce using rule 31 (term -> ID .)
    LTH             reduce using rule 31 (term -> ID .)
    GTHOREQUAL      reduce using rule 31 (term -> ID .)
    LTHOREQUAL      reduce using rule 31 (term -> ID .)
    EQUALEQUAL      reduce using rule 31 (term -> ID .)
    NOTEQUAL        reduce using rule 31 (term -> ID .)
    RPAREN          reduce using rule 31 (term -> ID .)
    ID              reduce using rule 31 (term -> ID .)
    WHILE           reduce using rule 31 (term -> ID .)
    FOR             reduce using rule 31 (term -> ID .)
    IF              reduce using rule 31 (term -> ID .)
    CHAR            reduce using rule 31 (term -> ID .)
    FLOATTYPE       reduce using rule 31 (term -> ID .)
    INT             reduce using rule 31 (term -> ID .)
    BOOL            reduce using rule 31 (term -> ID .)
    PRINT           reduce using rule 31 (term -> ID .)
    BREAK           reduce using rule 31 (term -> ID .)
    NUMBER          reduce using rule 31 (term -> ID .)
    LPAREN          reduce using rule 31 (term -> ID .)
    $end            reduce using rule 31 (term -> ID .)
    RBRACE          reduce using rule 31 (term -> ID .)

  ! TIMES           [ reduce using rule 32 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 32 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 32 (factor -> ID .) ]
  ! SEMICOL         [ reduce using rule 32 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 32 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 32 (factor -> ID .) ]
  ! GTH             [ reduce using rule 32 (factor -> ID .) ]
  ! LTH             [ reduce using rule 32 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 32 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 32 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 32 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 32 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 32 (factor -> ID .) ]
  ! ID              [ reduce using rule 32 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 32 (factor -> ID .) ]
  ! FOR             [ reduce using rule 32 (factor -> ID .) ]
  ! IF              [ reduce using rule 32 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 32 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 32 (factor -> ID .) ]
  ! INT             [ reduce using rule 32 (factor -> ID .) ]
  ! BOOL            [ reduce using rule 32 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 32 (factor -> ID .) ]
  ! BREAK           [ reduce using rule 32 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 32 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 32 (factor -> ID .) ]
  ! $end            [ reduce using rule 32 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 32 (factor -> ID .) ]


state 65

    (62) expression -> expression MINUS term .
    (64) term -> term . TIMES factor
    (65) term -> term . DIVIDE factor
    (66) term -> term . MODULO factor

    SEMICOL         reduce using rule 62 (expression -> expression MINUS term .)
    PLUS            reduce using rule 62 (expression -> expression MINUS term .)
    MINUS           reduce using rule 62 (expression -> expression MINUS term .)
    GTH             reduce using rule 62 (expression -> expression MINUS term .)
    LTH             reduce using rule 62 (expression -> expression MINUS term .)
    GTHOREQUAL      reduce using rule 62 (expression -> expression MINUS term .)
    LTHOREQUAL      reduce using rule 62 (expression -> expression MINUS term .)
    EQUALEQUAL      reduce using rule 62 (expression -> expression MINUS term .)
    NOTEQUAL        reduce using rule 62 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 62 (expression -> expression MINUS term .)
    ID              reduce using rule 62 (expression -> expression MINUS term .)
    WHILE           reduce using rule 62 (expression -> expression MINUS term .)
    FOR             reduce using rule 62 (expression -> expression MINUS term .)
    IF              reduce using rule 62 (expression -> expression MINUS term .)
    CHAR            reduce using rule 62 (expression -> expression MINUS term .)
    FLOATTYPE       reduce using rule 62 (expression -> expression MINUS term .)
    INT             reduce using rule 62 (expression -> expression MINUS term .)
    BOOL            reduce using rule 62 (expression -> expression MINUS term .)
    PRINT           reduce using rule 62 (expression -> expression MINUS term .)
    BREAK           reduce using rule 62 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 62 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 62 (expression -> expression MINUS term .)
    $end            reduce using rule 62 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 62 (expression -> expression MINUS term .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50
    MODULO          shift and go to state 51


state 66

    (33) comparison -> expression GTH expression .
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    ID              reduce using rule 33 (comparison -> expression GTH expression .)
    WHILE           reduce using rule 33 (comparison -> expression GTH expression .)
    FOR             reduce using rule 33 (comparison -> expression GTH expression .)
    IF              reduce using rule 33 (comparison -> expression GTH expression .)
    CHAR            reduce using rule 33 (comparison -> expression GTH expression .)
    FLOATTYPE       reduce using rule 33 (comparison -> expression GTH expression .)
    INT             reduce using rule 33 (comparison -> expression GTH expression .)
    BOOL            reduce using rule 33 (comparison -> expression GTH expression .)
    PRINT           reduce using rule 33 (comparison -> expression GTH expression .)
    BREAK           reduce using rule 33 (comparison -> expression GTH expression .)
    NUMBER          reduce using rule 33 (comparison -> expression GTH expression .)
    LPAREN          reduce using rule 33 (comparison -> expression GTH expression .)
    $end            reduce using rule 33 (comparison -> expression GTH expression .)
    RPAREN          reduce using rule 33 (comparison -> expression GTH expression .)
    SEMICOL         reduce using rule 33 (comparison -> expression GTH expression .)
    RBRACE          reduce using rule 33 (comparison -> expression GTH expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 67

    (34) comparison -> expression LTH expression .
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    ID              reduce using rule 34 (comparison -> expression LTH expression .)
    WHILE           reduce using rule 34 (comparison -> expression LTH expression .)
    FOR             reduce using rule 34 (comparison -> expression LTH expression .)
    IF              reduce using rule 34 (comparison -> expression LTH expression .)
    CHAR            reduce using rule 34 (comparison -> expression LTH expression .)
    FLOATTYPE       reduce using rule 34 (comparison -> expression LTH expression .)
    INT             reduce using rule 34 (comparison -> expression LTH expression .)
    BOOL            reduce using rule 34 (comparison -> expression LTH expression .)
    PRINT           reduce using rule 34 (comparison -> expression LTH expression .)
    BREAK           reduce using rule 34 (comparison -> expression LTH expression .)
    NUMBER          reduce using rule 34 (comparison -> expression LTH expression .)
    LPAREN          reduce using rule 34 (comparison -> expression LTH expression .)
    $end            reduce using rule 34 (comparison -> expression LTH expression .)
    RPAREN          reduce using rule 34 (comparison -> expression LTH expression .)
    SEMICOL         reduce using rule 34 (comparison -> expression LTH expression .)
    RBRACE          reduce using rule 34 (comparison -> expression LTH expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 68

    (35) comparison -> expression GTHOREQUAL expression .
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    ID              reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    WHILE           reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    FOR             reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    IF              reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    CHAR            reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    INT             reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    BOOL            reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    PRINT           reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    BREAK           reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    NUMBER          reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    LPAREN          reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    $end            reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    RPAREN          reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    SEMICOL         reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    RBRACE          reduce using rule 35 (comparison -> expression GTHOREQUAL expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 69

    (36) comparison -> expression LTHOREQUAL expression .
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    ID              reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    WHILE           reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    FOR             reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    IF              reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    CHAR            reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    INT             reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    BOOL            reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    PRINT           reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    BREAK           reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    NUMBER          reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    LPAREN          reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    $end            reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    RPAREN          reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    SEMICOL         reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    RBRACE          reduce using rule 36 (comparison -> expression LTHOREQUAL expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 70

    (37) comparison -> expression EQUALEQUAL expression .
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    ID              reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    WHILE           reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    FOR             reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    IF              reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    CHAR            reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    FLOATTYPE       reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    INT             reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    BOOL            reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    PRINT           reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    BREAK           reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    NUMBER          reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    LPAREN          reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    $end            reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    RPAREN          reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    SEMICOL         reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    RBRACE          reduce using rule 37 (comparison -> expression EQUALEQUAL expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 71

    (38) comparison -> expression NOTEQUAL expression .
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    ID              reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    FOR             reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    IF              reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    CHAR            reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    FLOATTYPE       reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    INT             reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    BOOL            reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    BREAK           reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    NUMBER          reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    LPAREN          reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    $end            reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    SEMICOL         reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    RBRACE          reduce using rule 38 (comparison -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 72

    (39) compare_id_value -> ID GTH expression .
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    ID              reduce using rule 39 (compare_id_value -> ID GTH expression .)
    WHILE           reduce using rule 39 (compare_id_value -> ID GTH expression .)
    FOR             reduce using rule 39 (compare_id_value -> ID GTH expression .)
    IF              reduce using rule 39 (compare_id_value -> ID GTH expression .)
    CHAR            reduce using rule 39 (compare_id_value -> ID GTH expression .)
    FLOATTYPE       reduce using rule 39 (compare_id_value -> ID GTH expression .)
    INT             reduce using rule 39 (compare_id_value -> ID GTH expression .)
    BOOL            reduce using rule 39 (compare_id_value -> ID GTH expression .)
    PRINT           reduce using rule 39 (compare_id_value -> ID GTH expression .)
    BREAK           reduce using rule 39 (compare_id_value -> ID GTH expression .)
    NUMBER          reduce using rule 39 (compare_id_value -> ID GTH expression .)
    LPAREN          reduce using rule 39 (compare_id_value -> ID GTH expression .)
    $end            reduce using rule 39 (compare_id_value -> ID GTH expression .)
    RPAREN          reduce using rule 39 (compare_id_value -> ID GTH expression .)
    RBRACE          reduce using rule 39 (compare_id_value -> ID GTH expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 73

    (40) compare_id_value -> ID LTH expression .
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    ID              reduce using rule 40 (compare_id_value -> ID LTH expression .)
    WHILE           reduce using rule 40 (compare_id_value -> ID LTH expression .)
    FOR             reduce using rule 40 (compare_id_value -> ID LTH expression .)
    IF              reduce using rule 40 (compare_id_value -> ID LTH expression .)
    CHAR            reduce using rule 40 (compare_id_value -> ID LTH expression .)
    FLOATTYPE       reduce using rule 40 (compare_id_value -> ID LTH expression .)
    INT             reduce using rule 40 (compare_id_value -> ID LTH expression .)
    BOOL            reduce using rule 40 (compare_id_value -> ID LTH expression .)
    PRINT           reduce using rule 40 (compare_id_value -> ID LTH expression .)
    BREAK           reduce using rule 40 (compare_id_value -> ID LTH expression .)
    NUMBER          reduce using rule 40 (compare_id_value -> ID LTH expression .)
    LPAREN          reduce using rule 40 (compare_id_value -> ID LTH expression .)
    $end            reduce using rule 40 (compare_id_value -> ID LTH expression .)
    RPAREN          reduce using rule 40 (compare_id_value -> ID LTH expression .)
    RBRACE          reduce using rule 40 (compare_id_value -> ID LTH expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 74

    (41) compare_id_value -> ID GTHOREQUAL expression .
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    ID              reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    WHILE           reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    FOR             reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    IF              reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    CHAR            reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    INT             reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    BOOL            reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    PRINT           reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    BREAK           reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    NUMBER          reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    LPAREN          reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    $end            reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    RPAREN          reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    RBRACE          reduce using rule 41 (compare_id_value -> ID GTHOREQUAL expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 75

    (42) compare_id_value -> ID LTHOREQUAL expression .
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    ID              reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    WHILE           reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    FOR             reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    IF              reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    CHAR            reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    INT             reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    BOOL            reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    PRINT           reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    BREAK           reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    NUMBER          reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    LPAREN          reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    $end            reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    RPAREN          reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    RBRACE          reduce using rule 42 (compare_id_value -> ID LTHOREQUAL expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 76

    (45) bool_comparison -> ID EQUALEQUAL ID .
    (30) expression -> ID .
    (31) term -> ID .
    (32) factor -> ID .

  ! reduce/reduce conflict for ID resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 30 (expression -> ID .)
    PLUS            reduce using rule 30 (expression -> ID .)
    MINUS           reduce using rule 30 (expression -> ID .)
    ID              reduce using rule 30 (expression -> ID .)
    WHILE           reduce using rule 30 (expression -> ID .)
    FOR             reduce using rule 30 (expression -> ID .)
    IF              reduce using rule 30 (expression -> ID .)
    CHAR            reduce using rule 30 (expression -> ID .)
    FLOATTYPE       reduce using rule 30 (expression -> ID .)
    INT             reduce using rule 30 (expression -> ID .)
    BOOL            reduce using rule 30 (expression -> ID .)
    PRINT           reduce using rule 30 (expression -> ID .)
    BREAK           reduce using rule 30 (expression -> ID .)
    NUMBER          reduce using rule 30 (expression -> ID .)
    LPAREN          reduce using rule 30 (expression -> ID .)
    $end            reduce using rule 30 (expression -> ID .)
    RPAREN          reduce using rule 30 (expression -> ID .)
    RBRACE          reduce using rule 30 (expression -> ID .)
    TIMES           reduce using rule 31 (term -> ID .)
    DIVIDE          reduce using rule 31 (term -> ID .)
    MODULO          reduce using rule 31 (term -> ID .)

  ! ID              [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! WHILE           [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! FOR             [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! IF              [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! CHAR            [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! FLOATTYPE       [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! INT             [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! BOOL            [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! PRINT           [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! BREAK           [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! NUMBER          [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! LPAREN          [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! $end            [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! RPAREN          [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! RBRACE          [ reduce using rule 45 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! PLUS            [ reduce using rule 31 (term -> ID .) ]
  ! MINUS           [ reduce using rule 31 (term -> ID .) ]
  ! ID              [ reduce using rule 31 (term -> ID .) ]
  ! WHILE           [ reduce using rule 31 (term -> ID .) ]
  ! FOR             [ reduce using rule 31 (term -> ID .) ]
  ! IF              [ reduce using rule 31 (term -> ID .) ]
  ! CHAR            [ reduce using rule 31 (term -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 31 (term -> ID .) ]
  ! INT             [ reduce using rule 31 (term -> ID .) ]
  ! BOOL            [ reduce using rule 31 (term -> ID .) ]
  ! PRINT           [ reduce using rule 31 (term -> ID .) ]
  ! BREAK           [ reduce using rule 31 (term -> ID .) ]
  ! NUMBER          [ reduce using rule 31 (term -> ID .) ]
  ! LPAREN          [ reduce using rule 31 (term -> ID .) ]
  ! $end            [ reduce using rule 31 (term -> ID .) ]
  ! RPAREN          [ reduce using rule 31 (term -> ID .) ]
  ! RBRACE          [ reduce using rule 31 (term -> ID .) ]
  ! TIMES           [ reduce using rule 32 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 32 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 32 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 32 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 32 (factor -> ID .) ]
  ! ID              [ reduce using rule 32 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 32 (factor -> ID .) ]
  ! FOR             [ reduce using rule 32 (factor -> ID .) ]
  ! IF              [ reduce using rule 32 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 32 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 32 (factor -> ID .) ]
  ! INT             [ reduce using rule 32 (factor -> ID .) ]
  ! BOOL            [ reduce using rule 32 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 32 (factor -> ID .) ]
  ! BREAK           [ reduce using rule 32 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 32 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 32 (factor -> ID .) ]
  ! $end            [ reduce using rule 32 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 32 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 32 (factor -> ID .) ]


state 77

    (43) compare_id_value -> ID EQUALEQUAL expression .
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    ID              reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    WHILE           reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    FOR             reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    IF              reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    CHAR            reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    FLOATTYPE       reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    INT             reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    BOOL            reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    PRINT           reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    BREAK           reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    NUMBER          reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    LPAREN          reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    $end            reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    RPAREN          reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    RBRACE          reduce using rule 43 (compare_id_value -> ID EQUALEQUAL expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 78

    (46) bool_comparison -> ID EQUALEQUAL TRUE .

    ID              reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    WHILE           reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    FOR             reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    IF              reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    CHAR            reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    FLOATTYPE       reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    INT             reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    BOOL            reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    PRINT           reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    BREAK           reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    NUMBER          reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    LPAREN          reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    $end            reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    RPAREN          reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)
    RBRACE          reduce using rule 46 (bool_comparison -> ID EQUALEQUAL TRUE .)


state 79

    (47) bool_comparison -> ID EQUALEQUAL FALSE .

    ID              reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    WHILE           reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    FOR             reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    IF              reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    CHAR            reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    FLOATTYPE       reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    INT             reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    BOOL            reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    PRINT           reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    BREAK           reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    NUMBER          reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    LPAREN          reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    $end            reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    RPAREN          reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)
    RBRACE          reduce using rule 47 (bool_comparison -> ID EQUALEQUAL FALSE .)


state 80

    (48) bool_comparison -> ID NOTEQUAL ID .
    (30) expression -> ID .
    (31) term -> ID .
    (32) factor -> ID .

  ! reduce/reduce conflict for ID resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 30 (expression -> ID .)
    PLUS            reduce using rule 30 (expression -> ID .)
    MINUS           reduce using rule 30 (expression -> ID .)
    ID              reduce using rule 30 (expression -> ID .)
    WHILE           reduce using rule 30 (expression -> ID .)
    FOR             reduce using rule 30 (expression -> ID .)
    IF              reduce using rule 30 (expression -> ID .)
    CHAR            reduce using rule 30 (expression -> ID .)
    FLOATTYPE       reduce using rule 30 (expression -> ID .)
    INT             reduce using rule 30 (expression -> ID .)
    BOOL            reduce using rule 30 (expression -> ID .)
    PRINT           reduce using rule 30 (expression -> ID .)
    BREAK           reduce using rule 30 (expression -> ID .)
    NUMBER          reduce using rule 30 (expression -> ID .)
    LPAREN          reduce using rule 30 (expression -> ID .)
    $end            reduce using rule 30 (expression -> ID .)
    RPAREN          reduce using rule 30 (expression -> ID .)
    RBRACE          reduce using rule 30 (expression -> ID .)
    TIMES           reduce using rule 31 (term -> ID .)
    DIVIDE          reduce using rule 31 (term -> ID .)
    MODULO          reduce using rule 31 (term -> ID .)

  ! ID              [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! WHILE           [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! FOR             [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! IF              [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! CHAR            [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! FLOATTYPE       [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! INT             [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! BOOL            [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! PRINT           [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! BREAK           [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! NUMBER          [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! LPAREN          [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! $end            [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! RPAREN          [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! RBRACE          [ reduce using rule 48 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! PLUS            [ reduce using rule 31 (term -> ID .) ]
  ! MINUS           [ reduce using rule 31 (term -> ID .) ]
  ! ID              [ reduce using rule 31 (term -> ID .) ]
  ! WHILE           [ reduce using rule 31 (term -> ID .) ]
  ! FOR             [ reduce using rule 31 (term -> ID .) ]
  ! IF              [ reduce using rule 31 (term -> ID .) ]
  ! CHAR            [ reduce using rule 31 (term -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 31 (term -> ID .) ]
  ! INT             [ reduce using rule 31 (term -> ID .) ]
  ! BOOL            [ reduce using rule 31 (term -> ID .) ]
  ! PRINT           [ reduce using rule 31 (term -> ID .) ]
  ! BREAK           [ reduce using rule 31 (term -> ID .) ]
  ! NUMBER          [ reduce using rule 31 (term -> ID .) ]
  ! LPAREN          [ reduce using rule 31 (term -> ID .) ]
  ! $end            [ reduce using rule 31 (term -> ID .) ]
  ! RPAREN          [ reduce using rule 31 (term -> ID .) ]
  ! RBRACE          [ reduce using rule 31 (term -> ID .) ]
  ! TIMES           [ reduce using rule 32 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 32 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 32 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 32 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 32 (factor -> ID .) ]
  ! ID              [ reduce using rule 32 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 32 (factor -> ID .) ]
  ! FOR             [ reduce using rule 32 (factor -> ID .) ]
  ! IF              [ reduce using rule 32 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 32 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 32 (factor -> ID .) ]
  ! INT             [ reduce using rule 32 (factor -> ID .) ]
  ! BOOL            [ reduce using rule 32 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 32 (factor -> ID .) ]
  ! BREAK           [ reduce using rule 32 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 32 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 32 (factor -> ID .) ]
  ! $end            [ reduce using rule 32 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 32 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 32 (factor -> ID .) ]


state 81

    (44) compare_id_value -> ID NOTEQUAL expression .
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    ID              reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    WHILE           reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    FOR             reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    IF              reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    CHAR            reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    FLOATTYPE       reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    INT             reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    BOOL            reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    PRINT           reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    BREAK           reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    NUMBER          reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    LPAREN          reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    $end            reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    RPAREN          reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    RBRACE          reduce using rule 44 (compare_id_value -> ID NOTEQUAL expression .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 82

    (49) bool_comparison -> ID NOTEQUAL TRUE .

    ID              reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    WHILE           reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    FOR             reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    IF              reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    CHAR            reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    FLOATTYPE       reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    INT             reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    BOOL            reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    PRINT           reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    BREAK           reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    NUMBER          reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    LPAREN          reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    $end            reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    RPAREN          reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)
    RBRACE          reduce using rule 49 (bool_comparison -> ID NOTEQUAL TRUE .)


state 83

    (50) bool_comparison -> ID NOTEQUAL FALSE .

    ID              reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    WHILE           reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    FOR             reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    IF              reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    CHAR            reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    FLOATTYPE       reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    INT             reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    BOOL            reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    PRINT           reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    BREAK           reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    NUMBER          reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    LPAREN          reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    $end            reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    RPAREN          reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)
    RBRACE          reduce using rule 50 (bool_comparison -> ID NOTEQUAL FALSE .)


state 84

    (18) var_assign -> ID EQUALS ID . SEMICOL

    SEMICOL         shift and go to state 111


state 85

    (19) var_assign -> ID EQUALS STRING . SEMICOL

    SEMICOL         shift and go to state 112


state 86

    (20) var_assign -> ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 113


state 87

    (21) var_assign -> ID EQUALS TRUE . SEMICOL

    SEMICOL         shift and go to state 114


state 88

    (22) var_assign -> ID EQUALS FALSE . SEMICOL

    SEMICOL         shift and go to state 115


state 89

    (23) var_inc -> ID PLUS PLUS . SEMICOL

    SEMICOL         shift and go to state 116


state 90

    (24) var_dec -> ID MINUS MINUS . SEMICOL

    SEMICOL         shift and go to state 117


state 91

    (64) term -> term TIMES factor .

    TIMES           reduce using rule 64 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 64 (term -> term TIMES factor .)
    MODULO          reduce using rule 64 (term -> term TIMES factor .)
    SEMICOL         reduce using rule 64 (term -> term TIMES factor .)
    PLUS            reduce using rule 64 (term -> term TIMES factor .)
    MINUS           reduce using rule 64 (term -> term TIMES factor .)
    GTH             reduce using rule 64 (term -> term TIMES factor .)
    LTH             reduce using rule 64 (term -> term TIMES factor .)
    GTHOREQUAL      reduce using rule 64 (term -> term TIMES factor .)
    LTHOREQUAL      reduce using rule 64 (term -> term TIMES factor .)
    EQUALEQUAL      reduce using rule 64 (term -> term TIMES factor .)
    NOTEQUAL        reduce using rule 64 (term -> term TIMES factor .)
    RPAREN          reduce using rule 64 (term -> term TIMES factor .)
    ID              reduce using rule 64 (term -> term TIMES factor .)
    WHILE           reduce using rule 64 (term -> term TIMES factor .)
    FOR             reduce using rule 64 (term -> term TIMES factor .)
    IF              reduce using rule 64 (term -> term TIMES factor .)
    CHAR            reduce using rule 64 (term -> term TIMES factor .)
    FLOATTYPE       reduce using rule 64 (term -> term TIMES factor .)
    INT             reduce using rule 64 (term -> term TIMES factor .)
    BOOL            reduce using rule 64 (term -> term TIMES factor .)
    PRINT           reduce using rule 64 (term -> term TIMES factor .)
    BREAK           reduce using rule 64 (term -> term TIMES factor .)
    NUMBER          reduce using rule 64 (term -> term TIMES factor .)
    LPAREN          reduce using rule 64 (term -> term TIMES factor .)
    $end            reduce using rule 64 (term -> term TIMES factor .)
    RBRACE          reduce using rule 64 (term -> term TIMES factor .)


state 92

    (32) factor -> ID .

    TIMES           reduce using rule 32 (factor -> ID .)
    DIVIDE          reduce using rule 32 (factor -> ID .)
    MODULO          reduce using rule 32 (factor -> ID .)
    SEMICOL         reduce using rule 32 (factor -> ID .)
    PLUS            reduce using rule 32 (factor -> ID .)
    MINUS           reduce using rule 32 (factor -> ID .)
    GTH             reduce using rule 32 (factor -> ID .)
    LTH             reduce using rule 32 (factor -> ID .)
    GTHOREQUAL      reduce using rule 32 (factor -> ID .)
    LTHOREQUAL      reduce using rule 32 (factor -> ID .)
    EQUALEQUAL      reduce using rule 32 (factor -> ID .)
    NOTEQUAL        reduce using rule 32 (factor -> ID .)
    RPAREN          reduce using rule 32 (factor -> ID .)
    ID              reduce using rule 32 (factor -> ID .)
    WHILE           reduce using rule 32 (factor -> ID .)
    FOR             reduce using rule 32 (factor -> ID .)
    IF              reduce using rule 32 (factor -> ID .)
    CHAR            reduce using rule 32 (factor -> ID .)
    FLOATTYPE       reduce using rule 32 (factor -> ID .)
    INT             reduce using rule 32 (factor -> ID .)
    BOOL            reduce using rule 32 (factor -> ID .)
    PRINT           reduce using rule 32 (factor -> ID .)
    BREAK           reduce using rule 32 (factor -> ID .)
    NUMBER          reduce using rule 32 (factor -> ID .)
    LPAREN          reduce using rule 32 (factor -> ID .)
    $end            reduce using rule 32 (factor -> ID .)
    RBRACE          reduce using rule 32 (factor -> ID .)


state 93

    (65) term -> term DIVIDE factor .

    TIMES           reduce using rule 65 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 65 (term -> term DIVIDE factor .)
    MODULO          reduce using rule 65 (term -> term DIVIDE factor .)
    SEMICOL         reduce using rule 65 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 65 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 65 (term -> term DIVIDE factor .)
    GTH             reduce using rule 65 (term -> term DIVIDE factor .)
    LTH             reduce using rule 65 (term -> term DIVIDE factor .)
    GTHOREQUAL      reduce using rule 65 (term -> term DIVIDE factor .)
    LTHOREQUAL      reduce using rule 65 (term -> term DIVIDE factor .)
    EQUALEQUAL      reduce using rule 65 (term -> term DIVIDE factor .)
    NOTEQUAL        reduce using rule 65 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 65 (term -> term DIVIDE factor .)
    ID              reduce using rule 65 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 65 (term -> term DIVIDE factor .)
    FOR             reduce using rule 65 (term -> term DIVIDE factor .)
    IF              reduce using rule 65 (term -> term DIVIDE factor .)
    CHAR            reduce using rule 65 (term -> term DIVIDE factor .)
    FLOATTYPE       reduce using rule 65 (term -> term DIVIDE factor .)
    INT             reduce using rule 65 (term -> term DIVIDE factor .)
    BOOL            reduce using rule 65 (term -> term DIVIDE factor .)
    PRINT           reduce using rule 65 (term -> term DIVIDE factor .)
    BREAK           reduce using rule 65 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 65 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 65 (term -> term DIVIDE factor .)
    $end            reduce using rule 65 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 65 (term -> term DIVIDE factor .)


state 94

    (66) term -> term MODULO factor .

    TIMES           reduce using rule 66 (term -> term MODULO factor .)
    DIVIDE          reduce using rule 66 (term -> term MODULO factor .)
    MODULO          reduce using rule 66 (term -> term MODULO factor .)
    SEMICOL         reduce using rule 66 (term -> term MODULO factor .)
    PLUS            reduce using rule 66 (term -> term MODULO factor .)
    MINUS           reduce using rule 66 (term -> term MODULO factor .)
    GTH             reduce using rule 66 (term -> term MODULO factor .)
    LTH             reduce using rule 66 (term -> term MODULO factor .)
    GTHOREQUAL      reduce using rule 66 (term -> term MODULO factor .)
    LTHOREQUAL      reduce using rule 66 (term -> term MODULO factor .)
    EQUALEQUAL      reduce using rule 66 (term -> term MODULO factor .)
    NOTEQUAL        reduce using rule 66 (term -> term MODULO factor .)
    RPAREN          reduce using rule 66 (term -> term MODULO factor .)
    ID              reduce using rule 66 (term -> term MODULO factor .)
    WHILE           reduce using rule 66 (term -> term MODULO factor .)
    FOR             reduce using rule 66 (term -> term MODULO factor .)
    IF              reduce using rule 66 (term -> term MODULO factor .)
    CHAR            reduce using rule 66 (term -> term MODULO factor .)
    FLOATTYPE       reduce using rule 66 (term -> term MODULO factor .)
    INT             reduce using rule 66 (term -> term MODULO factor .)
    BOOL            reduce using rule 66 (term -> term MODULO factor .)
    PRINT           reduce using rule 66 (term -> term MODULO factor .)
    BREAK           reduce using rule 66 (term -> term MODULO factor .)
    NUMBER          reduce using rule 66 (term -> term MODULO factor .)
    LPAREN          reduce using rule 66 (term -> term MODULO factor .)
    $end            reduce using rule 66 (term -> term MODULO factor .)
    RBRACE          reduce using rule 66 (term -> term MODULO factor .)


state 95

    (56) while_statement -> WHILE LPAREN comparison . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 118


state 96

    (57) while_statement -> WHILE LPAREN TRUE . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 119


state 97

    (58) while_statement -> WHILE LPAREN FALSE . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 120


state 98

    (33) comparison -> expression . GTH expression
    (34) comparison -> expression . LTH expression
    (35) comparison -> expression . GTHOREQUAL expression
    (36) comparison -> expression . LTHOREQUAL expression
    (37) comparison -> expression . EQUALEQUAL expression
    (38) comparison -> expression . NOTEQUAL expression
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    GTH             shift and go to state 34
    LTH             shift and go to state 35
    GTHOREQUAL      shift and go to state 36
    LTHOREQUAL      shift and go to state 37
    EQUALEQUAL      shift and go to state 38
    NOTEQUAL        shift and go to state 39
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 99

    (69) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    SEMICOL         reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    GTH             reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    LTH             reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    GTHOREQUAL      reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    LTHOREQUAL      reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    EQUALEQUAL      reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    FLOATTYPE       reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    INT             reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    BOOL            reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 69 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 69 (factor -> LPAREN expression RPAREN .)


state 100

    (59) for_statement -> FOR LPAREN var_statement . comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 54
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    comparison                     shift and go to state 121
    expression                     shift and go to state 98
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 101

    (51) if_statement -> IF LPAREN comparison . RPAREN LBRACE statements RBRACE
    (54) if_statement -> IF LPAREN comparison . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    RPAREN          shift and go to state 122


state 102

    (52) if_statement -> IF LPAREN compare_id_value . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 123


state 103

    (53) if_statement -> IF LPAREN bool_comparison . RPAREN LBRACE statements RBRACE
    (55) if_statement -> IF LPAREN bool_comparison . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    RPAREN          shift and go to state 124


state 104

    (39) compare_id_value -> ID . GTH expression
    (40) compare_id_value -> ID . LTH expression
    (41) compare_id_value -> ID . GTHOREQUAL expression
    (42) compare_id_value -> ID . LTHOREQUAL expression
    (43) compare_id_value -> ID . EQUALEQUAL expression
    (44) compare_id_value -> ID . NOTEQUAL expression
    (45) bool_comparison -> ID . EQUALEQUAL ID
    (46) bool_comparison -> ID . EQUALEQUAL TRUE
    (47) bool_comparison -> ID . EQUALEQUAL FALSE
    (48) bool_comparison -> ID . NOTEQUAL ID
    (49) bool_comparison -> ID . NOTEQUAL TRUE
    (50) bool_comparison -> ID . NOTEQUAL FALSE
    (30) expression -> ID .
    (31) term -> ID .
    (32) factor -> ID .

  ! shift/reduce conflict for GTH resolved as shift
  ! shift/reduce conflict for LTH resolved as shift
  ! shift/reduce conflict for GTHOREQUAL resolved as shift
  ! shift/reduce conflict for LTHOREQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GTH resolved as shift
  ! shift/reduce conflict for LTH resolved as shift
  ! shift/reduce conflict for GTHOREQUAL resolved as shift
  ! shift/reduce conflict for LTHOREQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 31 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 31 (term -> ID .)
  ! shift/reduce conflict for GTH resolved as shift
  ! shift/reduce conflict for LTH resolved as shift
  ! shift/reduce conflict for GTHOREQUAL resolved as shift
  ! shift/reduce conflict for LTHOREQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 30 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 30 (expression -> ID .)
    GTH             shift and go to state 40
    LTH             shift and go to state 41
    GTHOREQUAL      shift and go to state 42
    LTHOREQUAL      shift and go to state 43
    EQUALEQUAL      shift and go to state 44
    NOTEQUAL        shift and go to state 45
    PLUS            reduce using rule 30 (expression -> ID .)
    MINUS           reduce using rule 30 (expression -> ID .)
    TIMES           reduce using rule 31 (term -> ID .)
    DIVIDE          reduce using rule 31 (term -> ID .)
    MODULO          reduce using rule 31 (term -> ID .)

  ! GTH             [ reduce using rule 30 (expression -> ID .) ]
  ! LTH             [ reduce using rule 30 (expression -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 30 (expression -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 30 (expression -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 30 (expression -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 30 (expression -> ID .) ]
  ! GTH             [ reduce using rule 31 (term -> ID .) ]
  ! LTH             [ reduce using rule 31 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 31 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 31 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 31 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 31 (term -> ID .) ]
  ! PLUS            [ reduce using rule 31 (term -> ID .) ]
  ! MINUS           [ reduce using rule 31 (term -> ID .) ]
  ! TIMES           [ reduce using rule 32 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 32 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 32 (factor -> ID .) ]
  ! GTH             [ reduce using rule 32 (factor -> ID .) ]
  ! LTH             [ reduce using rule 32 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 32 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 32 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 32 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 32 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 32 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 32 (factor -> ID .) ]


state 105

    (25) var_statement -> CHAR ID EQUALS . STRING SEMICOL

    STRING          shift and go to state 125


state 106

    (26) var_statement -> FLOATTYPE ID EQUALS . NUMBER SEMICOL

    NUMBER          shift and go to state 126


state 107

    (27) var_statement -> INT ID EQUALS . NUMBER SEMICOL

    NUMBER          shift and go to state 127


state 108

    (28) var_statement -> BOOL ID EQUALS . TRUE SEMICOL
    (29) var_statement -> BOOL ID EQUALS . FALSE SEMICOL

    TRUE            shift and go to state 128
    FALSE           shift and go to state 129


state 109

    (3) print_statement -> PRINT LPAREN expression . RPAREN SEMICOL
    (61) expression -> expression . PLUS term
    (62) expression -> expression . MINUS term

    RPAREN          shift and go to state 130
    PLUS            shift and go to state 32
    MINUS           shift and go to state 33


state 110

    (4) print_statement -> PRINT LPAREN STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 131


state 111

    (18) var_assign -> ID EQUALS ID SEMICOL .

    ID              reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    WHILE           reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    FOR             reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    IF              reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    CHAR            reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    FLOATTYPE       reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    INT             reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    BOOL            reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    PRINT           reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    BREAK           reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    NUMBER          reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    LPAREN          reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    $end            reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)
    RBRACE          reduce using rule 18 (var_assign -> ID EQUALS ID SEMICOL .)


state 112

    (19) var_assign -> ID EQUALS STRING SEMICOL .

    ID              reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    WHILE           reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    FOR             reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    IF              reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    CHAR            reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    FLOATTYPE       reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    INT             reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    BOOL            reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    PRINT           reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    BREAK           reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    NUMBER          reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    LPAREN          reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    $end            reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)
    RBRACE          reduce using rule 19 (var_assign -> ID EQUALS STRING SEMICOL .)


state 113

    (20) var_assign -> ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    WHILE           reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    FOR             reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    BOOL            reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    BREAK           reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 20 (var_assign -> ID EQUALS NUMBER SEMICOL .)


state 114

    (21) var_assign -> ID EQUALS TRUE SEMICOL .

    ID              reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    WHILE           reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    FOR             reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    IF              reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    CHAR            reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    FLOATTYPE       reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    INT             reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    BOOL            reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    PRINT           reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    BREAK           reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    NUMBER          reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    LPAREN          reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    $end            reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)
    RBRACE          reduce using rule 21 (var_assign -> ID EQUALS TRUE SEMICOL .)


state 115

    (22) var_assign -> ID EQUALS FALSE SEMICOL .

    ID              reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    WHILE           reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    FOR             reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    IF              reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    CHAR            reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    FLOATTYPE       reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    INT             reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    BOOL            reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    PRINT           reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    BREAK           reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    NUMBER          reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    LPAREN          reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    $end            reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)
    RBRACE          reduce using rule 22 (var_assign -> ID EQUALS FALSE SEMICOL .)


state 116

    (23) var_inc -> ID PLUS PLUS SEMICOL .

    ID              reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    WHILE           reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    FOR             reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    IF              reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    CHAR            reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    FLOATTYPE       reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    INT             reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    BOOL            reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    PRINT           reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    BREAK           reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    NUMBER          reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    LPAREN          reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    $end            reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    RBRACE          reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)
    RPAREN          reduce using rule 23 (var_inc -> ID PLUS PLUS SEMICOL .)


state 117

    (24) var_dec -> ID MINUS MINUS SEMICOL .

    ID              reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    WHILE           reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    FOR             reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    IF              reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    CHAR            reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    FLOATTYPE       reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    INT             reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    BOOL            reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    PRINT           reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    BREAK           reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    NUMBER          reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    LPAREN          reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    $end            reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)
    RBRACE          reduce using rule 24 (var_dec -> ID MINUS MINUS SEMICOL .)


state 118

    (56) while_statement -> WHILE LPAREN comparison RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 132


state 119

    (57) while_statement -> WHILE LPAREN TRUE RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 133


state 120

    (58) while_statement -> WHILE LPAREN FALSE RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 134


state 121

    (59) for_statement -> FOR LPAREN var_statement comparison . SEMICOL var_inc RPAREN LBRACE statements RBRACE

    SEMICOL         shift and go to state 135


state 122

    (51) if_statement -> IF LPAREN comparison RPAREN . LBRACE statements RBRACE
    (54) if_statement -> IF LPAREN comparison RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 136


state 123

    (52) if_statement -> IF LPAREN compare_id_value RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 137


state 124

    (53) if_statement -> IF LPAREN bool_comparison RPAREN . LBRACE statements RBRACE
    (55) if_statement -> IF LPAREN bool_comparison RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 138


state 125

    (25) var_statement -> CHAR ID EQUALS STRING . SEMICOL

    SEMICOL         shift and go to state 139


state 126

    (26) var_statement -> FLOATTYPE ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 140


state 127

    (27) var_statement -> INT ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 141


state 128

    (28) var_statement -> BOOL ID EQUALS TRUE . SEMICOL

    SEMICOL         shift and go to state 142


state 129

    (29) var_statement -> BOOL ID EQUALS FALSE . SEMICOL

    SEMICOL         shift and go to state 143


state 130

    (3) print_statement -> PRINT LPAREN expression RPAREN . SEMICOL

    SEMICOL         shift and go to state 144


state 131

    (4) print_statement -> PRINT LPAREN STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 145


state 132

    (56) while_statement -> WHILE LPAREN comparison RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    comparison                     shift and go to state 7
    statements                     shift and go to state 146
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 133

    (57) while_statement -> WHILE LPAREN TRUE RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    statements                     shift and go to state 147
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 134

    (58) while_statement -> WHILE LPAREN FALSE RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    statements                     shift and go to state 148
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 135

    (59) for_statement -> FOR LPAREN var_statement comparison SEMICOL . var_inc RPAREN LBRACE statements RBRACE
    (23) var_inc -> . ID PLUS PLUS SEMICOL

    ID              shift and go to state 150

    var_inc                        shift and go to state 149

state 136

    (51) if_statement -> IF LPAREN comparison RPAREN LBRACE . statements RBRACE
    (54) if_statement -> IF LPAREN comparison RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    comparison                     shift and go to state 7
    statements                     shift and go to state 151
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 137

    (52) if_statement -> IF LPAREN compare_id_value RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    compare_id_value               shift and go to state 8
    statements                     shift and go to state 152
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 138

    (53) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE . statements RBRACE
    (55) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    bool_comparison                shift and go to state 9
    statements                     shift and go to state 153
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    compare_id_value               shift and go to state 8
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 139

    (25) var_statement -> CHAR ID EQUALS STRING SEMICOL .

    ID              reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    WHILE           reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    FOR             reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    IF              reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    CHAR            reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    FLOATTYPE       reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    INT             reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    BOOL            reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    PRINT           reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    BREAK           reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    NUMBER          reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    LPAREN          reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    $end            reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    RBRACE          reduce using rule 25 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)


state 140

    (26) var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    WHILE           reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    FOR             reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    BOOL            reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    BREAK           reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 26 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)


state 141

    (27) var_statement -> INT ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    WHILE           reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    FOR             reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    BOOL            reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    BREAK           reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 27 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)


state 142

    (28) var_statement -> BOOL ID EQUALS TRUE SEMICOL .

    ID              reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    WHILE           reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    FOR             reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    IF              reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    CHAR            reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    FLOATTYPE       reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    INT             reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    BOOL            reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    PRINT           reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    BREAK           reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    NUMBER          reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    LPAREN          reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    $end            reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    RBRACE          reduce using rule 28 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)


state 143

    (29) var_statement -> BOOL ID EQUALS FALSE SEMICOL .

    ID              reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    WHILE           reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    FOR             reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    IF              reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    CHAR            reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    FLOATTYPE       reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    INT             reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    BOOL            reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    PRINT           reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    BREAK           reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    NUMBER          reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    LPAREN          reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    $end            reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    RBRACE          reduce using rule 29 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)


state 144

    (3) print_statement -> PRINT LPAREN expression RPAREN SEMICOL .

    ID              reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    WHILE           reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    FOR             reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    IF              reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    CHAR            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    INT             reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    BOOL            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    PRINT           reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    BREAK           reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    NUMBER          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    LPAREN          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    $end            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    RBRACE          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)


state 145

    (4) print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .

    ID              reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    WHILE           reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    FOR             reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    IF              reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    CHAR            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    INT             reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    BOOL            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    PRINT           reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    BREAK           reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    NUMBER          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    LPAREN          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    $end            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    RBRACE          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)


state 146

    (56) while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 154
    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    comparison                     shift and go to state 7
    statement                      shift and go to state 30
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 147

    (57) while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 155
    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    statement                      shift and go to state 30
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 148

    (58) while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 156
    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    statement                      shift and go to state 30
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 149

    (59) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 157


state 150

    (23) var_inc -> ID . PLUS PLUS SEMICOL

    PLUS            shift and go to state 47


state 151

    (51) if_statement -> IF LPAREN comparison RPAREN LBRACE statements . RBRACE
    (54) if_statement -> IF LPAREN comparison RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 158
    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    comparison                     shift and go to state 7
    statement                      shift and go to state 30
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 152

    (52) if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 159
    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    compare_id_value               shift and go to state 8
    statement                      shift and go to state 30
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 153

    (53) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements . RBRACE
    (55) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 160
    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    bool_comparison                shift and go to state 9
    statement                      shift and go to state 30
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    compare_id_value               shift and go to state 8
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 154

    (56) while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 56 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)


state 155

    (57) while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 57 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)


state 156

    (58) while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 58 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)


state 157

    (59) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 161


state 158

    (51) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .
    (54) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    ID              reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 51 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 162


state 159

    (52) if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 52 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)


state 160

    (53) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .
    (55) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    ID              reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 53 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 163


state 161

    (59) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    var_statement                  shift and go to state 10
    comparison                     shift and go to state 7
    var_inc                        shift and go to state 12
    statements                     shift and go to state 164
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_assign                     shift and go to state 11
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 162

    (54) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 165


state 163

    (55) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 166


state 164

    (59) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 167
    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    var_statement                  shift and go to state 10
    comparison                     shift and go to state 7
    var_inc                        shift and go to state 12
    statement                      shift and go to state 30
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_assign                     shift and go to state 11
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 165

    (54) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    comparison                     shift and go to state 7
    statements                     shift and go to state 168
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 166

    (55) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    bool_comparison                shift and go to state 9
    statements                     shift and go to state 169
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    compare_id_value               shift and go to state 8
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 167

    (59) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 59 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)


state 168

    (54) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 170
    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    comparison                     shift and go to state 7
    statement                      shift and go to state 30
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    compare_id_value               shift and go to state 8
    bool_comparison                shift and go to state 9
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 169

    (55) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . for_statement
    (8) statement -> . if_statement
    (9) statement -> . comparison
    (10) statement -> . compare_id_value
    (11) statement -> . bool_comparison
    (12) statement -> . var_statement
    (13) statement -> . var_assign
    (14) statement -> . var_inc
    (15) statement -> . var_dec
    (16) statement -> . print_statement
    (17) statement -> . break_statement
    (30) expression -> . ID
    (61) expression -> . expression PLUS term
    (62) expression -> . expression MINUS term
    (63) expression -> . term
    (56) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (57) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (58) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (59) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (51) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (52) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (53) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (54) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (55) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (33) comparison -> . expression GTH expression
    (34) comparison -> . expression LTH expression
    (35) comparison -> . expression GTHOREQUAL expression
    (36) comparison -> . expression LTHOREQUAL expression
    (37) comparison -> . expression EQUALEQUAL expression
    (38) comparison -> . expression NOTEQUAL expression
    (39) compare_id_value -> . ID GTH expression
    (40) compare_id_value -> . ID LTH expression
    (41) compare_id_value -> . ID GTHOREQUAL expression
    (42) compare_id_value -> . ID LTHOREQUAL expression
    (43) compare_id_value -> . ID EQUALEQUAL expression
    (44) compare_id_value -> . ID NOTEQUAL expression
    (45) bool_comparison -> . ID EQUALEQUAL ID
    (46) bool_comparison -> . ID EQUALEQUAL TRUE
    (47) bool_comparison -> . ID EQUALEQUAL FALSE
    (48) bool_comparison -> . ID NOTEQUAL ID
    (49) bool_comparison -> . ID NOTEQUAL TRUE
    (50) bool_comparison -> . ID NOTEQUAL FALSE
    (25) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (26) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (27) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (28) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (29) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (18) var_assign -> . ID EQUALS ID SEMICOL
    (19) var_assign -> . ID EQUALS STRING SEMICOL
    (20) var_assign -> . ID EQUALS NUMBER SEMICOL
    (21) var_assign -> . ID EQUALS TRUE SEMICOL
    (22) var_assign -> . ID EQUALS FALSE SEMICOL
    (23) var_inc -> . ID PLUS PLUS SEMICOL
    (24) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (60) break_statement -> . BREAK SEMICOL
    (31) term -> . ID
    (64) term -> . term TIMES factor
    (65) term -> . term DIVIDE factor
    (66) term -> . term MODULO factor
    (67) term -> . factor
    (32) factor -> . ID
    (68) factor -> . NUMBER
    (69) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 171
    ID              shift and go to state 16
    WHILE           shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 21
    CHAR            shift and go to state 22
    FLOATTYPE       shift and go to state 23
    INT             shift and go to state 25
    BOOL            shift and go to state 26
    PRINT           shift and go to state 27
    BREAK           shift and go to state 28
    NUMBER          shift and go to state 24
    LPAREN          shift and go to state 19

    bool_comparison                shift and go to state 9
    statement                      shift and go to state 30
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    comparison                     shift and go to state 7
    compare_id_value               shift and go to state 8
    var_statement                  shift and go to state 10
    var_assign                     shift and go to state 11
    var_inc                        shift and go to state 12
    var_dec                        shift and go to state 13
    print_statement                shift and go to state 14
    break_statement                shift and go to state 15
    term                           shift and go to state 17
    factor                         shift and go to state 29

state 170

    (54) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    ID              reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    WHILE           reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    CHAR            reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    INT             reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BOOL            reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    PRINT           reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BREAK           reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NUMBER          reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    LPAREN          reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 54 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)


state 171

    (55) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    ID              reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    WHILE           reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    CHAR            reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    INT             reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BOOL            reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    PRINT           reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BREAK           reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NUMBER          reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    LPAREN          reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 55 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for GTH in state 16 resolved as shift
WARNING: shift/reduce conflict for LTH in state 16 resolved as shift
WARNING: shift/reduce conflict for GTHOREQUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for LTHOREQUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 16 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 16 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for GTH in state 16 resolved as shift
WARNING: shift/reduce conflict for LTH in state 16 resolved as shift
WARNING: shift/reduce conflict for GTHOREQUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for LTHOREQUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 16 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for GTH in state 16 resolved as shift
WARNING: shift/reduce conflict for LTH in state 16 resolved as shift
WARNING: shift/reduce conflict for GTHOREQUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for LTHOREQUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for GTH in state 104 resolved as shift
WARNING: shift/reduce conflict for LTH in state 104 resolved as shift
WARNING: shift/reduce conflict for GTHOREQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for LTHOREQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for GTH in state 104 resolved as shift
WARNING: shift/reduce conflict for LTH in state 104 resolved as shift
WARNING: shift/reduce conflict for GTHOREQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for LTHOREQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for GTH in state 104 resolved as shift
WARNING: shift/reduce conflict for LTH in state 104 resolved as shift
WARNING: shift/reduce conflict for GTHOREQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for LTHOREQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 104 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 104 resolved as shift
WARNING: reduce/reduce conflict in state 16 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 16
WARNING: reduce/reduce conflict in state 16 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 16
WARNING: reduce/reduce conflict in state 16 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 16
WARNING: reduce/reduce conflict in state 54 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 54
WARNING: reduce/reduce conflict in state 54 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 54
WARNING: reduce/reduce conflict in state 54 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 54
WARNING: reduce/reduce conflict in state 64 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 64
WARNING: reduce/reduce conflict in state 76 resolved using rule (expression -> ID)
WARNING: rejected rule (bool_comparison -> ID EQUALEQUAL ID) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 76
WARNING: reduce/reduce conflict in state 80 resolved using rule (expression -> ID)
WARNING: rejected rule (bool_comparison -> ID NOTEQUAL ID) in state 80
WARNING: reduce/reduce conflict in state 80 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 80
WARNING: reduce/reduce conflict in state 80 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 80
WARNING: reduce/reduce conflict in state 80 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 80
WARNING: reduce/reduce conflict in state 104 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 104
WARNING: reduce/reduce conflict in state 104 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 104
WARNING: reduce/reduce conflict in state 104 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 104
WARNING: Rule (bool_comparison -> ID EQUALEQUAL ID) is never reduced
WARNING: Rule (bool_comparison -> ID NOTEQUAL ID) is never reduced
