Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    CONST
    CONTINUE
    DEFAULT
    DO
    DOUBLE
    ELSE
    ENUM
    EXTERN
    FLOAT_CONST
    FOR
    GOTO
    INT_CONST
    LBRACE
    LONG
    RBRACE
    REGISTER
    RETURN
    SHORT
    SIGNED
    SIZEOF
    STATIC
    STRUCT
    SWITCH
    TYPEDEF
    UNION
    UNSIGNED
    VOID
    VOLATILE
    WHILE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     statement -> comparison
Rule 3     statement -> if_statement
Rule 4     statement -> var_statement
Rule 5     var_statement -> CHAR ID EQUALS STRING SEMICOL
Rule 6     var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL
Rule 7     var_statement -> INT ID EQUALS NUMBER SEMICOL
Rule 8     expression -> ID
Rule 9     term -> ID
Rule 10    factor -> ID
Rule 11    comparison -> expression GTH expression
Rule 12    comparison -> expression LTH expression
Rule 13    comparison -> expression GTHOREQUAL expression
Rule 14    comparison -> expression LTHOREQUAL expression
Rule 15    comparison -> expression EQUALEQUAL expression
Rule 16    comparison -> expression NOTEQUAL expression
Rule 17    if_statement -> IF LPAREN comparison RPAREN
Rule 18    expression -> expression PLUS term
Rule 19    expression -> expression MINUS term
Rule 20    expression -> term
Rule 21    term -> term TIMES factor
Rule 22    term -> term DIVIDE factor
Rule 23    term -> term MODULO factor
Rule 24    term -> factor
Rule 25    factor -> NUMBER
Rule 26    factor -> LPAREN expression RPAREN
Rule 27    print_statement -> PRINT LPAREN expression RPAREN SEMICOL
Rule 28    print_statement -> PRINT LPAREN STRING RPAREN SEMICOL
Rule 29    empty -> <empty>

Terminals, with rules where they appear

BREAK                : 
CASE                 : 
CHAR                 : 5
CONST                : 
CONTINUE             : 
DEFAULT              : 
DIVIDE               : 22
DO                   : 
DOUBLE               : 
ELSE                 : 
ENUM                 : 
EQUALEQUAL           : 15
EQUALS               : 5 6 7
EXTERN               : 
FLOATTYPE            : 6
FLOAT_CONST          : 
FOR                  : 
GOTO                 : 
GTH                  : 11
GTHOREQUAL           : 13
ID                   : 5 6 7 8 9 10
IF                   : 17
INT                  : 7
INT_CONST            : 
LBRACE               : 
LONG                 : 
LPAREN               : 17 26 27 28
LTH                  : 12
LTHOREQUAL           : 14
MINUS                : 19
MODULO               : 23
NOTEQUAL             : 16
NUMBER               : 6 7 25
PLUS                 : 18
PRINT                : 27 28
RBRACE               : 
REGISTER             : 
RETURN               : 
RPAREN               : 17 26 27 28
SEMICOL              : 5 6 7 27 28
SHORT                : 
SIGNED               : 
SIZEOF               : 
STATIC               : 
STRING               : 5 28
STRUCT               : 
SWITCH               : 
TIMES                : 21
TYPEDEF              : 
UNION                : 
UNSIGNED             : 
VOID                 : 
VOLATILE             : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

comparison           : 2 17
empty                : 
expression           : 1 11 11 12 12 13 13 14 14 15 15 16 16 18 19 26 27
factor               : 21 22 23 24
if_statement         : 3
print_statement      : 
statement            : 0
term                 : 18 19 20 21 22 23
var_statement        : 4

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) statement -> . comparison
    (3) statement -> . if_statement
    (4) statement -> . var_statement
    (8) expression -> . ID
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (11) comparison -> . expression GTH expression
    (12) comparison -> . expression LTH expression
    (13) comparison -> . expression GTHOREQUAL expression
    (14) comparison -> . expression LTHOREQUAL expression
    (15) comparison -> . expression EQUALEQUAL expression
    (16) comparison -> . expression NOTEQUAL expression
    (17) if_statement -> . IF LPAREN comparison RPAREN
    (5) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (6) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (7) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (9) term -> . ID
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . term MODULO factor
    (24) term -> . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 6
    IF              shift and go to state 8
    CHAR            shift and go to state 10
    FLOATTYPE       shift and go to state 11
    INT             shift and go to state 13
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    statement                      shift and go to state 1
    expression                     shift and go to state 2
    comparison                     shift and go to state 3
    if_statement                   shift and go to state 4
    var_statement                  shift and go to state 5
    term                           shift and go to state 7
    factor                         shift and go to state 14

state 1

    (0) S' -> statement .



state 2

    (1) statement -> expression .
    (18) expression -> expression . PLUS term
    (19) expression -> expression . MINUS term
    (11) comparison -> expression . GTH expression
    (12) comparison -> expression . LTH expression
    (13) comparison -> expression . GTHOREQUAL expression
    (14) comparison -> expression . LTHOREQUAL expression
    (15) comparison -> expression . EQUALEQUAL expression
    (16) comparison -> expression . NOTEQUAL expression

    $end            reduce using rule 1 (statement -> expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    GTH             shift and go to state 17
    LTH             shift and go to state 18
    GTHOREQUAL      shift and go to state 19
    LTHOREQUAL      shift and go to state 20
    EQUALEQUAL      shift and go to state 21
    NOTEQUAL        shift and go to state 22


state 3

    (2) statement -> comparison .

    $end            reduce using rule 2 (statement -> comparison .)


state 4

    (3) statement -> if_statement .

    $end            reduce using rule 3 (statement -> if_statement .)


state 5

    (4) statement -> var_statement .

    $end            reduce using rule 4 (statement -> var_statement .)


state 6

    (8) expression -> ID .
    (9) term -> ID .
    (10) factor -> ID .

  ! reduce/reduce conflict for PLUS resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 8 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (expression -> ID .)
    PLUS            reduce using rule 8 (expression -> ID .)
    MINUS           reduce using rule 8 (expression -> ID .)
    GTH             reduce using rule 8 (expression -> ID .)
    LTH             reduce using rule 8 (expression -> ID .)
    GTHOREQUAL      reduce using rule 8 (expression -> ID .)
    LTHOREQUAL      reduce using rule 8 (expression -> ID .)
    EQUALEQUAL      reduce using rule 8 (expression -> ID .)
    NOTEQUAL        reduce using rule 8 (expression -> ID .)
    $end            reduce using rule 8 (expression -> ID .)
    RPAREN          reduce using rule 8 (expression -> ID .)
    TIMES           reduce using rule 9 (term -> ID .)
    DIVIDE          reduce using rule 9 (term -> ID .)
    MODULO          reduce using rule 9 (term -> ID .)

  ! PLUS            [ reduce using rule 9 (term -> ID .) ]
  ! MINUS           [ reduce using rule 9 (term -> ID .) ]
  ! GTH             [ reduce using rule 9 (term -> ID .) ]
  ! LTH             [ reduce using rule 9 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 9 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 9 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 9 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 9 (term -> ID .) ]
  ! $end            [ reduce using rule 9 (term -> ID .) ]
  ! RPAREN          [ reduce using rule 9 (term -> ID .) ]
  ! TIMES           [ reduce using rule 10 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 10 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 10 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 10 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 10 (factor -> ID .) ]
  ! GTH             [ reduce using rule 10 (factor -> ID .) ]
  ! LTH             [ reduce using rule 10 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 10 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 10 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 10 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 10 (factor -> ID .) ]
  ! $end            [ reduce using rule 10 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 10 (factor -> ID .) ]


state 7

    (20) expression -> term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor
    (23) term -> term . MODULO factor

    PLUS            reduce using rule 20 (expression -> term .)
    MINUS           reduce using rule 20 (expression -> term .)
    GTH             reduce using rule 20 (expression -> term .)
    LTH             reduce using rule 20 (expression -> term .)
    GTHOREQUAL      reduce using rule 20 (expression -> term .)
    LTHOREQUAL      reduce using rule 20 (expression -> term .)
    EQUALEQUAL      reduce using rule 20 (expression -> term .)
    NOTEQUAL        reduce using rule 20 (expression -> term .)
    $end            reduce using rule 20 (expression -> term .)
    RPAREN          reduce using rule 20 (expression -> term .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25


state 8

    (17) if_statement -> IF . LPAREN comparison RPAREN

    LPAREN          shift and go to state 26


state 9

    (26) factor -> LPAREN . expression RPAREN
    (8) expression -> . ID
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (9) term -> . ID
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . term MODULO factor
    (24) term -> . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    expression                     shift and go to state 27
    term                           shift and go to state 7
    factor                         shift and go to state 14

state 10

    (5) var_statement -> CHAR . ID EQUALS STRING SEMICOL

    ID              shift and go to state 28


state 11

    (6) var_statement -> FLOATTYPE . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 29


state 12

    (25) factor -> NUMBER .

    TIMES           reduce using rule 25 (factor -> NUMBER .)
    DIVIDE          reduce using rule 25 (factor -> NUMBER .)
    MODULO          reduce using rule 25 (factor -> NUMBER .)
    PLUS            reduce using rule 25 (factor -> NUMBER .)
    MINUS           reduce using rule 25 (factor -> NUMBER .)
    GTH             reduce using rule 25 (factor -> NUMBER .)
    LTH             reduce using rule 25 (factor -> NUMBER .)
    GTHOREQUAL      reduce using rule 25 (factor -> NUMBER .)
    LTHOREQUAL      reduce using rule 25 (factor -> NUMBER .)
    EQUALEQUAL      reduce using rule 25 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 25 (factor -> NUMBER .)
    $end            reduce using rule 25 (factor -> NUMBER .)
    RPAREN          reduce using rule 25 (factor -> NUMBER .)


state 13

    (7) var_statement -> INT . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 30


state 14

    (24) term -> factor .

    TIMES           reduce using rule 24 (term -> factor .)
    DIVIDE          reduce using rule 24 (term -> factor .)
    MODULO          reduce using rule 24 (term -> factor .)
    PLUS            reduce using rule 24 (term -> factor .)
    MINUS           reduce using rule 24 (term -> factor .)
    GTH             reduce using rule 24 (term -> factor .)
    LTH             reduce using rule 24 (term -> factor .)
    GTHOREQUAL      reduce using rule 24 (term -> factor .)
    LTHOREQUAL      reduce using rule 24 (term -> factor .)
    EQUALEQUAL      reduce using rule 24 (term -> factor .)
    NOTEQUAL        reduce using rule 24 (term -> factor .)
    $end            reduce using rule 24 (term -> factor .)
    RPAREN          reduce using rule 24 (term -> factor .)


state 15

    (18) expression -> expression PLUS . term
    (9) term -> . ID
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . term MODULO factor
    (24) term -> . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 32
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    term                           shift and go to state 31
    factor                         shift and go to state 14

state 16

    (19) expression -> expression MINUS . term
    (9) term -> . ID
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . term MODULO factor
    (24) term -> . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 32
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    term                           shift and go to state 33
    factor                         shift and go to state 14

state 17

    (11) comparison -> expression GTH . expression
    (8) expression -> . ID
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (9) term -> . ID
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . term MODULO factor
    (24) term -> . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    expression                     shift and go to state 34
    term                           shift and go to state 7
    factor                         shift and go to state 14

state 18

    (12) comparison -> expression LTH . expression
    (8) expression -> . ID
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (9) term -> . ID
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . term MODULO factor
    (24) term -> . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    expression                     shift and go to state 35
    term                           shift and go to state 7
    factor                         shift and go to state 14

state 19

    (13) comparison -> expression GTHOREQUAL . expression
    (8) expression -> . ID
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (9) term -> . ID
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . term MODULO factor
    (24) term -> . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    expression                     shift and go to state 36
    term                           shift and go to state 7
    factor                         shift and go to state 14

state 20

    (14) comparison -> expression LTHOREQUAL . expression
    (8) expression -> . ID
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (9) term -> . ID
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . term MODULO factor
    (24) term -> . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    expression                     shift and go to state 37
    term                           shift and go to state 7
    factor                         shift and go to state 14

state 21

    (15) comparison -> expression EQUALEQUAL . expression
    (8) expression -> . ID
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (9) term -> . ID
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . term MODULO factor
    (24) term -> . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    expression                     shift and go to state 38
    term                           shift and go to state 7
    factor                         shift and go to state 14

state 22

    (16) comparison -> expression NOTEQUAL . expression
    (8) expression -> . ID
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (9) term -> . ID
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . term MODULO factor
    (24) term -> . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    expression                     shift and go to state 39
    term                           shift and go to state 7
    factor                         shift and go to state 14

state 23

    (21) term -> term TIMES . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 41
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    factor                         shift and go to state 40

state 24

    (22) term -> term DIVIDE . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 41
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    factor                         shift and go to state 42

state 25

    (23) term -> term MODULO . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 41
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    factor                         shift and go to state 43

state 26

    (17) if_statement -> IF LPAREN . comparison RPAREN
    (11) comparison -> . expression GTH expression
    (12) comparison -> . expression LTH expression
    (13) comparison -> . expression GTHOREQUAL expression
    (14) comparison -> . expression LTHOREQUAL expression
    (15) comparison -> . expression EQUALEQUAL expression
    (16) comparison -> . expression NOTEQUAL expression
    (8) expression -> . ID
    (18) expression -> . expression PLUS term
    (19) expression -> . expression MINUS term
    (20) expression -> . term
    (9) term -> . ID
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . term MODULO factor
    (24) term -> . factor
    (10) factor -> . ID
    (25) factor -> . NUMBER
    (26) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 6
    NUMBER          shift and go to state 12
    LPAREN          shift and go to state 9

    comparison                     shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 7
    factor                         shift and go to state 14

state 27

    (26) factor -> LPAREN expression . RPAREN
    (18) expression -> expression . PLUS term
    (19) expression -> expression . MINUS term

    RPAREN          shift and go to state 46
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 28

    (5) var_statement -> CHAR ID . EQUALS STRING SEMICOL

    EQUALS          shift and go to state 47


state 29

    (6) var_statement -> FLOATTYPE ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 48


state 30

    (7) var_statement -> INT ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 49


state 31

    (18) expression -> expression PLUS term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor
    (23) term -> term . MODULO factor

    PLUS            reduce using rule 18 (expression -> expression PLUS term .)
    MINUS           reduce using rule 18 (expression -> expression PLUS term .)
    GTH             reduce using rule 18 (expression -> expression PLUS term .)
    LTH             reduce using rule 18 (expression -> expression PLUS term .)
    GTHOREQUAL      reduce using rule 18 (expression -> expression PLUS term .)
    LTHOREQUAL      reduce using rule 18 (expression -> expression PLUS term .)
    EQUALEQUAL      reduce using rule 18 (expression -> expression PLUS term .)
    NOTEQUAL        reduce using rule 18 (expression -> expression PLUS term .)
    $end            reduce using rule 18 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 18 (expression -> expression PLUS term .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25


state 32

    (9) term -> ID .
    (10) factor -> ID .

  ! reduce/reduce conflict for TIMES resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 9 (term -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (term -> ID .)
    TIMES           reduce using rule 9 (term -> ID .)
    DIVIDE          reduce using rule 9 (term -> ID .)
    MODULO          reduce using rule 9 (term -> ID .)
    PLUS            reduce using rule 9 (term -> ID .)
    MINUS           reduce using rule 9 (term -> ID .)
    GTH             reduce using rule 9 (term -> ID .)
    LTH             reduce using rule 9 (term -> ID .)
    GTHOREQUAL      reduce using rule 9 (term -> ID .)
    LTHOREQUAL      reduce using rule 9 (term -> ID .)
    EQUALEQUAL      reduce using rule 9 (term -> ID .)
    NOTEQUAL        reduce using rule 9 (term -> ID .)
    $end            reduce using rule 9 (term -> ID .)
    RPAREN          reduce using rule 9 (term -> ID .)

  ! TIMES           [ reduce using rule 10 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 10 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 10 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 10 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 10 (factor -> ID .) ]
  ! GTH             [ reduce using rule 10 (factor -> ID .) ]
  ! LTH             [ reduce using rule 10 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 10 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 10 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 10 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 10 (factor -> ID .) ]
  ! $end            [ reduce using rule 10 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 10 (factor -> ID .) ]


state 33

    (19) expression -> expression MINUS term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor
    (23) term -> term . MODULO factor

    PLUS            reduce using rule 19 (expression -> expression MINUS term .)
    MINUS           reduce using rule 19 (expression -> expression MINUS term .)
    GTH             reduce using rule 19 (expression -> expression MINUS term .)
    LTH             reduce using rule 19 (expression -> expression MINUS term .)
    GTHOREQUAL      reduce using rule 19 (expression -> expression MINUS term .)
    LTHOREQUAL      reduce using rule 19 (expression -> expression MINUS term .)
    EQUALEQUAL      reduce using rule 19 (expression -> expression MINUS term .)
    NOTEQUAL        reduce using rule 19 (expression -> expression MINUS term .)
    $end            reduce using rule 19 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 19 (expression -> expression MINUS term .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25


state 34

    (11) comparison -> expression GTH expression .
    (18) expression -> expression . PLUS term
    (19) expression -> expression . MINUS term

    $end            reduce using rule 11 (comparison -> expression GTH expression .)
    RPAREN          reduce using rule 11 (comparison -> expression GTH expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 35

    (12) comparison -> expression LTH expression .
    (18) expression -> expression . PLUS term
    (19) expression -> expression . MINUS term

    $end            reduce using rule 12 (comparison -> expression LTH expression .)
    RPAREN          reduce using rule 12 (comparison -> expression LTH expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 36

    (13) comparison -> expression GTHOREQUAL expression .
    (18) expression -> expression . PLUS term
    (19) expression -> expression . MINUS term

    $end            reduce using rule 13 (comparison -> expression GTHOREQUAL expression .)
    RPAREN          reduce using rule 13 (comparison -> expression GTHOREQUAL expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 37

    (14) comparison -> expression LTHOREQUAL expression .
    (18) expression -> expression . PLUS term
    (19) expression -> expression . MINUS term

    $end            reduce using rule 14 (comparison -> expression LTHOREQUAL expression .)
    RPAREN          reduce using rule 14 (comparison -> expression LTHOREQUAL expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 38

    (15) comparison -> expression EQUALEQUAL expression .
    (18) expression -> expression . PLUS term
    (19) expression -> expression . MINUS term

    $end            reduce using rule 15 (comparison -> expression EQUALEQUAL expression .)
    RPAREN          reduce using rule 15 (comparison -> expression EQUALEQUAL expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 39

    (16) comparison -> expression NOTEQUAL expression .
    (18) expression -> expression . PLUS term
    (19) expression -> expression . MINUS term

    $end            reduce using rule 16 (comparison -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 16 (comparison -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 40

    (21) term -> term TIMES factor .

    TIMES           reduce using rule 21 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 21 (term -> term TIMES factor .)
    MODULO          reduce using rule 21 (term -> term TIMES factor .)
    PLUS            reduce using rule 21 (term -> term TIMES factor .)
    MINUS           reduce using rule 21 (term -> term TIMES factor .)
    GTH             reduce using rule 21 (term -> term TIMES factor .)
    LTH             reduce using rule 21 (term -> term TIMES factor .)
    GTHOREQUAL      reduce using rule 21 (term -> term TIMES factor .)
    LTHOREQUAL      reduce using rule 21 (term -> term TIMES factor .)
    EQUALEQUAL      reduce using rule 21 (term -> term TIMES factor .)
    NOTEQUAL        reduce using rule 21 (term -> term TIMES factor .)
    $end            reduce using rule 21 (term -> term TIMES factor .)
    RPAREN          reduce using rule 21 (term -> term TIMES factor .)


state 41

    (10) factor -> ID .

    TIMES           reduce using rule 10 (factor -> ID .)
    DIVIDE          reduce using rule 10 (factor -> ID .)
    MODULO          reduce using rule 10 (factor -> ID .)
    PLUS            reduce using rule 10 (factor -> ID .)
    MINUS           reduce using rule 10 (factor -> ID .)
    GTH             reduce using rule 10 (factor -> ID .)
    LTH             reduce using rule 10 (factor -> ID .)
    GTHOREQUAL      reduce using rule 10 (factor -> ID .)
    LTHOREQUAL      reduce using rule 10 (factor -> ID .)
    EQUALEQUAL      reduce using rule 10 (factor -> ID .)
    NOTEQUAL        reduce using rule 10 (factor -> ID .)
    $end            reduce using rule 10 (factor -> ID .)
    RPAREN          reduce using rule 10 (factor -> ID .)


state 42

    (22) term -> term DIVIDE factor .

    TIMES           reduce using rule 22 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 22 (term -> term DIVIDE factor .)
    MODULO          reduce using rule 22 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 22 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 22 (term -> term DIVIDE factor .)
    GTH             reduce using rule 22 (term -> term DIVIDE factor .)
    LTH             reduce using rule 22 (term -> term DIVIDE factor .)
    GTHOREQUAL      reduce using rule 22 (term -> term DIVIDE factor .)
    LTHOREQUAL      reduce using rule 22 (term -> term DIVIDE factor .)
    EQUALEQUAL      reduce using rule 22 (term -> term DIVIDE factor .)
    NOTEQUAL        reduce using rule 22 (term -> term DIVIDE factor .)
    $end            reduce using rule 22 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 22 (term -> term DIVIDE factor .)


state 43

    (23) term -> term MODULO factor .

    TIMES           reduce using rule 23 (term -> term MODULO factor .)
    DIVIDE          reduce using rule 23 (term -> term MODULO factor .)
    MODULO          reduce using rule 23 (term -> term MODULO factor .)
    PLUS            reduce using rule 23 (term -> term MODULO factor .)
    MINUS           reduce using rule 23 (term -> term MODULO factor .)
    GTH             reduce using rule 23 (term -> term MODULO factor .)
    LTH             reduce using rule 23 (term -> term MODULO factor .)
    GTHOREQUAL      reduce using rule 23 (term -> term MODULO factor .)
    LTHOREQUAL      reduce using rule 23 (term -> term MODULO factor .)
    EQUALEQUAL      reduce using rule 23 (term -> term MODULO factor .)
    NOTEQUAL        reduce using rule 23 (term -> term MODULO factor .)
    $end            reduce using rule 23 (term -> term MODULO factor .)
    RPAREN          reduce using rule 23 (term -> term MODULO factor .)


state 44

    (17) if_statement -> IF LPAREN comparison . RPAREN

    RPAREN          shift and go to state 50


state 45

    (11) comparison -> expression . GTH expression
    (12) comparison -> expression . LTH expression
    (13) comparison -> expression . GTHOREQUAL expression
    (14) comparison -> expression . LTHOREQUAL expression
    (15) comparison -> expression . EQUALEQUAL expression
    (16) comparison -> expression . NOTEQUAL expression
    (18) expression -> expression . PLUS term
    (19) expression -> expression . MINUS term

    GTH             shift and go to state 17
    LTH             shift and go to state 18
    GTHOREQUAL      shift and go to state 19
    LTHOREQUAL      shift and go to state 20
    EQUALEQUAL      shift and go to state 21
    NOTEQUAL        shift and go to state 22
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 46

    (26) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GTH             reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LTH             reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GTHOREQUAL      reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LTHOREQUAL      reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    EQUALEQUAL      reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 26 (factor -> LPAREN expression RPAREN .)


state 47

    (5) var_statement -> CHAR ID EQUALS . STRING SEMICOL

    STRING          shift and go to state 51


state 48

    (6) var_statement -> FLOATTYPE ID EQUALS . NUMBER SEMICOL

    NUMBER          shift and go to state 52


state 49

    (7) var_statement -> INT ID EQUALS . NUMBER SEMICOL

    NUMBER          shift and go to state 53


state 50

    (17) if_statement -> IF LPAREN comparison RPAREN .

    $end            reduce using rule 17 (if_statement -> IF LPAREN comparison RPAREN .)


state 51

    (5) var_statement -> CHAR ID EQUALS STRING . SEMICOL

    SEMICOL         shift and go to state 54


state 52

    (6) var_statement -> FLOATTYPE ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 55


state 53

    (7) var_statement -> INT ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 56


state 54

    (5) var_statement -> CHAR ID EQUALS STRING SEMICOL .

    $end            reduce using rule 5 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)


state 55

    (6) var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .

    $end            reduce using rule 6 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)


state 56

    (7) var_statement -> INT ID EQUALS NUMBER SEMICOL .

    $end            reduce using rule 7 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 6 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 6
WARNING: reduce/reduce conflict in state 6 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 6
WARNING: reduce/reduce conflict in state 6 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 6
WARNING: reduce/reduce conflict in state 32 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 32
