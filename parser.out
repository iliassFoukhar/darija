Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    CONST
    CONTINUE
    DEFAULT
    DO
    DOUBLE
    ENUM
    EXTERN
    FLOAT_CONST
    FOR
    GOTO
    INT_CONST
    LONG
    REGISTER
    RETURN
    SHORT
    SIGNED
    SIZEOF
    STATIC
    STRUCT
    SWITCH
    TYPEDEF
    UNION
    UNSIGNED
    VOID
    VOLATILE

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     print_statement -> PRINT LPAREN expression RPAREN SEMICOL
Rule 4     print_statement -> PRINT LPAREN STRING RPAREN SEMICOL
Rule 5     statement -> expression SEMICOL
Rule 6     statement -> while_statement
Rule 7     statement -> if_statement
Rule 8     statement -> comparison
Rule 9     statement -> var_statement
Rule 10    statement -> var_assign
Rule 11    statement -> var_inc
Rule 12    statement -> print_statement
Rule 13    var_assign -> ID EQUALS ID SEMICOL
Rule 14    var_assign -> ID EQUALS STRING SEMICOL
Rule 15    var_assign -> ID EQUALS NUMBER SEMICOL
Rule 16    var_inc -> ID PLUS PLUS SEMICOL
Rule 17    var_statement -> CHAR ID EQUALS STRING SEMICOL
Rule 18    var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL
Rule 19    var_statement -> INT ID EQUALS NUMBER SEMICOL
Rule 20    expression -> ID
Rule 21    term -> ID
Rule 22    factor -> ID
Rule 23    comparison -> expression GTH expression
Rule 24    comparison -> expression LTH expression
Rule 25    comparison -> expression GTHOREQUAL expression
Rule 26    comparison -> expression LTHOREQUAL expression
Rule 27    comparison -> expression EQUALEQUAL expression
Rule 28    comparison -> expression NOTEQUAL expression
Rule 29    if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE
Rule 30    if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 31    while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
Rule 32    expression -> expression PLUS term
Rule 33    expression -> expression MINUS term
Rule 34    expression -> term
Rule 35    term -> term TIMES factor
Rule 36    term -> term DIVIDE factor
Rule 37    term -> term MODULO factor
Rule 38    term -> factor
Rule 39    factor -> NUMBER
Rule 40    factor -> LPAREN expression RPAREN
Rule 41    empty -> <empty>

Terminals, with rules where they appear

BREAK                : 
CASE                 : 
CHAR                 : 17
CONST                : 
CONTINUE             : 
DEFAULT              : 
DIVIDE               : 36
DO                   : 
DOUBLE               : 
ELSE                 : 30
ENUM                 : 
EQUALEQUAL           : 27
EQUALS               : 13 14 15 17 18 19
EXTERN               : 
FLOATTYPE            : 18
FLOAT_CONST          : 
FOR                  : 
GOTO                 : 
GTH                  : 23
GTHOREQUAL           : 25
ID                   : 13 13 14 15 16 17 18 19 20 21 22
IF                   : 29 30
INT                  : 19
INT_CONST            : 
LBRACE               : 29 30 30 31
LONG                 : 
LPAREN               : 3 4 29 30 31 40
LTH                  : 24
LTHOREQUAL           : 26
MINUS                : 33
MODULO               : 37
NOTEQUAL             : 28
NUMBER               : 15 18 19 39
PLUS                 : 16 16 32
PRINT                : 3 4
RBRACE               : 29 30 30 31
REGISTER             : 
RETURN               : 
RPAREN               : 3 4 29 30 31 40
SEMICOL              : 3 4 5 13 14 15 16 17 18 19
SHORT                : 
SIGNED               : 
SIZEOF               : 
STATIC               : 
STRING               : 4 14 17
STRUCT               : 
SWITCH               : 
TIMES                : 35
TYPEDEF              : 
UNION                : 
UNSIGNED             : 
VOID                 : 
VOLATILE             : 
WHILE                : 31
error                : 

Nonterminals, with rules where they appear

comparison           : 8 29 30 31
empty                : 
expression           : 3 5 23 23 24 24 25 25 26 26 27 27 28 28 32 33 40
factor               : 35 36 37 38
if_statement         : 7
print_statement      : 12
statement            : 1 2
statements           : 1 29 30 30 31 0
term                 : 32 33 34 35 36 37
var_assign           : 10
var_inc              : 11
var_statement        : 9
while_statement      : 6

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . comparison
    (9) statement -> . var_statement
    (10) statement -> . var_assign
    (11) statement -> . var_inc
    (12) statement -> . print_statement
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (31) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (29) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (30) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (23) comparison -> . expression GTH expression
    (24) comparison -> . expression LTH expression
    (25) comparison -> . expression GTHOREQUAL expression
    (26) comparison -> . expression LTHOREQUAL expression
    (27) comparison -> . expression EQUALEQUAL expression
    (28) comparison -> . expression NOTEQUAL expression
    (17) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (18) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (19) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (13) var_assign -> . ID EQUALS ID SEMICOL
    (14) var_assign -> . ID EQUALS STRING SEMICOL
    (15) var_assign -> . ID EQUALS NUMBER SEMICOL
    (16) var_inc -> . ID PLUS PLUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    CHAR            shift and go to state 16
    FLOATTYPE       shift and go to state 17
    INT             shift and go to state 19
    PRINT           shift and go to state 20
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    comparison                     shift and go to state 6
    var_statement                  shift and go to state 7
    var_assign                     shift and go to state 8
    var_inc                        shift and go to state 9
    print_statement                shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . comparison
    (9) statement -> . var_statement
    (10) statement -> . var_assign
    (11) statement -> . var_inc
    (12) statement -> . print_statement
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (31) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (29) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (30) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (23) comparison -> . expression GTH expression
    (24) comparison -> . expression LTH expression
    (25) comparison -> . expression GTHOREQUAL expression
    (26) comparison -> . expression LTHOREQUAL expression
    (27) comparison -> . expression EQUALEQUAL expression
    (28) comparison -> . expression NOTEQUAL expression
    (17) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (18) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (19) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (13) var_assign -> . ID EQUALS ID SEMICOL
    (14) var_assign -> . ID EQUALS STRING SEMICOL
    (15) var_assign -> . ID EQUALS NUMBER SEMICOL
    (16) var_inc -> . ID PLUS PLUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    CHAR            shift and go to state 16
    FLOATTYPE       shift and go to state 17
    INT             shift and go to state 19
    PRINT           shift and go to state 20
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    statement                      shift and go to state 22
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    comparison                     shift and go to state 6
    var_statement                  shift and go to state 7
    var_assign                     shift and go to state 8
    var_inc                        shift and go to state 9
    print_statement                shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 2

    (2) statements -> statement .

    ID              reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    CHAR            reduce using rule 2 (statements -> statement .)
    FLOATTYPE       reduce using rule 2 (statements -> statement .)
    INT             reduce using rule 2 (statements -> statement .)
    PRINT           reduce using rule 2 (statements -> statement .)
    NUMBER          reduce using rule 2 (statements -> statement .)
    LPAREN          reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    RBRACE          reduce using rule 2 (statements -> statement .)


state 3

    (5) statement -> expression . SEMICOL
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term
    (23) comparison -> expression . GTH expression
    (24) comparison -> expression . LTH expression
    (25) comparison -> expression . GTHOREQUAL expression
    (26) comparison -> expression . LTHOREQUAL expression
    (27) comparison -> expression . EQUALEQUAL expression
    (28) comparison -> expression . NOTEQUAL expression

    SEMICOL         shift and go to state 23
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25
    GTH             shift and go to state 26
    LTH             shift and go to state 27
    GTHOREQUAL      shift and go to state 28
    LTHOREQUAL      shift and go to state 29
    EQUALEQUAL      shift and go to state 30
    NOTEQUAL        shift and go to state 31


state 4

    (6) statement -> while_statement .

    ID              reduce using rule 6 (statement -> while_statement .)
    WHILE           reduce using rule 6 (statement -> while_statement .)
    IF              reduce using rule 6 (statement -> while_statement .)
    CHAR            reduce using rule 6 (statement -> while_statement .)
    FLOATTYPE       reduce using rule 6 (statement -> while_statement .)
    INT             reduce using rule 6 (statement -> while_statement .)
    PRINT           reduce using rule 6 (statement -> while_statement .)
    NUMBER          reduce using rule 6 (statement -> while_statement .)
    LPAREN          reduce using rule 6 (statement -> while_statement .)
    $end            reduce using rule 6 (statement -> while_statement .)
    RBRACE          reduce using rule 6 (statement -> while_statement .)


state 5

    (7) statement -> if_statement .

    ID              reduce using rule 7 (statement -> if_statement .)
    WHILE           reduce using rule 7 (statement -> if_statement .)
    IF              reduce using rule 7 (statement -> if_statement .)
    CHAR            reduce using rule 7 (statement -> if_statement .)
    FLOATTYPE       reduce using rule 7 (statement -> if_statement .)
    INT             reduce using rule 7 (statement -> if_statement .)
    PRINT           reduce using rule 7 (statement -> if_statement .)
    NUMBER          reduce using rule 7 (statement -> if_statement .)
    LPAREN          reduce using rule 7 (statement -> if_statement .)
    $end            reduce using rule 7 (statement -> if_statement .)
    RBRACE          reduce using rule 7 (statement -> if_statement .)


state 6

    (8) statement -> comparison .

    ID              reduce using rule 8 (statement -> comparison .)
    WHILE           reduce using rule 8 (statement -> comparison .)
    IF              reduce using rule 8 (statement -> comparison .)
    CHAR            reduce using rule 8 (statement -> comparison .)
    FLOATTYPE       reduce using rule 8 (statement -> comparison .)
    INT             reduce using rule 8 (statement -> comparison .)
    PRINT           reduce using rule 8 (statement -> comparison .)
    NUMBER          reduce using rule 8 (statement -> comparison .)
    LPAREN          reduce using rule 8 (statement -> comparison .)
    $end            reduce using rule 8 (statement -> comparison .)
    RBRACE          reduce using rule 8 (statement -> comparison .)


state 7

    (9) statement -> var_statement .

    ID              reduce using rule 9 (statement -> var_statement .)
    WHILE           reduce using rule 9 (statement -> var_statement .)
    IF              reduce using rule 9 (statement -> var_statement .)
    CHAR            reduce using rule 9 (statement -> var_statement .)
    FLOATTYPE       reduce using rule 9 (statement -> var_statement .)
    INT             reduce using rule 9 (statement -> var_statement .)
    PRINT           reduce using rule 9 (statement -> var_statement .)
    NUMBER          reduce using rule 9 (statement -> var_statement .)
    LPAREN          reduce using rule 9 (statement -> var_statement .)
    $end            reduce using rule 9 (statement -> var_statement .)
    RBRACE          reduce using rule 9 (statement -> var_statement .)


state 8

    (10) statement -> var_assign .

    ID              reduce using rule 10 (statement -> var_assign .)
    WHILE           reduce using rule 10 (statement -> var_assign .)
    IF              reduce using rule 10 (statement -> var_assign .)
    CHAR            reduce using rule 10 (statement -> var_assign .)
    FLOATTYPE       reduce using rule 10 (statement -> var_assign .)
    INT             reduce using rule 10 (statement -> var_assign .)
    PRINT           reduce using rule 10 (statement -> var_assign .)
    NUMBER          reduce using rule 10 (statement -> var_assign .)
    LPAREN          reduce using rule 10 (statement -> var_assign .)
    $end            reduce using rule 10 (statement -> var_assign .)
    RBRACE          reduce using rule 10 (statement -> var_assign .)


state 9

    (11) statement -> var_inc .

    ID              reduce using rule 11 (statement -> var_inc .)
    WHILE           reduce using rule 11 (statement -> var_inc .)
    IF              reduce using rule 11 (statement -> var_inc .)
    CHAR            reduce using rule 11 (statement -> var_inc .)
    FLOATTYPE       reduce using rule 11 (statement -> var_inc .)
    INT             reduce using rule 11 (statement -> var_inc .)
    PRINT           reduce using rule 11 (statement -> var_inc .)
    NUMBER          reduce using rule 11 (statement -> var_inc .)
    LPAREN          reduce using rule 11 (statement -> var_inc .)
    $end            reduce using rule 11 (statement -> var_inc .)
    RBRACE          reduce using rule 11 (statement -> var_inc .)


state 10

    (12) statement -> print_statement .

    ID              reduce using rule 12 (statement -> print_statement .)
    WHILE           reduce using rule 12 (statement -> print_statement .)
    IF              reduce using rule 12 (statement -> print_statement .)
    CHAR            reduce using rule 12 (statement -> print_statement .)
    FLOATTYPE       reduce using rule 12 (statement -> print_statement .)
    INT             reduce using rule 12 (statement -> print_statement .)
    PRINT           reduce using rule 12 (statement -> print_statement .)
    NUMBER          reduce using rule 12 (statement -> print_statement .)
    LPAREN          reduce using rule 12 (statement -> print_statement .)
    $end            reduce using rule 12 (statement -> print_statement .)
    RBRACE          reduce using rule 12 (statement -> print_statement .)


state 11

    (20) expression -> ID .
    (13) var_assign -> ID . EQUALS ID SEMICOL
    (14) var_assign -> ID . EQUALS STRING SEMICOL
    (15) var_assign -> ID . EQUALS NUMBER SEMICOL
    (16) var_inc -> ID . PLUS PLUS SEMICOL
    (21) term -> ID .
    (22) factor -> ID .

  ! shift/reduce conflict for PLUS resolved as shift
  ! reduce/reduce conflict for SEMICOL resolved using rule 20 (expression -> ID .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! reduce/reduce conflict for MINUS resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 20 (expression -> ID .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! reduce/reduce conflict for MINUS resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 20 (expression -> ID .)
    SEMICOL         reduce using rule 20 (expression -> ID .)
    MINUS           reduce using rule 20 (expression -> ID .)
    GTH             reduce using rule 20 (expression -> ID .)
    LTH             reduce using rule 20 (expression -> ID .)
    GTHOREQUAL      reduce using rule 20 (expression -> ID .)
    LTHOREQUAL      reduce using rule 20 (expression -> ID .)
    EQUALEQUAL      reduce using rule 20 (expression -> ID .)
    NOTEQUAL        reduce using rule 20 (expression -> ID .)
    EQUALS          shift and go to state 32
    PLUS            shift and go to state 33
    TIMES           reduce using rule 21 (term -> ID .)
    DIVIDE          reduce using rule 21 (term -> ID .)
    MODULO          reduce using rule 21 (term -> ID .)

  ! PLUS            [ reduce using rule 20 (expression -> ID .) ]
  ! SEMICOL         [ reduce using rule 21 (term -> ID .) ]
  ! PLUS            [ reduce using rule 21 (term -> ID .) ]
  ! MINUS           [ reduce using rule 21 (term -> ID .) ]
  ! GTH             [ reduce using rule 21 (term -> ID .) ]
  ! LTH             [ reduce using rule 21 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 21 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 21 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 21 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 21 (term -> ID .) ]
  ! TIMES           [ reduce using rule 22 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 22 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 22 (factor -> ID .) ]
  ! SEMICOL         [ reduce using rule 22 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 22 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 22 (factor -> ID .) ]
  ! GTH             [ reduce using rule 22 (factor -> ID .) ]
  ! LTH             [ reduce using rule 22 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 22 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 22 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 22 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 22 (factor -> ID .) ]


state 12

    (34) expression -> term .
    (35) term -> term . TIMES factor
    (36) term -> term . DIVIDE factor
    (37) term -> term . MODULO factor

    SEMICOL         reduce using rule 34 (expression -> term .)
    PLUS            reduce using rule 34 (expression -> term .)
    MINUS           reduce using rule 34 (expression -> term .)
    GTH             reduce using rule 34 (expression -> term .)
    LTH             reduce using rule 34 (expression -> term .)
    GTHOREQUAL      reduce using rule 34 (expression -> term .)
    LTHOREQUAL      reduce using rule 34 (expression -> term .)
    EQUALEQUAL      reduce using rule 34 (expression -> term .)
    NOTEQUAL        reduce using rule 34 (expression -> term .)
    RPAREN          reduce using rule 34 (expression -> term .)
    ID              reduce using rule 34 (expression -> term .)
    WHILE           reduce using rule 34 (expression -> term .)
    IF              reduce using rule 34 (expression -> term .)
    CHAR            reduce using rule 34 (expression -> term .)
    FLOATTYPE       reduce using rule 34 (expression -> term .)
    INT             reduce using rule 34 (expression -> term .)
    PRINT           reduce using rule 34 (expression -> term .)
    NUMBER          reduce using rule 34 (expression -> term .)
    LPAREN          reduce using rule 34 (expression -> term .)
    $end            reduce using rule 34 (expression -> term .)
    RBRACE          reduce using rule 34 (expression -> term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULO          shift and go to state 36


state 13

    (31) while_statement -> WHILE . LPAREN comparison RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 37


state 14

    (40) factor -> LPAREN . expression RPAREN
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 39
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    expression                     shift and go to state 38
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 15

    (29) if_statement -> IF . LPAREN comparison RPAREN LBRACE statements RBRACE
    (30) if_statement -> IF . LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LPAREN          shift and go to state 40


state 16

    (17) var_statement -> CHAR . ID EQUALS STRING SEMICOL

    ID              shift and go to state 41


state 17

    (18) var_statement -> FLOATTYPE . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 42


state 18

    (39) factor -> NUMBER .

    TIMES           reduce using rule 39 (factor -> NUMBER .)
    DIVIDE          reduce using rule 39 (factor -> NUMBER .)
    MODULO          reduce using rule 39 (factor -> NUMBER .)
    SEMICOL         reduce using rule 39 (factor -> NUMBER .)
    PLUS            reduce using rule 39 (factor -> NUMBER .)
    MINUS           reduce using rule 39 (factor -> NUMBER .)
    GTH             reduce using rule 39 (factor -> NUMBER .)
    LTH             reduce using rule 39 (factor -> NUMBER .)
    GTHOREQUAL      reduce using rule 39 (factor -> NUMBER .)
    LTHOREQUAL      reduce using rule 39 (factor -> NUMBER .)
    EQUALEQUAL      reduce using rule 39 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 39 (factor -> NUMBER .)
    RPAREN          reduce using rule 39 (factor -> NUMBER .)
    ID              reduce using rule 39 (factor -> NUMBER .)
    WHILE           reduce using rule 39 (factor -> NUMBER .)
    IF              reduce using rule 39 (factor -> NUMBER .)
    CHAR            reduce using rule 39 (factor -> NUMBER .)
    FLOATTYPE       reduce using rule 39 (factor -> NUMBER .)
    INT             reduce using rule 39 (factor -> NUMBER .)
    PRINT           reduce using rule 39 (factor -> NUMBER .)
    NUMBER          reduce using rule 39 (factor -> NUMBER .)
    LPAREN          reduce using rule 39 (factor -> NUMBER .)
    $end            reduce using rule 39 (factor -> NUMBER .)
    RBRACE          reduce using rule 39 (factor -> NUMBER .)


state 19

    (19) var_statement -> INT . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 43


state 20

    (3) print_statement -> PRINT . LPAREN expression RPAREN SEMICOL
    (4) print_statement -> PRINT . LPAREN STRING RPAREN SEMICOL

    LPAREN          shift and go to state 44


state 21

    (38) term -> factor .

    TIMES           reduce using rule 38 (term -> factor .)
    DIVIDE          reduce using rule 38 (term -> factor .)
    MODULO          reduce using rule 38 (term -> factor .)
    SEMICOL         reduce using rule 38 (term -> factor .)
    PLUS            reduce using rule 38 (term -> factor .)
    MINUS           reduce using rule 38 (term -> factor .)
    GTH             reduce using rule 38 (term -> factor .)
    LTH             reduce using rule 38 (term -> factor .)
    GTHOREQUAL      reduce using rule 38 (term -> factor .)
    LTHOREQUAL      reduce using rule 38 (term -> factor .)
    EQUALEQUAL      reduce using rule 38 (term -> factor .)
    NOTEQUAL        reduce using rule 38 (term -> factor .)
    RPAREN          reduce using rule 38 (term -> factor .)
    ID              reduce using rule 38 (term -> factor .)
    WHILE           reduce using rule 38 (term -> factor .)
    IF              reduce using rule 38 (term -> factor .)
    CHAR            reduce using rule 38 (term -> factor .)
    FLOATTYPE       reduce using rule 38 (term -> factor .)
    INT             reduce using rule 38 (term -> factor .)
    PRINT           reduce using rule 38 (term -> factor .)
    NUMBER          reduce using rule 38 (term -> factor .)
    LPAREN          reduce using rule 38 (term -> factor .)
    $end            reduce using rule 38 (term -> factor .)
    RBRACE          reduce using rule 38 (term -> factor .)


state 22

    (1) statements -> statements statement .

    ID              reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    CHAR            reduce using rule 1 (statements -> statements statement .)
    FLOATTYPE       reduce using rule 1 (statements -> statements statement .)
    INT             reduce using rule 1 (statements -> statements statement .)
    PRINT           reduce using rule 1 (statements -> statements statement .)
    NUMBER          reduce using rule 1 (statements -> statements statement .)
    LPAREN          reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    RBRACE          reduce using rule 1 (statements -> statements statement .)


state 23

    (5) statement -> expression SEMICOL .

    ID              reduce using rule 5 (statement -> expression SEMICOL .)
    WHILE           reduce using rule 5 (statement -> expression SEMICOL .)
    IF              reduce using rule 5 (statement -> expression SEMICOL .)
    CHAR            reduce using rule 5 (statement -> expression SEMICOL .)
    FLOATTYPE       reduce using rule 5 (statement -> expression SEMICOL .)
    INT             reduce using rule 5 (statement -> expression SEMICOL .)
    PRINT           reduce using rule 5 (statement -> expression SEMICOL .)
    NUMBER          reduce using rule 5 (statement -> expression SEMICOL .)
    LPAREN          reduce using rule 5 (statement -> expression SEMICOL .)
    $end            reduce using rule 5 (statement -> expression SEMICOL .)
    RBRACE          reduce using rule 5 (statement -> expression SEMICOL .)


state 24

    (32) expression -> expression PLUS . term
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 46
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    term                           shift and go to state 45
    factor                         shift and go to state 21

state 25

    (33) expression -> expression MINUS . term
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 46
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    term                           shift and go to state 47
    factor                         shift and go to state 21

state 26

    (23) comparison -> expression GTH . expression
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 39
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    expression                     shift and go to state 48
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 27

    (24) comparison -> expression LTH . expression
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 39
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    expression                     shift and go to state 49
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 28

    (25) comparison -> expression GTHOREQUAL . expression
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 39
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    expression                     shift and go to state 50
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 29

    (26) comparison -> expression LTHOREQUAL . expression
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 39
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    expression                     shift and go to state 51
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 30

    (27) comparison -> expression EQUALEQUAL . expression
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 39
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    expression                     shift and go to state 52
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 31

    (28) comparison -> expression NOTEQUAL . expression
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 39
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    expression                     shift and go to state 53
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 32

    (13) var_assign -> ID EQUALS . ID SEMICOL
    (14) var_assign -> ID EQUALS . STRING SEMICOL
    (15) var_assign -> ID EQUALS . NUMBER SEMICOL

    ID              shift and go to state 54
    STRING          shift and go to state 55
    NUMBER          shift and go to state 56


state 33

    (16) var_inc -> ID PLUS . PLUS SEMICOL

    PLUS            shift and go to state 57


state 34

    (35) term -> term TIMES . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    factor                         shift and go to state 58

state 35

    (36) term -> term DIVIDE . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    factor                         shift and go to state 60

state 36

    (37) term -> term MODULO . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    factor                         shift and go to state 61

state 37

    (31) while_statement -> WHILE LPAREN . comparison RPAREN LBRACE statements RBRACE
    (23) comparison -> . expression GTH expression
    (24) comparison -> . expression LTH expression
    (25) comparison -> . expression GTHOREQUAL expression
    (26) comparison -> . expression LTHOREQUAL expression
    (27) comparison -> . expression EQUALEQUAL expression
    (28) comparison -> . expression NOTEQUAL expression
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 39
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    comparison                     shift and go to state 62
    expression                     shift and go to state 63
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 38

    (40) factor -> LPAREN expression . RPAREN
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term

    RPAREN          shift and go to state 64
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 39

    (20) expression -> ID .
    (21) term -> ID .
    (22) factor -> ID .

  ! reduce/reduce conflict for RPAREN resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 20 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 20 (expression -> ID .)
    RPAREN          reduce using rule 20 (expression -> ID .)
    PLUS            reduce using rule 20 (expression -> ID .)
    MINUS           reduce using rule 20 (expression -> ID .)
    ID              reduce using rule 20 (expression -> ID .)
    WHILE           reduce using rule 20 (expression -> ID .)
    IF              reduce using rule 20 (expression -> ID .)
    CHAR            reduce using rule 20 (expression -> ID .)
    FLOATTYPE       reduce using rule 20 (expression -> ID .)
    INT             reduce using rule 20 (expression -> ID .)
    PRINT           reduce using rule 20 (expression -> ID .)
    NUMBER          reduce using rule 20 (expression -> ID .)
    LPAREN          reduce using rule 20 (expression -> ID .)
    $end            reduce using rule 20 (expression -> ID .)
    RBRACE          reduce using rule 20 (expression -> ID .)
    GTH             reduce using rule 20 (expression -> ID .)
    LTH             reduce using rule 20 (expression -> ID .)
    GTHOREQUAL      reduce using rule 20 (expression -> ID .)
    LTHOREQUAL      reduce using rule 20 (expression -> ID .)
    EQUALEQUAL      reduce using rule 20 (expression -> ID .)
    NOTEQUAL        reduce using rule 20 (expression -> ID .)
    TIMES           reduce using rule 21 (term -> ID .)
    DIVIDE          reduce using rule 21 (term -> ID .)
    MODULO          reduce using rule 21 (term -> ID .)

  ! RPAREN          [ reduce using rule 21 (term -> ID .) ]
  ! PLUS            [ reduce using rule 21 (term -> ID .) ]
  ! MINUS           [ reduce using rule 21 (term -> ID .) ]
  ! ID              [ reduce using rule 21 (term -> ID .) ]
  ! WHILE           [ reduce using rule 21 (term -> ID .) ]
  ! IF              [ reduce using rule 21 (term -> ID .) ]
  ! CHAR            [ reduce using rule 21 (term -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 21 (term -> ID .) ]
  ! INT             [ reduce using rule 21 (term -> ID .) ]
  ! PRINT           [ reduce using rule 21 (term -> ID .) ]
  ! NUMBER          [ reduce using rule 21 (term -> ID .) ]
  ! LPAREN          [ reduce using rule 21 (term -> ID .) ]
  ! $end            [ reduce using rule 21 (term -> ID .) ]
  ! RBRACE          [ reduce using rule 21 (term -> ID .) ]
  ! GTH             [ reduce using rule 21 (term -> ID .) ]
  ! LTH             [ reduce using rule 21 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 21 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 21 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 21 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 21 (term -> ID .) ]
  ! TIMES           [ reduce using rule 22 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 22 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 22 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 22 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 22 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 22 (factor -> ID .) ]
  ! ID              [ reduce using rule 22 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 22 (factor -> ID .) ]
  ! IF              [ reduce using rule 22 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 22 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 22 (factor -> ID .) ]
  ! INT             [ reduce using rule 22 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 22 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 22 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 22 (factor -> ID .) ]
  ! $end            [ reduce using rule 22 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 22 (factor -> ID .) ]
  ! GTH             [ reduce using rule 22 (factor -> ID .) ]
  ! LTH             [ reduce using rule 22 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 22 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 22 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 22 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 22 (factor -> ID .) ]


state 40

    (29) if_statement -> IF LPAREN . comparison RPAREN LBRACE statements RBRACE
    (30) if_statement -> IF LPAREN . comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (23) comparison -> . expression GTH expression
    (24) comparison -> . expression LTH expression
    (25) comparison -> . expression GTHOREQUAL expression
    (26) comparison -> . expression LTHOREQUAL expression
    (27) comparison -> . expression EQUALEQUAL expression
    (28) comparison -> . expression NOTEQUAL expression
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 39
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    comparison                     shift and go to state 65
    expression                     shift and go to state 63
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 41

    (17) var_statement -> CHAR ID . EQUALS STRING SEMICOL

    EQUALS          shift and go to state 66


state 42

    (18) var_statement -> FLOATTYPE ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 67


state 43

    (19) var_statement -> INT ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 68


state 44

    (3) print_statement -> PRINT LPAREN . expression RPAREN SEMICOL
    (4) print_statement -> PRINT LPAREN . STRING RPAREN SEMICOL
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    STRING          shift and go to state 70
    ID              shift and go to state 39
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    expression                     shift and go to state 69
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 45

    (32) expression -> expression PLUS term .
    (35) term -> term . TIMES factor
    (36) term -> term . DIVIDE factor
    (37) term -> term . MODULO factor

    SEMICOL         reduce using rule 32 (expression -> expression PLUS term .)
    PLUS            reduce using rule 32 (expression -> expression PLUS term .)
    MINUS           reduce using rule 32 (expression -> expression PLUS term .)
    GTH             reduce using rule 32 (expression -> expression PLUS term .)
    LTH             reduce using rule 32 (expression -> expression PLUS term .)
    GTHOREQUAL      reduce using rule 32 (expression -> expression PLUS term .)
    LTHOREQUAL      reduce using rule 32 (expression -> expression PLUS term .)
    EQUALEQUAL      reduce using rule 32 (expression -> expression PLUS term .)
    NOTEQUAL        reduce using rule 32 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 32 (expression -> expression PLUS term .)
    ID              reduce using rule 32 (expression -> expression PLUS term .)
    WHILE           reduce using rule 32 (expression -> expression PLUS term .)
    IF              reduce using rule 32 (expression -> expression PLUS term .)
    CHAR            reduce using rule 32 (expression -> expression PLUS term .)
    FLOATTYPE       reduce using rule 32 (expression -> expression PLUS term .)
    INT             reduce using rule 32 (expression -> expression PLUS term .)
    PRINT           reduce using rule 32 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 32 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 32 (expression -> expression PLUS term .)
    $end            reduce using rule 32 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 32 (expression -> expression PLUS term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULO          shift and go to state 36


state 46

    (21) term -> ID .
    (22) factor -> ID .

  ! reduce/reduce conflict for TIMES resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 21 (term -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 21 (term -> ID .)
    TIMES           reduce using rule 21 (term -> ID .)
    DIVIDE          reduce using rule 21 (term -> ID .)
    MODULO          reduce using rule 21 (term -> ID .)
    SEMICOL         reduce using rule 21 (term -> ID .)
    PLUS            reduce using rule 21 (term -> ID .)
    MINUS           reduce using rule 21 (term -> ID .)
    GTH             reduce using rule 21 (term -> ID .)
    LTH             reduce using rule 21 (term -> ID .)
    GTHOREQUAL      reduce using rule 21 (term -> ID .)
    LTHOREQUAL      reduce using rule 21 (term -> ID .)
    EQUALEQUAL      reduce using rule 21 (term -> ID .)
    NOTEQUAL        reduce using rule 21 (term -> ID .)
    RPAREN          reduce using rule 21 (term -> ID .)
    ID              reduce using rule 21 (term -> ID .)
    WHILE           reduce using rule 21 (term -> ID .)
    IF              reduce using rule 21 (term -> ID .)
    CHAR            reduce using rule 21 (term -> ID .)
    FLOATTYPE       reduce using rule 21 (term -> ID .)
    INT             reduce using rule 21 (term -> ID .)
    PRINT           reduce using rule 21 (term -> ID .)
    NUMBER          reduce using rule 21 (term -> ID .)
    LPAREN          reduce using rule 21 (term -> ID .)
    $end            reduce using rule 21 (term -> ID .)
    RBRACE          reduce using rule 21 (term -> ID .)

  ! TIMES           [ reduce using rule 22 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 22 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 22 (factor -> ID .) ]
  ! SEMICOL         [ reduce using rule 22 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 22 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 22 (factor -> ID .) ]
  ! GTH             [ reduce using rule 22 (factor -> ID .) ]
  ! LTH             [ reduce using rule 22 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 22 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 22 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 22 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 22 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 22 (factor -> ID .) ]
  ! ID              [ reduce using rule 22 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 22 (factor -> ID .) ]
  ! IF              [ reduce using rule 22 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 22 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 22 (factor -> ID .) ]
  ! INT             [ reduce using rule 22 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 22 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 22 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 22 (factor -> ID .) ]
  ! $end            [ reduce using rule 22 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 22 (factor -> ID .) ]


state 47

    (33) expression -> expression MINUS term .
    (35) term -> term . TIMES factor
    (36) term -> term . DIVIDE factor
    (37) term -> term . MODULO factor

    SEMICOL         reduce using rule 33 (expression -> expression MINUS term .)
    PLUS            reduce using rule 33 (expression -> expression MINUS term .)
    MINUS           reduce using rule 33 (expression -> expression MINUS term .)
    GTH             reduce using rule 33 (expression -> expression MINUS term .)
    LTH             reduce using rule 33 (expression -> expression MINUS term .)
    GTHOREQUAL      reduce using rule 33 (expression -> expression MINUS term .)
    LTHOREQUAL      reduce using rule 33 (expression -> expression MINUS term .)
    EQUALEQUAL      reduce using rule 33 (expression -> expression MINUS term .)
    NOTEQUAL        reduce using rule 33 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 33 (expression -> expression MINUS term .)
    ID              reduce using rule 33 (expression -> expression MINUS term .)
    WHILE           reduce using rule 33 (expression -> expression MINUS term .)
    IF              reduce using rule 33 (expression -> expression MINUS term .)
    CHAR            reduce using rule 33 (expression -> expression MINUS term .)
    FLOATTYPE       reduce using rule 33 (expression -> expression MINUS term .)
    INT             reduce using rule 33 (expression -> expression MINUS term .)
    PRINT           reduce using rule 33 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 33 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 33 (expression -> expression MINUS term .)
    $end            reduce using rule 33 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 33 (expression -> expression MINUS term .)
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 35
    MODULO          shift and go to state 36


state 48

    (23) comparison -> expression GTH expression .
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term

    ID              reduce using rule 23 (comparison -> expression GTH expression .)
    WHILE           reduce using rule 23 (comparison -> expression GTH expression .)
    IF              reduce using rule 23 (comparison -> expression GTH expression .)
    CHAR            reduce using rule 23 (comparison -> expression GTH expression .)
    FLOATTYPE       reduce using rule 23 (comparison -> expression GTH expression .)
    INT             reduce using rule 23 (comparison -> expression GTH expression .)
    PRINT           reduce using rule 23 (comparison -> expression GTH expression .)
    NUMBER          reduce using rule 23 (comparison -> expression GTH expression .)
    LPAREN          reduce using rule 23 (comparison -> expression GTH expression .)
    $end            reduce using rule 23 (comparison -> expression GTH expression .)
    RPAREN          reduce using rule 23 (comparison -> expression GTH expression .)
    RBRACE          reduce using rule 23 (comparison -> expression GTH expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 49

    (24) comparison -> expression LTH expression .
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term

    ID              reduce using rule 24 (comparison -> expression LTH expression .)
    WHILE           reduce using rule 24 (comparison -> expression LTH expression .)
    IF              reduce using rule 24 (comparison -> expression LTH expression .)
    CHAR            reduce using rule 24 (comparison -> expression LTH expression .)
    FLOATTYPE       reduce using rule 24 (comparison -> expression LTH expression .)
    INT             reduce using rule 24 (comparison -> expression LTH expression .)
    PRINT           reduce using rule 24 (comparison -> expression LTH expression .)
    NUMBER          reduce using rule 24 (comparison -> expression LTH expression .)
    LPAREN          reduce using rule 24 (comparison -> expression LTH expression .)
    $end            reduce using rule 24 (comparison -> expression LTH expression .)
    RPAREN          reduce using rule 24 (comparison -> expression LTH expression .)
    RBRACE          reduce using rule 24 (comparison -> expression LTH expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 50

    (25) comparison -> expression GTHOREQUAL expression .
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term

    ID              reduce using rule 25 (comparison -> expression GTHOREQUAL expression .)
    WHILE           reduce using rule 25 (comparison -> expression GTHOREQUAL expression .)
    IF              reduce using rule 25 (comparison -> expression GTHOREQUAL expression .)
    CHAR            reduce using rule 25 (comparison -> expression GTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 25 (comparison -> expression GTHOREQUAL expression .)
    INT             reduce using rule 25 (comparison -> expression GTHOREQUAL expression .)
    PRINT           reduce using rule 25 (comparison -> expression GTHOREQUAL expression .)
    NUMBER          reduce using rule 25 (comparison -> expression GTHOREQUAL expression .)
    LPAREN          reduce using rule 25 (comparison -> expression GTHOREQUAL expression .)
    $end            reduce using rule 25 (comparison -> expression GTHOREQUAL expression .)
    RPAREN          reduce using rule 25 (comparison -> expression GTHOREQUAL expression .)
    RBRACE          reduce using rule 25 (comparison -> expression GTHOREQUAL expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 51

    (26) comparison -> expression LTHOREQUAL expression .
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term

    ID              reduce using rule 26 (comparison -> expression LTHOREQUAL expression .)
    WHILE           reduce using rule 26 (comparison -> expression LTHOREQUAL expression .)
    IF              reduce using rule 26 (comparison -> expression LTHOREQUAL expression .)
    CHAR            reduce using rule 26 (comparison -> expression LTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 26 (comparison -> expression LTHOREQUAL expression .)
    INT             reduce using rule 26 (comparison -> expression LTHOREQUAL expression .)
    PRINT           reduce using rule 26 (comparison -> expression LTHOREQUAL expression .)
    NUMBER          reduce using rule 26 (comparison -> expression LTHOREQUAL expression .)
    LPAREN          reduce using rule 26 (comparison -> expression LTHOREQUAL expression .)
    $end            reduce using rule 26 (comparison -> expression LTHOREQUAL expression .)
    RPAREN          reduce using rule 26 (comparison -> expression LTHOREQUAL expression .)
    RBRACE          reduce using rule 26 (comparison -> expression LTHOREQUAL expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 52

    (27) comparison -> expression EQUALEQUAL expression .
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term

    ID              reduce using rule 27 (comparison -> expression EQUALEQUAL expression .)
    WHILE           reduce using rule 27 (comparison -> expression EQUALEQUAL expression .)
    IF              reduce using rule 27 (comparison -> expression EQUALEQUAL expression .)
    CHAR            reduce using rule 27 (comparison -> expression EQUALEQUAL expression .)
    FLOATTYPE       reduce using rule 27 (comparison -> expression EQUALEQUAL expression .)
    INT             reduce using rule 27 (comparison -> expression EQUALEQUAL expression .)
    PRINT           reduce using rule 27 (comparison -> expression EQUALEQUAL expression .)
    NUMBER          reduce using rule 27 (comparison -> expression EQUALEQUAL expression .)
    LPAREN          reduce using rule 27 (comparison -> expression EQUALEQUAL expression .)
    $end            reduce using rule 27 (comparison -> expression EQUALEQUAL expression .)
    RPAREN          reduce using rule 27 (comparison -> expression EQUALEQUAL expression .)
    RBRACE          reduce using rule 27 (comparison -> expression EQUALEQUAL expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 53

    (28) comparison -> expression NOTEQUAL expression .
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term

    ID              reduce using rule 28 (comparison -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 28 (comparison -> expression NOTEQUAL expression .)
    IF              reduce using rule 28 (comparison -> expression NOTEQUAL expression .)
    CHAR            reduce using rule 28 (comparison -> expression NOTEQUAL expression .)
    FLOATTYPE       reduce using rule 28 (comparison -> expression NOTEQUAL expression .)
    INT             reduce using rule 28 (comparison -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 28 (comparison -> expression NOTEQUAL expression .)
    NUMBER          reduce using rule 28 (comparison -> expression NOTEQUAL expression .)
    LPAREN          reduce using rule 28 (comparison -> expression NOTEQUAL expression .)
    $end            reduce using rule 28 (comparison -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 28 (comparison -> expression NOTEQUAL expression .)
    RBRACE          reduce using rule 28 (comparison -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 54

    (13) var_assign -> ID EQUALS ID . SEMICOL

    SEMICOL         shift and go to state 71


state 55

    (14) var_assign -> ID EQUALS STRING . SEMICOL

    SEMICOL         shift and go to state 72


state 56

    (15) var_assign -> ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 73


state 57

    (16) var_inc -> ID PLUS PLUS . SEMICOL

    SEMICOL         shift and go to state 74


state 58

    (35) term -> term TIMES factor .

    TIMES           reduce using rule 35 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 35 (term -> term TIMES factor .)
    MODULO          reduce using rule 35 (term -> term TIMES factor .)
    SEMICOL         reduce using rule 35 (term -> term TIMES factor .)
    PLUS            reduce using rule 35 (term -> term TIMES factor .)
    MINUS           reduce using rule 35 (term -> term TIMES factor .)
    GTH             reduce using rule 35 (term -> term TIMES factor .)
    LTH             reduce using rule 35 (term -> term TIMES factor .)
    GTHOREQUAL      reduce using rule 35 (term -> term TIMES factor .)
    LTHOREQUAL      reduce using rule 35 (term -> term TIMES factor .)
    EQUALEQUAL      reduce using rule 35 (term -> term TIMES factor .)
    NOTEQUAL        reduce using rule 35 (term -> term TIMES factor .)
    RPAREN          reduce using rule 35 (term -> term TIMES factor .)
    ID              reduce using rule 35 (term -> term TIMES factor .)
    WHILE           reduce using rule 35 (term -> term TIMES factor .)
    IF              reduce using rule 35 (term -> term TIMES factor .)
    CHAR            reduce using rule 35 (term -> term TIMES factor .)
    FLOATTYPE       reduce using rule 35 (term -> term TIMES factor .)
    INT             reduce using rule 35 (term -> term TIMES factor .)
    PRINT           reduce using rule 35 (term -> term TIMES factor .)
    NUMBER          reduce using rule 35 (term -> term TIMES factor .)
    LPAREN          reduce using rule 35 (term -> term TIMES factor .)
    $end            reduce using rule 35 (term -> term TIMES factor .)
    RBRACE          reduce using rule 35 (term -> term TIMES factor .)


state 59

    (22) factor -> ID .

    TIMES           reduce using rule 22 (factor -> ID .)
    DIVIDE          reduce using rule 22 (factor -> ID .)
    MODULO          reduce using rule 22 (factor -> ID .)
    SEMICOL         reduce using rule 22 (factor -> ID .)
    PLUS            reduce using rule 22 (factor -> ID .)
    MINUS           reduce using rule 22 (factor -> ID .)
    GTH             reduce using rule 22 (factor -> ID .)
    LTH             reduce using rule 22 (factor -> ID .)
    GTHOREQUAL      reduce using rule 22 (factor -> ID .)
    LTHOREQUAL      reduce using rule 22 (factor -> ID .)
    EQUALEQUAL      reduce using rule 22 (factor -> ID .)
    NOTEQUAL        reduce using rule 22 (factor -> ID .)
    RPAREN          reduce using rule 22 (factor -> ID .)
    ID              reduce using rule 22 (factor -> ID .)
    WHILE           reduce using rule 22 (factor -> ID .)
    IF              reduce using rule 22 (factor -> ID .)
    CHAR            reduce using rule 22 (factor -> ID .)
    FLOATTYPE       reduce using rule 22 (factor -> ID .)
    INT             reduce using rule 22 (factor -> ID .)
    PRINT           reduce using rule 22 (factor -> ID .)
    NUMBER          reduce using rule 22 (factor -> ID .)
    LPAREN          reduce using rule 22 (factor -> ID .)
    $end            reduce using rule 22 (factor -> ID .)
    RBRACE          reduce using rule 22 (factor -> ID .)


state 60

    (36) term -> term DIVIDE factor .

    TIMES           reduce using rule 36 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 36 (term -> term DIVIDE factor .)
    MODULO          reduce using rule 36 (term -> term DIVIDE factor .)
    SEMICOL         reduce using rule 36 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 36 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 36 (term -> term DIVIDE factor .)
    GTH             reduce using rule 36 (term -> term DIVIDE factor .)
    LTH             reduce using rule 36 (term -> term DIVIDE factor .)
    GTHOREQUAL      reduce using rule 36 (term -> term DIVIDE factor .)
    LTHOREQUAL      reduce using rule 36 (term -> term DIVIDE factor .)
    EQUALEQUAL      reduce using rule 36 (term -> term DIVIDE factor .)
    NOTEQUAL        reduce using rule 36 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 36 (term -> term DIVIDE factor .)
    ID              reduce using rule 36 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 36 (term -> term DIVIDE factor .)
    IF              reduce using rule 36 (term -> term DIVIDE factor .)
    CHAR            reduce using rule 36 (term -> term DIVIDE factor .)
    FLOATTYPE       reduce using rule 36 (term -> term DIVIDE factor .)
    INT             reduce using rule 36 (term -> term DIVIDE factor .)
    PRINT           reduce using rule 36 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 36 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 36 (term -> term DIVIDE factor .)
    $end            reduce using rule 36 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 36 (term -> term DIVIDE factor .)


state 61

    (37) term -> term MODULO factor .

    TIMES           reduce using rule 37 (term -> term MODULO factor .)
    DIVIDE          reduce using rule 37 (term -> term MODULO factor .)
    MODULO          reduce using rule 37 (term -> term MODULO factor .)
    SEMICOL         reduce using rule 37 (term -> term MODULO factor .)
    PLUS            reduce using rule 37 (term -> term MODULO factor .)
    MINUS           reduce using rule 37 (term -> term MODULO factor .)
    GTH             reduce using rule 37 (term -> term MODULO factor .)
    LTH             reduce using rule 37 (term -> term MODULO factor .)
    GTHOREQUAL      reduce using rule 37 (term -> term MODULO factor .)
    LTHOREQUAL      reduce using rule 37 (term -> term MODULO factor .)
    EQUALEQUAL      reduce using rule 37 (term -> term MODULO factor .)
    NOTEQUAL        reduce using rule 37 (term -> term MODULO factor .)
    RPAREN          reduce using rule 37 (term -> term MODULO factor .)
    ID              reduce using rule 37 (term -> term MODULO factor .)
    WHILE           reduce using rule 37 (term -> term MODULO factor .)
    IF              reduce using rule 37 (term -> term MODULO factor .)
    CHAR            reduce using rule 37 (term -> term MODULO factor .)
    FLOATTYPE       reduce using rule 37 (term -> term MODULO factor .)
    INT             reduce using rule 37 (term -> term MODULO factor .)
    PRINT           reduce using rule 37 (term -> term MODULO factor .)
    NUMBER          reduce using rule 37 (term -> term MODULO factor .)
    LPAREN          reduce using rule 37 (term -> term MODULO factor .)
    $end            reduce using rule 37 (term -> term MODULO factor .)
    RBRACE          reduce using rule 37 (term -> term MODULO factor .)


state 62

    (31) while_statement -> WHILE LPAREN comparison . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 75


state 63

    (23) comparison -> expression . GTH expression
    (24) comparison -> expression . LTH expression
    (25) comparison -> expression . GTHOREQUAL expression
    (26) comparison -> expression . LTHOREQUAL expression
    (27) comparison -> expression . EQUALEQUAL expression
    (28) comparison -> expression . NOTEQUAL expression
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term

    GTH             shift and go to state 26
    LTH             shift and go to state 27
    GTHOREQUAL      shift and go to state 28
    LTHOREQUAL      shift and go to state 29
    EQUALEQUAL      shift and go to state 30
    NOTEQUAL        shift and go to state 31
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 64

    (40) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    SEMICOL         reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    GTH             reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    LTH             reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    GTHOREQUAL      reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    LTHOREQUAL      reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    EQUALEQUAL      reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    FLOATTYPE       reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    INT             reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 40 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 40 (factor -> LPAREN expression RPAREN .)


state 65

    (29) if_statement -> IF LPAREN comparison . RPAREN LBRACE statements RBRACE
    (30) if_statement -> IF LPAREN comparison . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    RPAREN          shift and go to state 76


state 66

    (17) var_statement -> CHAR ID EQUALS . STRING SEMICOL

    STRING          shift and go to state 77


state 67

    (18) var_statement -> FLOATTYPE ID EQUALS . NUMBER SEMICOL

    NUMBER          shift and go to state 78


state 68

    (19) var_statement -> INT ID EQUALS . NUMBER SEMICOL

    NUMBER          shift and go to state 79


state 69

    (3) print_statement -> PRINT LPAREN expression . RPAREN SEMICOL
    (32) expression -> expression . PLUS term
    (33) expression -> expression . MINUS term

    RPAREN          shift and go to state 80
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 70

    (4) print_statement -> PRINT LPAREN STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 81


state 71

    (13) var_assign -> ID EQUALS ID SEMICOL .

    ID              reduce using rule 13 (var_assign -> ID EQUALS ID SEMICOL .)
    WHILE           reduce using rule 13 (var_assign -> ID EQUALS ID SEMICOL .)
    IF              reduce using rule 13 (var_assign -> ID EQUALS ID SEMICOL .)
    CHAR            reduce using rule 13 (var_assign -> ID EQUALS ID SEMICOL .)
    FLOATTYPE       reduce using rule 13 (var_assign -> ID EQUALS ID SEMICOL .)
    INT             reduce using rule 13 (var_assign -> ID EQUALS ID SEMICOL .)
    PRINT           reduce using rule 13 (var_assign -> ID EQUALS ID SEMICOL .)
    NUMBER          reduce using rule 13 (var_assign -> ID EQUALS ID SEMICOL .)
    LPAREN          reduce using rule 13 (var_assign -> ID EQUALS ID SEMICOL .)
    $end            reduce using rule 13 (var_assign -> ID EQUALS ID SEMICOL .)
    RBRACE          reduce using rule 13 (var_assign -> ID EQUALS ID SEMICOL .)


state 72

    (14) var_assign -> ID EQUALS STRING SEMICOL .

    ID              reduce using rule 14 (var_assign -> ID EQUALS STRING SEMICOL .)
    WHILE           reduce using rule 14 (var_assign -> ID EQUALS STRING SEMICOL .)
    IF              reduce using rule 14 (var_assign -> ID EQUALS STRING SEMICOL .)
    CHAR            reduce using rule 14 (var_assign -> ID EQUALS STRING SEMICOL .)
    FLOATTYPE       reduce using rule 14 (var_assign -> ID EQUALS STRING SEMICOL .)
    INT             reduce using rule 14 (var_assign -> ID EQUALS STRING SEMICOL .)
    PRINT           reduce using rule 14 (var_assign -> ID EQUALS STRING SEMICOL .)
    NUMBER          reduce using rule 14 (var_assign -> ID EQUALS STRING SEMICOL .)
    LPAREN          reduce using rule 14 (var_assign -> ID EQUALS STRING SEMICOL .)
    $end            reduce using rule 14 (var_assign -> ID EQUALS STRING SEMICOL .)
    RBRACE          reduce using rule 14 (var_assign -> ID EQUALS STRING SEMICOL .)


state 73

    (15) var_assign -> ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 15 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    WHILE           reduce using rule 15 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 15 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 15 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 15 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 15 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 15 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 15 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 15 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 15 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 15 (var_assign -> ID EQUALS NUMBER SEMICOL .)


state 74

    (16) var_inc -> ID PLUS PLUS SEMICOL .

    ID              reduce using rule 16 (var_inc -> ID PLUS PLUS SEMICOL .)
    WHILE           reduce using rule 16 (var_inc -> ID PLUS PLUS SEMICOL .)
    IF              reduce using rule 16 (var_inc -> ID PLUS PLUS SEMICOL .)
    CHAR            reduce using rule 16 (var_inc -> ID PLUS PLUS SEMICOL .)
    FLOATTYPE       reduce using rule 16 (var_inc -> ID PLUS PLUS SEMICOL .)
    INT             reduce using rule 16 (var_inc -> ID PLUS PLUS SEMICOL .)
    PRINT           reduce using rule 16 (var_inc -> ID PLUS PLUS SEMICOL .)
    NUMBER          reduce using rule 16 (var_inc -> ID PLUS PLUS SEMICOL .)
    LPAREN          reduce using rule 16 (var_inc -> ID PLUS PLUS SEMICOL .)
    $end            reduce using rule 16 (var_inc -> ID PLUS PLUS SEMICOL .)
    RBRACE          reduce using rule 16 (var_inc -> ID PLUS PLUS SEMICOL .)


state 75

    (31) while_statement -> WHILE LPAREN comparison RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 82


state 76

    (29) if_statement -> IF LPAREN comparison RPAREN . LBRACE statements RBRACE
    (30) if_statement -> IF LPAREN comparison RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 83


state 77

    (17) var_statement -> CHAR ID EQUALS STRING . SEMICOL

    SEMICOL         shift and go to state 84


state 78

    (18) var_statement -> FLOATTYPE ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 85


state 79

    (19) var_statement -> INT ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 86


state 80

    (3) print_statement -> PRINT LPAREN expression RPAREN . SEMICOL

    SEMICOL         shift and go to state 87


state 81

    (4) print_statement -> PRINT LPAREN STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 88


state 82

    (31) while_statement -> WHILE LPAREN comparison RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . comparison
    (9) statement -> . var_statement
    (10) statement -> . var_assign
    (11) statement -> . var_inc
    (12) statement -> . print_statement
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (31) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (29) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (30) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (23) comparison -> . expression GTH expression
    (24) comparison -> . expression LTH expression
    (25) comparison -> . expression GTHOREQUAL expression
    (26) comparison -> . expression LTHOREQUAL expression
    (27) comparison -> . expression EQUALEQUAL expression
    (28) comparison -> . expression NOTEQUAL expression
    (17) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (18) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (19) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (13) var_assign -> . ID EQUALS ID SEMICOL
    (14) var_assign -> . ID EQUALS STRING SEMICOL
    (15) var_assign -> . ID EQUALS NUMBER SEMICOL
    (16) var_inc -> . ID PLUS PLUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    CHAR            shift and go to state 16
    FLOATTYPE       shift and go to state 17
    INT             shift and go to state 19
    PRINT           shift and go to state 20
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    comparison                     shift and go to state 6
    statements                     shift and go to state 89
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    var_statement                  shift and go to state 7
    var_assign                     shift and go to state 8
    var_inc                        shift and go to state 9
    print_statement                shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 83

    (29) if_statement -> IF LPAREN comparison RPAREN LBRACE . statements RBRACE
    (30) if_statement -> IF LPAREN comparison RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . comparison
    (9) statement -> . var_statement
    (10) statement -> . var_assign
    (11) statement -> . var_inc
    (12) statement -> . print_statement
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (31) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (29) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (30) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (23) comparison -> . expression GTH expression
    (24) comparison -> . expression LTH expression
    (25) comparison -> . expression GTHOREQUAL expression
    (26) comparison -> . expression LTHOREQUAL expression
    (27) comparison -> . expression EQUALEQUAL expression
    (28) comparison -> . expression NOTEQUAL expression
    (17) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (18) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (19) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (13) var_assign -> . ID EQUALS ID SEMICOL
    (14) var_assign -> . ID EQUALS STRING SEMICOL
    (15) var_assign -> . ID EQUALS NUMBER SEMICOL
    (16) var_inc -> . ID PLUS PLUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    CHAR            shift and go to state 16
    FLOATTYPE       shift and go to state 17
    INT             shift and go to state 19
    PRINT           shift and go to state 20
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    comparison                     shift and go to state 6
    statements                     shift and go to state 90
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    var_statement                  shift and go to state 7
    var_assign                     shift and go to state 8
    var_inc                        shift and go to state 9
    print_statement                shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 84

    (17) var_statement -> CHAR ID EQUALS STRING SEMICOL .

    ID              reduce using rule 17 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    WHILE           reduce using rule 17 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    IF              reduce using rule 17 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    CHAR            reduce using rule 17 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    FLOATTYPE       reduce using rule 17 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    INT             reduce using rule 17 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    PRINT           reduce using rule 17 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    NUMBER          reduce using rule 17 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    LPAREN          reduce using rule 17 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    $end            reduce using rule 17 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    RBRACE          reduce using rule 17 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)


state 85

    (18) var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 18 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    WHILE           reduce using rule 18 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 18 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 18 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 18 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 18 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 18 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 18 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 18 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 18 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 18 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)


state 86

    (19) var_statement -> INT ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 19 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    WHILE           reduce using rule 19 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 19 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 19 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 19 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 19 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 19 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 19 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 19 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 19 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 19 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)


state 87

    (3) print_statement -> PRINT LPAREN expression RPAREN SEMICOL .

    ID              reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    WHILE           reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    IF              reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    CHAR            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    INT             reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    PRINT           reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    NUMBER          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    LPAREN          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    $end            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    RBRACE          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)


state 88

    (4) print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .

    ID              reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    WHILE           reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    IF              reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    CHAR            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    INT             reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    PRINT           reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    NUMBER          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    LPAREN          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    $end            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    RBRACE          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)


state 89

    (31) while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . comparison
    (9) statement -> . var_statement
    (10) statement -> . var_assign
    (11) statement -> . var_inc
    (12) statement -> . print_statement
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (31) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (29) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (30) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (23) comparison -> . expression GTH expression
    (24) comparison -> . expression LTH expression
    (25) comparison -> . expression GTHOREQUAL expression
    (26) comparison -> . expression LTHOREQUAL expression
    (27) comparison -> . expression EQUALEQUAL expression
    (28) comparison -> . expression NOTEQUAL expression
    (17) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (18) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (19) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (13) var_assign -> . ID EQUALS ID SEMICOL
    (14) var_assign -> . ID EQUALS STRING SEMICOL
    (15) var_assign -> . ID EQUALS NUMBER SEMICOL
    (16) var_inc -> . ID PLUS PLUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 91
    ID              shift and go to state 11
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    CHAR            shift and go to state 16
    FLOATTYPE       shift and go to state 17
    INT             shift and go to state 19
    PRINT           shift and go to state 20
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    comparison                     shift and go to state 6
    statement                      shift and go to state 22
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    var_statement                  shift and go to state 7
    var_assign                     shift and go to state 8
    var_inc                        shift and go to state 9
    print_statement                shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 90

    (29) if_statement -> IF LPAREN comparison RPAREN LBRACE statements . RBRACE
    (30) if_statement -> IF LPAREN comparison RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . comparison
    (9) statement -> . var_statement
    (10) statement -> . var_assign
    (11) statement -> . var_inc
    (12) statement -> . print_statement
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (31) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (29) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (30) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (23) comparison -> . expression GTH expression
    (24) comparison -> . expression LTH expression
    (25) comparison -> . expression GTHOREQUAL expression
    (26) comparison -> . expression LTHOREQUAL expression
    (27) comparison -> . expression EQUALEQUAL expression
    (28) comparison -> . expression NOTEQUAL expression
    (17) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (18) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (19) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (13) var_assign -> . ID EQUALS ID SEMICOL
    (14) var_assign -> . ID EQUALS STRING SEMICOL
    (15) var_assign -> . ID EQUALS NUMBER SEMICOL
    (16) var_inc -> . ID PLUS PLUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 92
    ID              shift and go to state 11
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    CHAR            shift and go to state 16
    FLOATTYPE       shift and go to state 17
    INT             shift and go to state 19
    PRINT           shift and go to state 20
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    comparison                     shift and go to state 6
    statement                      shift and go to state 22
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    var_statement                  shift and go to state 7
    var_assign                     shift and go to state 8
    var_inc                        shift and go to state 9
    print_statement                shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 91

    (31) while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 31 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 31 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 31 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 31 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 31 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 31 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 31 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 31 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 31 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 31 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 31 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)


state 92

    (29) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .
    (30) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    ID              reduce using rule 29 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 29 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 29 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 29 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 29 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 29 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 29 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 29 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 29 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 29 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 29 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 93


state 93

    (30) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 94


state 94

    (30) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . comparison
    (9) statement -> . var_statement
    (10) statement -> . var_assign
    (11) statement -> . var_inc
    (12) statement -> . print_statement
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (31) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (29) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (30) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (23) comparison -> . expression GTH expression
    (24) comparison -> . expression LTH expression
    (25) comparison -> . expression GTHOREQUAL expression
    (26) comparison -> . expression LTHOREQUAL expression
    (27) comparison -> . expression EQUALEQUAL expression
    (28) comparison -> . expression NOTEQUAL expression
    (17) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (18) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (19) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (13) var_assign -> . ID EQUALS ID SEMICOL
    (14) var_assign -> . ID EQUALS STRING SEMICOL
    (15) var_assign -> . ID EQUALS NUMBER SEMICOL
    (16) var_inc -> . ID PLUS PLUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 11
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    CHAR            shift and go to state 16
    FLOATTYPE       shift and go to state 17
    INT             shift and go to state 19
    PRINT           shift and go to state 20
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    comparison                     shift and go to state 6
    statements                     shift and go to state 95
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    var_statement                  shift and go to state 7
    var_assign                     shift and go to state 8
    var_inc                        shift and go to state 9
    print_statement                shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 95

    (30) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (5) statement -> . expression SEMICOL
    (6) statement -> . while_statement
    (7) statement -> . if_statement
    (8) statement -> . comparison
    (9) statement -> . var_statement
    (10) statement -> . var_assign
    (11) statement -> . var_inc
    (12) statement -> . print_statement
    (20) expression -> . ID
    (32) expression -> . expression PLUS term
    (33) expression -> . expression MINUS term
    (34) expression -> . term
    (31) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (29) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (30) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (23) comparison -> . expression GTH expression
    (24) comparison -> . expression LTH expression
    (25) comparison -> . expression GTHOREQUAL expression
    (26) comparison -> . expression LTHOREQUAL expression
    (27) comparison -> . expression EQUALEQUAL expression
    (28) comparison -> . expression NOTEQUAL expression
    (17) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (18) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (19) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (13) var_assign -> . ID EQUALS ID SEMICOL
    (14) var_assign -> . ID EQUALS STRING SEMICOL
    (15) var_assign -> . ID EQUALS NUMBER SEMICOL
    (16) var_inc -> . ID PLUS PLUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (21) term -> . ID
    (35) term -> . term TIMES factor
    (36) term -> . term DIVIDE factor
    (37) term -> . term MODULO factor
    (38) term -> . factor
    (22) factor -> . ID
    (39) factor -> . NUMBER
    (40) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 96
    ID              shift and go to state 11
    WHILE           shift and go to state 13
    IF              shift and go to state 15
    CHAR            shift and go to state 16
    FLOATTYPE       shift and go to state 17
    INT             shift and go to state 19
    PRINT           shift and go to state 20
    NUMBER          shift and go to state 18
    LPAREN          shift and go to state 14

    comparison                     shift and go to state 6
    statement                      shift and go to state 22
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    var_statement                  shift and go to state 7
    var_assign                     shift and go to state 8
    var_inc                        shift and go to state 9
    print_statement                shift and go to state 10
    term                           shift and go to state 12
    factor                         shift and go to state 21

state 96

    (30) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    ID              reduce using rule 30 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    WHILE           reduce using rule 30 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 30 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    CHAR            reduce using rule 30 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 30 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    INT             reduce using rule 30 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    PRINT           reduce using rule 30 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NUMBER          reduce using rule 30 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    LPAREN          reduce using rule 30 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 30 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 30 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 11 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 11 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 11 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 11
WARNING: reduce/reduce conflict in state 11 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 11
WARNING: reduce/reduce conflict in state 11 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 11
WARNING: reduce/reduce conflict in state 39 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 39
WARNING: reduce/reduce conflict in state 39 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 39
WARNING: reduce/reduce conflict in state 39 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 39
WARNING: reduce/reduce conflict in state 46 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 46
