Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CONSTANT
    CONTINUE
    FLOAT_CONST
    INT_CONST
    RETURN
    SIZEOF
    VOID

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statements statement
Rule 2     statements -> statement
Rule 3     print_statement -> PRINT LPAREN expression RPAREN SEMICOL
Rule 4     print_statement -> PRINT LPAREN STRING RPAREN SEMICOL
Rule 5     vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL
Rule 6     union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
Rule 7     union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL
Rule 8     union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL
Rule 9     statement -> expression SEMICOL
Rule 10    statement -> while_statement
Rule 11    statement -> for_statement
Rule 12    statement -> if_statement
Rule 13    statement -> vartype_statement
Rule 14    statement -> input_statement
Rule 15    statement -> union_statement
Rule 16    statement -> comparison
Rule 17    statement -> compare_id_value
Rule 18    statement -> bool_comparison
Rule 19    statement -> var_statement
Rule 20    statement -> var_assign
Rule 21    statement -> var_inc
Rule 22    statement -> var_dec
Rule 23    statement -> print_statement
Rule 24    statement -> break_statement
Rule 25    var_assign -> ID EQUALS ID SEMICOL
Rule 26    var_assign -> ID EQUALS STRING SEMICOL
Rule 27    var_assign -> ID EQUALS NUMBER SEMICOL
Rule 28    var_assign -> ID EQUALS TRUE SEMICOL
Rule 29    var_assign -> ID EQUALS FALSE SEMICOL
Rule 30    var_inc -> ID PLUS PLUS SEMICOL
Rule 31    var_dec -> ID MINUS MINUS SEMICOL
Rule 32    var_statement -> CHAR ID EQUALS STRING SEMICOL
Rule 33    var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL
Rule 34    var_statement -> INT ID EQUALS NUMBER SEMICOL
Rule 35    var_statement -> BOOL ID EQUALS TRUE SEMICOL
Rule 36    var_statement -> BOOL ID EQUALS FALSE SEMICOL
Rule 37    input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
Rule 38    input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
Rule 39    input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
Rule 40    expression -> ID
Rule 41    term -> ID
Rule 42    factor -> ID
Rule 43    comparison -> expression GTH expression
Rule 44    comparison -> expression LTH expression
Rule 45    comparison -> expression GTHOREQUAL expression
Rule 46    comparison -> expression LTHOREQUAL expression
Rule 47    comparison -> expression EQUALEQUAL expression
Rule 48    comparison -> expression NOTEQUAL expression
Rule 49    compare_id_value -> ID GTH expression
Rule 50    compare_id_value -> ID LTH expression
Rule 51    compare_id_value -> ID GTHOREQUAL expression
Rule 52    compare_id_value -> ID LTHOREQUAL expression
Rule 53    compare_id_value -> ID EQUALEQUAL expression
Rule 54    compare_id_value -> ID NOTEQUAL expression
Rule 55    bool_comparison -> ID EQUALEQUAL ID
Rule 56    bool_comparison -> ID EQUALEQUAL TRUE
Rule 57    bool_comparison -> ID EQUALEQUAL FALSE
Rule 58    bool_comparison -> ID NOTEQUAL ID
Rule 59    bool_comparison -> ID NOTEQUAL TRUE
Rule 60    bool_comparison -> ID NOTEQUAL FALSE
Rule 61    if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE
Rule 62    if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
Rule 63    if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
Rule 64    if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 65    if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 66    while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
Rule 67    while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
Rule 68    while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
Rule 69    for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
Rule 70    break_statement -> BREAK SEMICOL
Rule 71    expression -> expression PLUS term
Rule 72    expression -> expression MINUS term
Rule 73    expression -> term
Rule 74    term -> term TIMES factor
Rule 75    term -> term DIVIDE factor
Rule 76    term -> term MODULO factor
Rule 77    term -> factor
Rule 78    factor -> NUMBER
Rule 79    factor -> LPAREN expression RPAREN
Rule 80    empty -> <empty>

Terminals, with rules where they appear

BOOL                 : 35 36
BREAK                : 70
CHAR                 : 32 38 38
COMMA                : 6 7 8
CONSTANT             : 
CONTINUE             : 
DIVIDE               : 75
ELSE                 : 64 65
EQUALEQUAL           : 47 53 55 56 57
EQUALS               : 25 26 27 28 29 32 33 34 35 36 37 38 39
FALSE                : 29 36 57 60 68
FLOATTYPE            : 33 39 39
FLOAT_CONST          : 
FOR                  : 69
GTH                  : 43 49
GTHOREQUAL           : 45 51
ID                   : 5 7 8 25 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 49 50 51 52 53 54 55 55 56 57 58 58 59 60
IF                   : 61 62 63 64 65
INPUT                : 37 38 39
INT                  : 34 37 37
INT_CONST            : 
LBRACE               : 61 62 63 64 64 65 65 66 67 68 69
LPAREN               : 3 4 5 6 7 8 37 38 39 61 62 63 64 65 66 67 68 69 79
LTH                  : 44 50
LTHOREQUAL           : 46 52
MINUS                : 31 31 72
MODULO               : 76
NOTEQUAL             : 48 54 58 59 60
NUMBER               : 27 33 34 78
PLUS                 : 30 30 71
PRINT                : 3 4
RBRACE               : 61 62 63 64 64 65 65 66 67 68 69
RETURN               : 
RPAREN               : 3 4 5 6 7 8 37 38 39 61 62 63 64 65 66 67 68 69 79
SEMICOL              : 3 4 5 6 7 8 9 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 69 70
SIZEOF               : 
STRING               : 4 6 6 7 8 26 32
TIMES                : 74
TRUE                 : 28 35 56 59 67
UNION                : 6 7 8
VAR_TYPE             : 5
VOID                 : 
WHILE                : 66 67 68
error                : 

Nonterminals, with rules where they appear

bool_comparison      : 18 63 65
break_statement      : 24
compare_id_value     : 17 62
comparison           : 16 61 64 66 69
empty                : 
expression           : 3 9 43 43 44 44 45 45 46 46 47 47 48 48 49 50 51 52 53 54 71 72 79
factor               : 74 75 76 77
for_statement        : 11
if_statement         : 12
input_statement      : 14
print_statement      : 23
statement            : 1 2
statements           : 1 61 62 63 64 64 65 65 66 67 68 69 0
term                 : 71 72 73 74 75 76
union_statement      : 15
var_assign           : 20
var_dec              : 22
var_inc              : 21 69
var_statement        : 19 69
vartype_statement    : 13
while_statement      : 10

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statements statement
    (2) statements -> . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    comparison                     shift and go to state 10
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 1

    (0) S' -> statements .
    (1) statements -> statements . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    statement                      shift and go to state 35
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    comparison                     shift and go to state 10
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 2

    (2) statements -> statement .

    ID              reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    VAR_TYPE        reduce using rule 2 (statements -> statement .)
    INT             reduce using rule 2 (statements -> statement .)
    CHAR            reduce using rule 2 (statements -> statement .)
    FLOATTYPE       reduce using rule 2 (statements -> statement .)
    UNION           reduce using rule 2 (statements -> statement .)
    BOOL            reduce using rule 2 (statements -> statement .)
    PRINT           reduce using rule 2 (statements -> statement .)
    BREAK           reduce using rule 2 (statements -> statement .)
    NUMBER          reduce using rule 2 (statements -> statement .)
    LPAREN          reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    RBRACE          reduce using rule 2 (statements -> statement .)


state 3

    (9) statement -> expression . SEMICOL
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term
    (43) comparison -> expression . GTH expression
    (44) comparison -> expression . LTH expression
    (45) comparison -> expression . GTHOREQUAL expression
    (46) comparison -> expression . LTHOREQUAL expression
    (47) comparison -> expression . EQUALEQUAL expression
    (48) comparison -> expression . NOTEQUAL expression

    SEMICOL         shift and go to state 36
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    GTH             shift and go to state 39
    LTH             shift and go to state 40
    GTHOREQUAL      shift and go to state 41
    LTHOREQUAL      shift and go to state 42
    EQUALEQUAL      shift and go to state 43
    NOTEQUAL        shift and go to state 44


state 4

    (10) statement -> while_statement .

    ID              reduce using rule 10 (statement -> while_statement .)
    WHILE           reduce using rule 10 (statement -> while_statement .)
    FOR             reduce using rule 10 (statement -> while_statement .)
    IF              reduce using rule 10 (statement -> while_statement .)
    VAR_TYPE        reduce using rule 10 (statement -> while_statement .)
    INT             reduce using rule 10 (statement -> while_statement .)
    CHAR            reduce using rule 10 (statement -> while_statement .)
    FLOATTYPE       reduce using rule 10 (statement -> while_statement .)
    UNION           reduce using rule 10 (statement -> while_statement .)
    BOOL            reduce using rule 10 (statement -> while_statement .)
    PRINT           reduce using rule 10 (statement -> while_statement .)
    BREAK           reduce using rule 10 (statement -> while_statement .)
    NUMBER          reduce using rule 10 (statement -> while_statement .)
    LPAREN          reduce using rule 10 (statement -> while_statement .)
    $end            reduce using rule 10 (statement -> while_statement .)
    RBRACE          reduce using rule 10 (statement -> while_statement .)


state 5

    (11) statement -> for_statement .

    ID              reduce using rule 11 (statement -> for_statement .)
    WHILE           reduce using rule 11 (statement -> for_statement .)
    FOR             reduce using rule 11 (statement -> for_statement .)
    IF              reduce using rule 11 (statement -> for_statement .)
    VAR_TYPE        reduce using rule 11 (statement -> for_statement .)
    INT             reduce using rule 11 (statement -> for_statement .)
    CHAR            reduce using rule 11 (statement -> for_statement .)
    FLOATTYPE       reduce using rule 11 (statement -> for_statement .)
    UNION           reduce using rule 11 (statement -> for_statement .)
    BOOL            reduce using rule 11 (statement -> for_statement .)
    PRINT           reduce using rule 11 (statement -> for_statement .)
    BREAK           reduce using rule 11 (statement -> for_statement .)
    NUMBER          reduce using rule 11 (statement -> for_statement .)
    LPAREN          reduce using rule 11 (statement -> for_statement .)
    $end            reduce using rule 11 (statement -> for_statement .)
    RBRACE          reduce using rule 11 (statement -> for_statement .)


state 6

    (12) statement -> if_statement .

    ID              reduce using rule 12 (statement -> if_statement .)
    WHILE           reduce using rule 12 (statement -> if_statement .)
    FOR             reduce using rule 12 (statement -> if_statement .)
    IF              reduce using rule 12 (statement -> if_statement .)
    VAR_TYPE        reduce using rule 12 (statement -> if_statement .)
    INT             reduce using rule 12 (statement -> if_statement .)
    CHAR            reduce using rule 12 (statement -> if_statement .)
    FLOATTYPE       reduce using rule 12 (statement -> if_statement .)
    UNION           reduce using rule 12 (statement -> if_statement .)
    BOOL            reduce using rule 12 (statement -> if_statement .)
    PRINT           reduce using rule 12 (statement -> if_statement .)
    BREAK           reduce using rule 12 (statement -> if_statement .)
    NUMBER          reduce using rule 12 (statement -> if_statement .)
    LPAREN          reduce using rule 12 (statement -> if_statement .)
    $end            reduce using rule 12 (statement -> if_statement .)
    RBRACE          reduce using rule 12 (statement -> if_statement .)


state 7

    (13) statement -> vartype_statement .

    ID              reduce using rule 13 (statement -> vartype_statement .)
    WHILE           reduce using rule 13 (statement -> vartype_statement .)
    FOR             reduce using rule 13 (statement -> vartype_statement .)
    IF              reduce using rule 13 (statement -> vartype_statement .)
    VAR_TYPE        reduce using rule 13 (statement -> vartype_statement .)
    INT             reduce using rule 13 (statement -> vartype_statement .)
    CHAR            reduce using rule 13 (statement -> vartype_statement .)
    FLOATTYPE       reduce using rule 13 (statement -> vartype_statement .)
    UNION           reduce using rule 13 (statement -> vartype_statement .)
    BOOL            reduce using rule 13 (statement -> vartype_statement .)
    PRINT           reduce using rule 13 (statement -> vartype_statement .)
    BREAK           reduce using rule 13 (statement -> vartype_statement .)
    NUMBER          reduce using rule 13 (statement -> vartype_statement .)
    LPAREN          reduce using rule 13 (statement -> vartype_statement .)
    $end            reduce using rule 13 (statement -> vartype_statement .)
    RBRACE          reduce using rule 13 (statement -> vartype_statement .)


state 8

    (14) statement -> input_statement .

    ID              reduce using rule 14 (statement -> input_statement .)
    WHILE           reduce using rule 14 (statement -> input_statement .)
    FOR             reduce using rule 14 (statement -> input_statement .)
    IF              reduce using rule 14 (statement -> input_statement .)
    VAR_TYPE        reduce using rule 14 (statement -> input_statement .)
    INT             reduce using rule 14 (statement -> input_statement .)
    CHAR            reduce using rule 14 (statement -> input_statement .)
    FLOATTYPE       reduce using rule 14 (statement -> input_statement .)
    UNION           reduce using rule 14 (statement -> input_statement .)
    BOOL            reduce using rule 14 (statement -> input_statement .)
    PRINT           reduce using rule 14 (statement -> input_statement .)
    BREAK           reduce using rule 14 (statement -> input_statement .)
    NUMBER          reduce using rule 14 (statement -> input_statement .)
    LPAREN          reduce using rule 14 (statement -> input_statement .)
    $end            reduce using rule 14 (statement -> input_statement .)
    RBRACE          reduce using rule 14 (statement -> input_statement .)


state 9

    (15) statement -> union_statement .

    ID              reduce using rule 15 (statement -> union_statement .)
    WHILE           reduce using rule 15 (statement -> union_statement .)
    FOR             reduce using rule 15 (statement -> union_statement .)
    IF              reduce using rule 15 (statement -> union_statement .)
    VAR_TYPE        reduce using rule 15 (statement -> union_statement .)
    INT             reduce using rule 15 (statement -> union_statement .)
    CHAR            reduce using rule 15 (statement -> union_statement .)
    FLOATTYPE       reduce using rule 15 (statement -> union_statement .)
    UNION           reduce using rule 15 (statement -> union_statement .)
    BOOL            reduce using rule 15 (statement -> union_statement .)
    PRINT           reduce using rule 15 (statement -> union_statement .)
    BREAK           reduce using rule 15 (statement -> union_statement .)
    NUMBER          reduce using rule 15 (statement -> union_statement .)
    LPAREN          reduce using rule 15 (statement -> union_statement .)
    $end            reduce using rule 15 (statement -> union_statement .)
    RBRACE          reduce using rule 15 (statement -> union_statement .)


state 10

    (16) statement -> comparison .

    ID              reduce using rule 16 (statement -> comparison .)
    WHILE           reduce using rule 16 (statement -> comparison .)
    FOR             reduce using rule 16 (statement -> comparison .)
    IF              reduce using rule 16 (statement -> comparison .)
    VAR_TYPE        reduce using rule 16 (statement -> comparison .)
    INT             reduce using rule 16 (statement -> comparison .)
    CHAR            reduce using rule 16 (statement -> comparison .)
    FLOATTYPE       reduce using rule 16 (statement -> comparison .)
    UNION           reduce using rule 16 (statement -> comparison .)
    BOOL            reduce using rule 16 (statement -> comparison .)
    PRINT           reduce using rule 16 (statement -> comparison .)
    BREAK           reduce using rule 16 (statement -> comparison .)
    NUMBER          reduce using rule 16 (statement -> comparison .)
    LPAREN          reduce using rule 16 (statement -> comparison .)
    $end            reduce using rule 16 (statement -> comparison .)
    RBRACE          reduce using rule 16 (statement -> comparison .)


state 11

    (17) statement -> compare_id_value .

    ID              reduce using rule 17 (statement -> compare_id_value .)
    WHILE           reduce using rule 17 (statement -> compare_id_value .)
    FOR             reduce using rule 17 (statement -> compare_id_value .)
    IF              reduce using rule 17 (statement -> compare_id_value .)
    VAR_TYPE        reduce using rule 17 (statement -> compare_id_value .)
    INT             reduce using rule 17 (statement -> compare_id_value .)
    CHAR            reduce using rule 17 (statement -> compare_id_value .)
    FLOATTYPE       reduce using rule 17 (statement -> compare_id_value .)
    UNION           reduce using rule 17 (statement -> compare_id_value .)
    BOOL            reduce using rule 17 (statement -> compare_id_value .)
    PRINT           reduce using rule 17 (statement -> compare_id_value .)
    BREAK           reduce using rule 17 (statement -> compare_id_value .)
    NUMBER          reduce using rule 17 (statement -> compare_id_value .)
    LPAREN          reduce using rule 17 (statement -> compare_id_value .)
    $end            reduce using rule 17 (statement -> compare_id_value .)
    RBRACE          reduce using rule 17 (statement -> compare_id_value .)


state 12

    (18) statement -> bool_comparison .

    ID              reduce using rule 18 (statement -> bool_comparison .)
    WHILE           reduce using rule 18 (statement -> bool_comparison .)
    FOR             reduce using rule 18 (statement -> bool_comparison .)
    IF              reduce using rule 18 (statement -> bool_comparison .)
    VAR_TYPE        reduce using rule 18 (statement -> bool_comparison .)
    INT             reduce using rule 18 (statement -> bool_comparison .)
    CHAR            reduce using rule 18 (statement -> bool_comparison .)
    FLOATTYPE       reduce using rule 18 (statement -> bool_comparison .)
    UNION           reduce using rule 18 (statement -> bool_comparison .)
    BOOL            reduce using rule 18 (statement -> bool_comparison .)
    PRINT           reduce using rule 18 (statement -> bool_comparison .)
    BREAK           reduce using rule 18 (statement -> bool_comparison .)
    NUMBER          reduce using rule 18 (statement -> bool_comparison .)
    LPAREN          reduce using rule 18 (statement -> bool_comparison .)
    $end            reduce using rule 18 (statement -> bool_comparison .)
    RBRACE          reduce using rule 18 (statement -> bool_comparison .)


state 13

    (19) statement -> var_statement .

    ID              reduce using rule 19 (statement -> var_statement .)
    WHILE           reduce using rule 19 (statement -> var_statement .)
    FOR             reduce using rule 19 (statement -> var_statement .)
    IF              reduce using rule 19 (statement -> var_statement .)
    VAR_TYPE        reduce using rule 19 (statement -> var_statement .)
    INT             reduce using rule 19 (statement -> var_statement .)
    CHAR            reduce using rule 19 (statement -> var_statement .)
    FLOATTYPE       reduce using rule 19 (statement -> var_statement .)
    UNION           reduce using rule 19 (statement -> var_statement .)
    BOOL            reduce using rule 19 (statement -> var_statement .)
    PRINT           reduce using rule 19 (statement -> var_statement .)
    BREAK           reduce using rule 19 (statement -> var_statement .)
    NUMBER          reduce using rule 19 (statement -> var_statement .)
    LPAREN          reduce using rule 19 (statement -> var_statement .)
    $end            reduce using rule 19 (statement -> var_statement .)
    RBRACE          reduce using rule 19 (statement -> var_statement .)


state 14

    (20) statement -> var_assign .

    ID              reduce using rule 20 (statement -> var_assign .)
    WHILE           reduce using rule 20 (statement -> var_assign .)
    FOR             reduce using rule 20 (statement -> var_assign .)
    IF              reduce using rule 20 (statement -> var_assign .)
    VAR_TYPE        reduce using rule 20 (statement -> var_assign .)
    INT             reduce using rule 20 (statement -> var_assign .)
    CHAR            reduce using rule 20 (statement -> var_assign .)
    FLOATTYPE       reduce using rule 20 (statement -> var_assign .)
    UNION           reduce using rule 20 (statement -> var_assign .)
    BOOL            reduce using rule 20 (statement -> var_assign .)
    PRINT           reduce using rule 20 (statement -> var_assign .)
    BREAK           reduce using rule 20 (statement -> var_assign .)
    NUMBER          reduce using rule 20 (statement -> var_assign .)
    LPAREN          reduce using rule 20 (statement -> var_assign .)
    $end            reduce using rule 20 (statement -> var_assign .)
    RBRACE          reduce using rule 20 (statement -> var_assign .)


state 15

    (21) statement -> var_inc .

    ID              reduce using rule 21 (statement -> var_inc .)
    WHILE           reduce using rule 21 (statement -> var_inc .)
    FOR             reduce using rule 21 (statement -> var_inc .)
    IF              reduce using rule 21 (statement -> var_inc .)
    VAR_TYPE        reduce using rule 21 (statement -> var_inc .)
    INT             reduce using rule 21 (statement -> var_inc .)
    CHAR            reduce using rule 21 (statement -> var_inc .)
    FLOATTYPE       reduce using rule 21 (statement -> var_inc .)
    UNION           reduce using rule 21 (statement -> var_inc .)
    BOOL            reduce using rule 21 (statement -> var_inc .)
    PRINT           reduce using rule 21 (statement -> var_inc .)
    BREAK           reduce using rule 21 (statement -> var_inc .)
    NUMBER          reduce using rule 21 (statement -> var_inc .)
    LPAREN          reduce using rule 21 (statement -> var_inc .)
    $end            reduce using rule 21 (statement -> var_inc .)
    RBRACE          reduce using rule 21 (statement -> var_inc .)


state 16

    (22) statement -> var_dec .

    ID              reduce using rule 22 (statement -> var_dec .)
    WHILE           reduce using rule 22 (statement -> var_dec .)
    FOR             reduce using rule 22 (statement -> var_dec .)
    IF              reduce using rule 22 (statement -> var_dec .)
    VAR_TYPE        reduce using rule 22 (statement -> var_dec .)
    INT             reduce using rule 22 (statement -> var_dec .)
    CHAR            reduce using rule 22 (statement -> var_dec .)
    FLOATTYPE       reduce using rule 22 (statement -> var_dec .)
    UNION           reduce using rule 22 (statement -> var_dec .)
    BOOL            reduce using rule 22 (statement -> var_dec .)
    PRINT           reduce using rule 22 (statement -> var_dec .)
    BREAK           reduce using rule 22 (statement -> var_dec .)
    NUMBER          reduce using rule 22 (statement -> var_dec .)
    LPAREN          reduce using rule 22 (statement -> var_dec .)
    $end            reduce using rule 22 (statement -> var_dec .)
    RBRACE          reduce using rule 22 (statement -> var_dec .)


state 17

    (23) statement -> print_statement .

    ID              reduce using rule 23 (statement -> print_statement .)
    WHILE           reduce using rule 23 (statement -> print_statement .)
    FOR             reduce using rule 23 (statement -> print_statement .)
    IF              reduce using rule 23 (statement -> print_statement .)
    VAR_TYPE        reduce using rule 23 (statement -> print_statement .)
    INT             reduce using rule 23 (statement -> print_statement .)
    CHAR            reduce using rule 23 (statement -> print_statement .)
    FLOATTYPE       reduce using rule 23 (statement -> print_statement .)
    UNION           reduce using rule 23 (statement -> print_statement .)
    BOOL            reduce using rule 23 (statement -> print_statement .)
    PRINT           reduce using rule 23 (statement -> print_statement .)
    BREAK           reduce using rule 23 (statement -> print_statement .)
    NUMBER          reduce using rule 23 (statement -> print_statement .)
    LPAREN          reduce using rule 23 (statement -> print_statement .)
    $end            reduce using rule 23 (statement -> print_statement .)
    RBRACE          reduce using rule 23 (statement -> print_statement .)


state 18

    (24) statement -> break_statement .

    ID              reduce using rule 24 (statement -> break_statement .)
    WHILE           reduce using rule 24 (statement -> break_statement .)
    FOR             reduce using rule 24 (statement -> break_statement .)
    IF              reduce using rule 24 (statement -> break_statement .)
    VAR_TYPE        reduce using rule 24 (statement -> break_statement .)
    INT             reduce using rule 24 (statement -> break_statement .)
    CHAR            reduce using rule 24 (statement -> break_statement .)
    FLOATTYPE       reduce using rule 24 (statement -> break_statement .)
    UNION           reduce using rule 24 (statement -> break_statement .)
    BOOL            reduce using rule 24 (statement -> break_statement .)
    PRINT           reduce using rule 24 (statement -> break_statement .)
    BREAK           reduce using rule 24 (statement -> break_statement .)
    NUMBER          reduce using rule 24 (statement -> break_statement .)
    LPAREN          reduce using rule 24 (statement -> break_statement .)
    $end            reduce using rule 24 (statement -> break_statement .)
    RBRACE          reduce using rule 24 (statement -> break_statement .)


state 19

    (40) expression -> ID .
    (49) compare_id_value -> ID . GTH expression
    (50) compare_id_value -> ID . LTH expression
    (51) compare_id_value -> ID . GTHOREQUAL expression
    (52) compare_id_value -> ID . LTHOREQUAL expression
    (53) compare_id_value -> ID . EQUALEQUAL expression
    (54) compare_id_value -> ID . NOTEQUAL expression
    (55) bool_comparison -> ID . EQUALEQUAL ID
    (56) bool_comparison -> ID . EQUALEQUAL TRUE
    (57) bool_comparison -> ID . EQUALEQUAL FALSE
    (58) bool_comparison -> ID . NOTEQUAL ID
    (59) bool_comparison -> ID . NOTEQUAL TRUE
    (60) bool_comparison -> ID . NOTEQUAL FALSE
    (25) var_assign -> ID . EQUALS ID SEMICOL
    (26) var_assign -> ID . EQUALS STRING SEMICOL
    (27) var_assign -> ID . EQUALS NUMBER SEMICOL
    (28) var_assign -> ID . EQUALS TRUE SEMICOL
    (29) var_assign -> ID . EQUALS FALSE SEMICOL
    (30) var_inc -> ID . PLUS PLUS SEMICOL
    (31) var_dec -> ID . MINUS MINUS SEMICOL
    (41) term -> ID .
    (42) factor -> ID .

  ! shift/reduce conflict for GTH resolved as shift
  ! shift/reduce conflict for LTH resolved as shift
  ! shift/reduce conflict for GTHOREQUAL resolved as shift
  ! shift/reduce conflict for LTHOREQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for SEMICOL resolved using rule 40 (expression -> ID .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTH resolved as shift
  ! shift/reduce conflict for LTH resolved as shift
  ! shift/reduce conflict for GTHOREQUAL resolved as shift
  ! shift/reduce conflict for LTHOREQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 40 (expression -> ID .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for GTH resolved as shift
  ! shift/reduce conflict for LTH resolved as shift
  ! shift/reduce conflict for GTHOREQUAL resolved as shift
  ! shift/reduce conflict for LTHOREQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
    SEMICOL         reduce using rule 40 (expression -> ID .)
    GTH             shift and go to state 45
    LTH             shift and go to state 46
    GTHOREQUAL      shift and go to state 47
    LTHOREQUAL      shift and go to state 48
    EQUALEQUAL      shift and go to state 49
    NOTEQUAL        shift and go to state 50
    EQUALS          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53
    TIMES           reduce using rule 41 (term -> ID .)
    DIVIDE          reduce using rule 41 (term -> ID .)
    MODULO          reduce using rule 41 (term -> ID .)

  ! PLUS            [ reduce using rule 40 (expression -> ID .) ]
  ! MINUS           [ reduce using rule 40 (expression -> ID .) ]
  ! GTH             [ reduce using rule 40 (expression -> ID .) ]
  ! LTH             [ reduce using rule 40 (expression -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 40 (expression -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 40 (expression -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 40 (expression -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 40 (expression -> ID .) ]
  ! SEMICOL         [ reduce using rule 41 (term -> ID .) ]
  ! PLUS            [ reduce using rule 41 (term -> ID .) ]
  ! MINUS           [ reduce using rule 41 (term -> ID .) ]
  ! GTH             [ reduce using rule 41 (term -> ID .) ]
  ! LTH             [ reduce using rule 41 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 41 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 41 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 41 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 41 (term -> ID .) ]
  ! TIMES           [ reduce using rule 42 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 42 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 42 (factor -> ID .) ]
  ! SEMICOL         [ reduce using rule 42 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 42 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 42 (factor -> ID .) ]
  ! GTH             [ reduce using rule 42 (factor -> ID .) ]
  ! LTH             [ reduce using rule 42 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 42 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 42 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 42 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 42 (factor -> ID .) ]


state 20

    (73) expression -> term .
    (74) term -> term . TIMES factor
    (75) term -> term . DIVIDE factor
    (76) term -> term . MODULO factor

    SEMICOL         reduce using rule 73 (expression -> term .)
    PLUS            reduce using rule 73 (expression -> term .)
    MINUS           reduce using rule 73 (expression -> term .)
    GTH             reduce using rule 73 (expression -> term .)
    LTH             reduce using rule 73 (expression -> term .)
    GTHOREQUAL      reduce using rule 73 (expression -> term .)
    LTHOREQUAL      reduce using rule 73 (expression -> term .)
    EQUALEQUAL      reduce using rule 73 (expression -> term .)
    NOTEQUAL        reduce using rule 73 (expression -> term .)
    RPAREN          reduce using rule 73 (expression -> term .)
    ID              reduce using rule 73 (expression -> term .)
    WHILE           reduce using rule 73 (expression -> term .)
    FOR             reduce using rule 73 (expression -> term .)
    IF              reduce using rule 73 (expression -> term .)
    VAR_TYPE        reduce using rule 73 (expression -> term .)
    INT             reduce using rule 73 (expression -> term .)
    CHAR            reduce using rule 73 (expression -> term .)
    FLOATTYPE       reduce using rule 73 (expression -> term .)
    UNION           reduce using rule 73 (expression -> term .)
    BOOL            reduce using rule 73 (expression -> term .)
    PRINT           reduce using rule 73 (expression -> term .)
    BREAK           reduce using rule 73 (expression -> term .)
    NUMBER          reduce using rule 73 (expression -> term .)
    LPAREN          reduce using rule 73 (expression -> term .)
    $end            reduce using rule 73 (expression -> term .)
    RBRACE          reduce using rule 73 (expression -> term .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    MODULO          shift and go to state 56


state 21

    (66) while_statement -> WHILE . LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> WHILE . LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> WHILE . LPAREN FALSE RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 57


state 22

    (79) factor -> LPAREN . expression RPAREN
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 58
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 23

    (69) for_statement -> FOR . LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 60


state 24

    (61) if_statement -> IF . LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> IF . LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> IF . LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> IF . LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> IF . LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LPAREN          shift and go to state 61


state 25

    (5) vartype_statement -> VAR_TYPE . LPAREN ID RPAREN SEMICOL

    LPAREN          shift and go to state 62


state 26

    (37) input_statement -> INT . ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (34) var_statement -> INT . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 63


state 27

    (38) input_statement -> CHAR . ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (32) var_statement -> CHAR . ID EQUALS STRING SEMICOL

    ID              shift and go to state 64


state 28

    (39) input_statement -> FLOATTYPE . ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (33) var_statement -> FLOATTYPE . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 65


state 29

    (6) union_statement -> UNION . LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> UNION . LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> UNION . LPAREN ID COMMA STRING RPAREN SEMICOL

    LPAREN          shift and go to state 66


state 30

    (78) factor -> NUMBER .

    TIMES           reduce using rule 78 (factor -> NUMBER .)
    DIVIDE          reduce using rule 78 (factor -> NUMBER .)
    MODULO          reduce using rule 78 (factor -> NUMBER .)
    SEMICOL         reduce using rule 78 (factor -> NUMBER .)
    PLUS            reduce using rule 78 (factor -> NUMBER .)
    MINUS           reduce using rule 78 (factor -> NUMBER .)
    GTH             reduce using rule 78 (factor -> NUMBER .)
    LTH             reduce using rule 78 (factor -> NUMBER .)
    GTHOREQUAL      reduce using rule 78 (factor -> NUMBER .)
    LTHOREQUAL      reduce using rule 78 (factor -> NUMBER .)
    EQUALEQUAL      reduce using rule 78 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 78 (factor -> NUMBER .)
    RPAREN          reduce using rule 78 (factor -> NUMBER .)
    ID              reduce using rule 78 (factor -> NUMBER .)
    WHILE           reduce using rule 78 (factor -> NUMBER .)
    FOR             reduce using rule 78 (factor -> NUMBER .)
    IF              reduce using rule 78 (factor -> NUMBER .)
    VAR_TYPE        reduce using rule 78 (factor -> NUMBER .)
    INT             reduce using rule 78 (factor -> NUMBER .)
    CHAR            reduce using rule 78 (factor -> NUMBER .)
    FLOATTYPE       reduce using rule 78 (factor -> NUMBER .)
    UNION           reduce using rule 78 (factor -> NUMBER .)
    BOOL            reduce using rule 78 (factor -> NUMBER .)
    PRINT           reduce using rule 78 (factor -> NUMBER .)
    BREAK           reduce using rule 78 (factor -> NUMBER .)
    NUMBER          reduce using rule 78 (factor -> NUMBER .)
    LPAREN          reduce using rule 78 (factor -> NUMBER .)
    $end            reduce using rule 78 (factor -> NUMBER .)
    RBRACE          reduce using rule 78 (factor -> NUMBER .)


state 31

    (35) var_statement -> BOOL . ID EQUALS TRUE SEMICOL
    (36) var_statement -> BOOL . ID EQUALS FALSE SEMICOL

    ID              shift and go to state 67


state 32

    (3) print_statement -> PRINT . LPAREN expression RPAREN SEMICOL
    (4) print_statement -> PRINT . LPAREN STRING RPAREN SEMICOL

    LPAREN          shift and go to state 68


state 33

    (70) break_statement -> BREAK . SEMICOL

    SEMICOL         shift and go to state 69


state 34

    (77) term -> factor .

    TIMES           reduce using rule 77 (term -> factor .)
    DIVIDE          reduce using rule 77 (term -> factor .)
    MODULO          reduce using rule 77 (term -> factor .)
    SEMICOL         reduce using rule 77 (term -> factor .)
    PLUS            reduce using rule 77 (term -> factor .)
    MINUS           reduce using rule 77 (term -> factor .)
    GTH             reduce using rule 77 (term -> factor .)
    LTH             reduce using rule 77 (term -> factor .)
    GTHOREQUAL      reduce using rule 77 (term -> factor .)
    LTHOREQUAL      reduce using rule 77 (term -> factor .)
    EQUALEQUAL      reduce using rule 77 (term -> factor .)
    NOTEQUAL        reduce using rule 77 (term -> factor .)
    RPAREN          reduce using rule 77 (term -> factor .)
    ID              reduce using rule 77 (term -> factor .)
    WHILE           reduce using rule 77 (term -> factor .)
    FOR             reduce using rule 77 (term -> factor .)
    IF              reduce using rule 77 (term -> factor .)
    VAR_TYPE        reduce using rule 77 (term -> factor .)
    INT             reduce using rule 77 (term -> factor .)
    CHAR            reduce using rule 77 (term -> factor .)
    FLOATTYPE       reduce using rule 77 (term -> factor .)
    UNION           reduce using rule 77 (term -> factor .)
    BOOL            reduce using rule 77 (term -> factor .)
    PRINT           reduce using rule 77 (term -> factor .)
    BREAK           reduce using rule 77 (term -> factor .)
    NUMBER          reduce using rule 77 (term -> factor .)
    LPAREN          reduce using rule 77 (term -> factor .)
    $end            reduce using rule 77 (term -> factor .)
    RBRACE          reduce using rule 77 (term -> factor .)


state 35

    (1) statements -> statements statement .

    ID              reduce using rule 1 (statements -> statements statement .)
    WHILE           reduce using rule 1 (statements -> statements statement .)
    FOR             reduce using rule 1 (statements -> statements statement .)
    IF              reduce using rule 1 (statements -> statements statement .)
    VAR_TYPE        reduce using rule 1 (statements -> statements statement .)
    INT             reduce using rule 1 (statements -> statements statement .)
    CHAR            reduce using rule 1 (statements -> statements statement .)
    FLOATTYPE       reduce using rule 1 (statements -> statements statement .)
    UNION           reduce using rule 1 (statements -> statements statement .)
    BOOL            reduce using rule 1 (statements -> statements statement .)
    PRINT           reduce using rule 1 (statements -> statements statement .)
    BREAK           reduce using rule 1 (statements -> statements statement .)
    NUMBER          reduce using rule 1 (statements -> statements statement .)
    LPAREN          reduce using rule 1 (statements -> statements statement .)
    $end            reduce using rule 1 (statements -> statements statement .)
    RBRACE          reduce using rule 1 (statements -> statements statement .)


state 36

    (9) statement -> expression SEMICOL .

    ID              reduce using rule 9 (statement -> expression SEMICOL .)
    WHILE           reduce using rule 9 (statement -> expression SEMICOL .)
    FOR             reduce using rule 9 (statement -> expression SEMICOL .)
    IF              reduce using rule 9 (statement -> expression SEMICOL .)
    VAR_TYPE        reduce using rule 9 (statement -> expression SEMICOL .)
    INT             reduce using rule 9 (statement -> expression SEMICOL .)
    CHAR            reduce using rule 9 (statement -> expression SEMICOL .)
    FLOATTYPE       reduce using rule 9 (statement -> expression SEMICOL .)
    UNION           reduce using rule 9 (statement -> expression SEMICOL .)
    BOOL            reduce using rule 9 (statement -> expression SEMICOL .)
    PRINT           reduce using rule 9 (statement -> expression SEMICOL .)
    BREAK           reduce using rule 9 (statement -> expression SEMICOL .)
    NUMBER          reduce using rule 9 (statement -> expression SEMICOL .)
    LPAREN          reduce using rule 9 (statement -> expression SEMICOL .)
    $end            reduce using rule 9 (statement -> expression SEMICOL .)
    RBRACE          reduce using rule 9 (statement -> expression SEMICOL .)


state 37

    (71) expression -> expression PLUS . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 71
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    term                           shift and go to state 70
    factor                         shift and go to state 34

state 38

    (72) expression -> expression MINUS . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 71
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    term                           shift and go to state 72
    factor                         shift and go to state 34

state 39

    (43) comparison -> expression GTH . expression
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 73
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 40

    (44) comparison -> expression LTH . expression
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 74
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 41

    (45) comparison -> expression GTHOREQUAL . expression
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 75
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 42

    (46) comparison -> expression LTHOREQUAL . expression
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 76
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 43

    (47) comparison -> expression EQUALEQUAL . expression
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 77
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 44

    (48) comparison -> expression NOTEQUAL . expression
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 78
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 45

    (49) compare_id_value -> ID GTH . expression
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 79
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 46

    (50) compare_id_value -> ID LTH . expression
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 80
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 47

    (51) compare_id_value -> ID GTHOREQUAL . expression
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 81
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 48

    (52) compare_id_value -> ID LTHOREQUAL . expression
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 82
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 49

    (53) compare_id_value -> ID EQUALEQUAL . expression
    (55) bool_comparison -> ID EQUALEQUAL . ID
    (56) bool_comparison -> ID EQUALEQUAL . TRUE
    (57) bool_comparison -> ID EQUALEQUAL . FALSE
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 83
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 84
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 50

    (54) compare_id_value -> ID NOTEQUAL . expression
    (58) bool_comparison -> ID NOTEQUAL . ID
    (59) bool_comparison -> ID NOTEQUAL . TRUE
    (60) bool_comparison -> ID NOTEQUAL . FALSE
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 87
    TRUE            shift and go to state 89
    FALSE           shift and go to state 90
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 88
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 51

    (25) var_assign -> ID EQUALS . ID SEMICOL
    (26) var_assign -> ID EQUALS . STRING SEMICOL
    (27) var_assign -> ID EQUALS . NUMBER SEMICOL
    (28) var_assign -> ID EQUALS . TRUE SEMICOL
    (29) var_assign -> ID EQUALS . FALSE SEMICOL

    ID              shift and go to state 91
    STRING          shift and go to state 92
    NUMBER          shift and go to state 93
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95


state 52

    (30) var_inc -> ID PLUS . PLUS SEMICOL

    PLUS            shift and go to state 96


state 53

    (31) var_dec -> ID MINUS . MINUS SEMICOL

    MINUS           shift and go to state 97


state 54

    (74) term -> term TIMES . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 99
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    factor                         shift and go to state 98

state 55

    (75) term -> term DIVIDE . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 99
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    factor                         shift and go to state 100

state 56

    (76) term -> term MODULO . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 99
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    factor                         shift and go to state 101

state 57

    (66) while_statement -> WHILE LPAREN . comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> WHILE LPAREN . TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> WHILE LPAREN . FALSE RPAREN LBRACE statements RBRACE
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    comparison                     shift and go to state 102
    expression                     shift and go to state 105
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 58

    (79) factor -> LPAREN expression . RPAREN
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    RPAREN          shift and go to state 106
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 59

    (40) expression -> ID .
    (41) term -> ID .
    (42) factor -> ID .

  ! reduce/reduce conflict for RPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for VAR_TYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for UNION resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for VAR_TYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for UNION resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 40 (expression -> ID .)
    RPAREN          reduce using rule 40 (expression -> ID .)
    PLUS            reduce using rule 40 (expression -> ID .)
    MINUS           reduce using rule 40 (expression -> ID .)
    ID              reduce using rule 40 (expression -> ID .)
    WHILE           reduce using rule 40 (expression -> ID .)
    FOR             reduce using rule 40 (expression -> ID .)
    IF              reduce using rule 40 (expression -> ID .)
    VAR_TYPE        reduce using rule 40 (expression -> ID .)
    INT             reduce using rule 40 (expression -> ID .)
    CHAR            reduce using rule 40 (expression -> ID .)
    FLOATTYPE       reduce using rule 40 (expression -> ID .)
    UNION           reduce using rule 40 (expression -> ID .)
    BOOL            reduce using rule 40 (expression -> ID .)
    PRINT           reduce using rule 40 (expression -> ID .)
    BREAK           reduce using rule 40 (expression -> ID .)
    NUMBER          reduce using rule 40 (expression -> ID .)
    LPAREN          reduce using rule 40 (expression -> ID .)
    $end            reduce using rule 40 (expression -> ID .)
    SEMICOL         reduce using rule 40 (expression -> ID .)
    RBRACE          reduce using rule 40 (expression -> ID .)
    GTH             reduce using rule 40 (expression -> ID .)
    LTH             reduce using rule 40 (expression -> ID .)
    GTHOREQUAL      reduce using rule 40 (expression -> ID .)
    LTHOREQUAL      reduce using rule 40 (expression -> ID .)
    EQUALEQUAL      reduce using rule 40 (expression -> ID .)
    NOTEQUAL        reduce using rule 40 (expression -> ID .)
    TIMES           reduce using rule 41 (term -> ID .)
    DIVIDE          reduce using rule 41 (term -> ID .)
    MODULO          reduce using rule 41 (term -> ID .)

  ! RPAREN          [ reduce using rule 41 (term -> ID .) ]
  ! PLUS            [ reduce using rule 41 (term -> ID .) ]
  ! MINUS           [ reduce using rule 41 (term -> ID .) ]
  ! ID              [ reduce using rule 41 (term -> ID .) ]
  ! WHILE           [ reduce using rule 41 (term -> ID .) ]
  ! FOR             [ reduce using rule 41 (term -> ID .) ]
  ! IF              [ reduce using rule 41 (term -> ID .) ]
  ! VAR_TYPE        [ reduce using rule 41 (term -> ID .) ]
  ! INT             [ reduce using rule 41 (term -> ID .) ]
  ! CHAR            [ reduce using rule 41 (term -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 41 (term -> ID .) ]
  ! UNION           [ reduce using rule 41 (term -> ID .) ]
  ! BOOL            [ reduce using rule 41 (term -> ID .) ]
  ! PRINT           [ reduce using rule 41 (term -> ID .) ]
  ! BREAK           [ reduce using rule 41 (term -> ID .) ]
  ! NUMBER          [ reduce using rule 41 (term -> ID .) ]
  ! LPAREN          [ reduce using rule 41 (term -> ID .) ]
  ! $end            [ reduce using rule 41 (term -> ID .) ]
  ! SEMICOL         [ reduce using rule 41 (term -> ID .) ]
  ! RBRACE          [ reduce using rule 41 (term -> ID .) ]
  ! GTH             [ reduce using rule 41 (term -> ID .) ]
  ! LTH             [ reduce using rule 41 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 41 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 41 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 41 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 41 (term -> ID .) ]
  ! TIMES           [ reduce using rule 42 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 42 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 42 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 42 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 42 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 42 (factor -> ID .) ]
  ! ID              [ reduce using rule 42 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 42 (factor -> ID .) ]
  ! FOR             [ reduce using rule 42 (factor -> ID .) ]
  ! IF              [ reduce using rule 42 (factor -> ID .) ]
  ! VAR_TYPE        [ reduce using rule 42 (factor -> ID .) ]
  ! INT             [ reduce using rule 42 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 42 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 42 (factor -> ID .) ]
  ! UNION           [ reduce using rule 42 (factor -> ID .) ]
  ! BOOL            [ reduce using rule 42 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 42 (factor -> ID .) ]
  ! BREAK           [ reduce using rule 42 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 42 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 42 (factor -> ID .) ]
  ! $end            [ reduce using rule 42 (factor -> ID .) ]
  ! SEMICOL         [ reduce using rule 42 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 42 (factor -> ID .) ]
  ! GTH             [ reduce using rule 42 (factor -> ID .) ]
  ! LTH             [ reduce using rule 42 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 42 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 42 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 42 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 42 (factor -> ID .) ]


state 60

    (69) for_statement -> FOR LPAREN . var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL

    CHAR            shift and go to state 108
    FLOATTYPE       shift and go to state 109
    INT             shift and go to state 110
    BOOL            shift and go to state 31

    var_statement                  shift and go to state 107

state 61

    (61) if_statement -> IF LPAREN . comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> IF LPAREN . compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> IF LPAREN . bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> IF LPAREN . comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> IF LPAREN . bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 114
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    comparison                     shift and go to state 111
    compare_id_value               shift and go to state 112
    bool_comparison                shift and go to state 113
    expression                     shift and go to state 105
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 62

    (5) vartype_statement -> VAR_TYPE LPAREN . ID RPAREN SEMICOL

    ID              shift and go to state 115


state 63

    (37) input_statement -> INT ID . EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (34) var_statement -> INT ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 116


state 64

    (38) input_statement -> CHAR ID . EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (32) var_statement -> CHAR ID . EQUALS STRING SEMICOL

    EQUALS          shift and go to state 117


state 65

    (39) input_statement -> FLOATTYPE ID . EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (33) var_statement -> FLOATTYPE ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 118


state 66

    (6) union_statement -> UNION LPAREN . STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> UNION LPAREN . STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> UNION LPAREN . ID COMMA STRING RPAREN SEMICOL

    STRING          shift and go to state 119
    ID              shift and go to state 120


state 67

    (35) var_statement -> BOOL ID . EQUALS TRUE SEMICOL
    (36) var_statement -> BOOL ID . EQUALS FALSE SEMICOL

    EQUALS          shift and go to state 121


state 68

    (3) print_statement -> PRINT LPAREN . expression RPAREN SEMICOL
    (4) print_statement -> PRINT LPAREN . STRING RPAREN SEMICOL
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    STRING          shift and go to state 123
    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    expression                     shift and go to state 122
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 69

    (70) break_statement -> BREAK SEMICOL .

    ID              reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    WHILE           reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    FOR             reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    IF              reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    VAR_TYPE        reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    INT             reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    CHAR            reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    FLOATTYPE       reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    UNION           reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    BOOL            reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    PRINT           reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    BREAK           reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    NUMBER          reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    LPAREN          reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    $end            reduce using rule 70 (break_statement -> BREAK SEMICOL .)
    RBRACE          reduce using rule 70 (break_statement -> BREAK SEMICOL .)


state 70

    (71) expression -> expression PLUS term .
    (74) term -> term . TIMES factor
    (75) term -> term . DIVIDE factor
    (76) term -> term . MODULO factor

    SEMICOL         reduce using rule 71 (expression -> expression PLUS term .)
    PLUS            reduce using rule 71 (expression -> expression PLUS term .)
    MINUS           reduce using rule 71 (expression -> expression PLUS term .)
    GTH             reduce using rule 71 (expression -> expression PLUS term .)
    LTH             reduce using rule 71 (expression -> expression PLUS term .)
    GTHOREQUAL      reduce using rule 71 (expression -> expression PLUS term .)
    LTHOREQUAL      reduce using rule 71 (expression -> expression PLUS term .)
    EQUALEQUAL      reduce using rule 71 (expression -> expression PLUS term .)
    NOTEQUAL        reduce using rule 71 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 71 (expression -> expression PLUS term .)
    ID              reduce using rule 71 (expression -> expression PLUS term .)
    WHILE           reduce using rule 71 (expression -> expression PLUS term .)
    FOR             reduce using rule 71 (expression -> expression PLUS term .)
    IF              reduce using rule 71 (expression -> expression PLUS term .)
    VAR_TYPE        reduce using rule 71 (expression -> expression PLUS term .)
    INT             reduce using rule 71 (expression -> expression PLUS term .)
    CHAR            reduce using rule 71 (expression -> expression PLUS term .)
    FLOATTYPE       reduce using rule 71 (expression -> expression PLUS term .)
    UNION           reduce using rule 71 (expression -> expression PLUS term .)
    BOOL            reduce using rule 71 (expression -> expression PLUS term .)
    PRINT           reduce using rule 71 (expression -> expression PLUS term .)
    BREAK           reduce using rule 71 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 71 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 71 (expression -> expression PLUS term .)
    $end            reduce using rule 71 (expression -> expression PLUS term .)
    RBRACE          reduce using rule 71 (expression -> expression PLUS term .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    MODULO          shift and go to state 56


state 71

    (41) term -> ID .
    (42) factor -> ID .

  ! reduce/reduce conflict for TIMES resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for SEMICOL resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for GTH resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for LTH resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for GTHOREQUAL resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for LTHOREQUAL resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for EQUALEQUAL resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for VAR_TYPE resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for UNION resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 41 (term -> ID .)
    TIMES           reduce using rule 41 (term -> ID .)
    DIVIDE          reduce using rule 41 (term -> ID .)
    MODULO          reduce using rule 41 (term -> ID .)
    SEMICOL         reduce using rule 41 (term -> ID .)
    PLUS            reduce using rule 41 (term -> ID .)
    MINUS           reduce using rule 41 (term -> ID .)
    GTH             reduce using rule 41 (term -> ID .)
    LTH             reduce using rule 41 (term -> ID .)
    GTHOREQUAL      reduce using rule 41 (term -> ID .)
    LTHOREQUAL      reduce using rule 41 (term -> ID .)
    EQUALEQUAL      reduce using rule 41 (term -> ID .)
    NOTEQUAL        reduce using rule 41 (term -> ID .)
    RPAREN          reduce using rule 41 (term -> ID .)
    ID              reduce using rule 41 (term -> ID .)
    WHILE           reduce using rule 41 (term -> ID .)
    FOR             reduce using rule 41 (term -> ID .)
    IF              reduce using rule 41 (term -> ID .)
    VAR_TYPE        reduce using rule 41 (term -> ID .)
    INT             reduce using rule 41 (term -> ID .)
    CHAR            reduce using rule 41 (term -> ID .)
    FLOATTYPE       reduce using rule 41 (term -> ID .)
    UNION           reduce using rule 41 (term -> ID .)
    BOOL            reduce using rule 41 (term -> ID .)
    PRINT           reduce using rule 41 (term -> ID .)
    BREAK           reduce using rule 41 (term -> ID .)
    NUMBER          reduce using rule 41 (term -> ID .)
    LPAREN          reduce using rule 41 (term -> ID .)
    $end            reduce using rule 41 (term -> ID .)
    RBRACE          reduce using rule 41 (term -> ID .)

  ! TIMES           [ reduce using rule 42 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 42 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 42 (factor -> ID .) ]
  ! SEMICOL         [ reduce using rule 42 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 42 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 42 (factor -> ID .) ]
  ! GTH             [ reduce using rule 42 (factor -> ID .) ]
  ! LTH             [ reduce using rule 42 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 42 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 42 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 42 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 42 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 42 (factor -> ID .) ]
  ! ID              [ reduce using rule 42 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 42 (factor -> ID .) ]
  ! FOR             [ reduce using rule 42 (factor -> ID .) ]
  ! IF              [ reduce using rule 42 (factor -> ID .) ]
  ! VAR_TYPE        [ reduce using rule 42 (factor -> ID .) ]
  ! INT             [ reduce using rule 42 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 42 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 42 (factor -> ID .) ]
  ! UNION           [ reduce using rule 42 (factor -> ID .) ]
  ! BOOL            [ reduce using rule 42 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 42 (factor -> ID .) ]
  ! BREAK           [ reduce using rule 42 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 42 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 42 (factor -> ID .) ]
  ! $end            [ reduce using rule 42 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 42 (factor -> ID .) ]


state 72

    (72) expression -> expression MINUS term .
    (74) term -> term . TIMES factor
    (75) term -> term . DIVIDE factor
    (76) term -> term . MODULO factor

    SEMICOL         reduce using rule 72 (expression -> expression MINUS term .)
    PLUS            reduce using rule 72 (expression -> expression MINUS term .)
    MINUS           reduce using rule 72 (expression -> expression MINUS term .)
    GTH             reduce using rule 72 (expression -> expression MINUS term .)
    LTH             reduce using rule 72 (expression -> expression MINUS term .)
    GTHOREQUAL      reduce using rule 72 (expression -> expression MINUS term .)
    LTHOREQUAL      reduce using rule 72 (expression -> expression MINUS term .)
    EQUALEQUAL      reduce using rule 72 (expression -> expression MINUS term .)
    NOTEQUAL        reduce using rule 72 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 72 (expression -> expression MINUS term .)
    ID              reduce using rule 72 (expression -> expression MINUS term .)
    WHILE           reduce using rule 72 (expression -> expression MINUS term .)
    FOR             reduce using rule 72 (expression -> expression MINUS term .)
    IF              reduce using rule 72 (expression -> expression MINUS term .)
    VAR_TYPE        reduce using rule 72 (expression -> expression MINUS term .)
    INT             reduce using rule 72 (expression -> expression MINUS term .)
    CHAR            reduce using rule 72 (expression -> expression MINUS term .)
    FLOATTYPE       reduce using rule 72 (expression -> expression MINUS term .)
    UNION           reduce using rule 72 (expression -> expression MINUS term .)
    BOOL            reduce using rule 72 (expression -> expression MINUS term .)
    PRINT           reduce using rule 72 (expression -> expression MINUS term .)
    BREAK           reduce using rule 72 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 72 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 72 (expression -> expression MINUS term .)
    $end            reduce using rule 72 (expression -> expression MINUS term .)
    RBRACE          reduce using rule 72 (expression -> expression MINUS term .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55
    MODULO          shift and go to state 56


state 73

    (43) comparison -> expression GTH expression .
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    ID              reduce using rule 43 (comparison -> expression GTH expression .)
    WHILE           reduce using rule 43 (comparison -> expression GTH expression .)
    FOR             reduce using rule 43 (comparison -> expression GTH expression .)
    IF              reduce using rule 43 (comparison -> expression GTH expression .)
    VAR_TYPE        reduce using rule 43 (comparison -> expression GTH expression .)
    INT             reduce using rule 43 (comparison -> expression GTH expression .)
    CHAR            reduce using rule 43 (comparison -> expression GTH expression .)
    FLOATTYPE       reduce using rule 43 (comparison -> expression GTH expression .)
    UNION           reduce using rule 43 (comparison -> expression GTH expression .)
    BOOL            reduce using rule 43 (comparison -> expression GTH expression .)
    PRINT           reduce using rule 43 (comparison -> expression GTH expression .)
    BREAK           reduce using rule 43 (comparison -> expression GTH expression .)
    NUMBER          reduce using rule 43 (comparison -> expression GTH expression .)
    LPAREN          reduce using rule 43 (comparison -> expression GTH expression .)
    $end            reduce using rule 43 (comparison -> expression GTH expression .)
    RPAREN          reduce using rule 43 (comparison -> expression GTH expression .)
    SEMICOL         reduce using rule 43 (comparison -> expression GTH expression .)
    RBRACE          reduce using rule 43 (comparison -> expression GTH expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 74

    (44) comparison -> expression LTH expression .
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    ID              reduce using rule 44 (comparison -> expression LTH expression .)
    WHILE           reduce using rule 44 (comparison -> expression LTH expression .)
    FOR             reduce using rule 44 (comparison -> expression LTH expression .)
    IF              reduce using rule 44 (comparison -> expression LTH expression .)
    VAR_TYPE        reduce using rule 44 (comparison -> expression LTH expression .)
    INT             reduce using rule 44 (comparison -> expression LTH expression .)
    CHAR            reduce using rule 44 (comparison -> expression LTH expression .)
    FLOATTYPE       reduce using rule 44 (comparison -> expression LTH expression .)
    UNION           reduce using rule 44 (comparison -> expression LTH expression .)
    BOOL            reduce using rule 44 (comparison -> expression LTH expression .)
    PRINT           reduce using rule 44 (comparison -> expression LTH expression .)
    BREAK           reduce using rule 44 (comparison -> expression LTH expression .)
    NUMBER          reduce using rule 44 (comparison -> expression LTH expression .)
    LPAREN          reduce using rule 44 (comparison -> expression LTH expression .)
    $end            reduce using rule 44 (comparison -> expression LTH expression .)
    RPAREN          reduce using rule 44 (comparison -> expression LTH expression .)
    SEMICOL         reduce using rule 44 (comparison -> expression LTH expression .)
    RBRACE          reduce using rule 44 (comparison -> expression LTH expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 75

    (45) comparison -> expression GTHOREQUAL expression .
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    ID              reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    WHILE           reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    FOR             reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    IF              reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    VAR_TYPE        reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    INT             reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    CHAR            reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    UNION           reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    BOOL            reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    PRINT           reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    BREAK           reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    NUMBER          reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    LPAREN          reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    $end            reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    RPAREN          reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    SEMICOL         reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    RBRACE          reduce using rule 45 (comparison -> expression GTHOREQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 76

    (46) comparison -> expression LTHOREQUAL expression .
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    ID              reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    WHILE           reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    FOR             reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    IF              reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    VAR_TYPE        reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    INT             reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    CHAR            reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    UNION           reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    BOOL            reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    PRINT           reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    BREAK           reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    NUMBER          reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    LPAREN          reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    $end            reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    RPAREN          reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    SEMICOL         reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    RBRACE          reduce using rule 46 (comparison -> expression LTHOREQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 77

    (47) comparison -> expression EQUALEQUAL expression .
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    ID              reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    WHILE           reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    FOR             reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    IF              reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    VAR_TYPE        reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    INT             reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    CHAR            reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    FLOATTYPE       reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    UNION           reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    BOOL            reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    PRINT           reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    BREAK           reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    NUMBER          reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    LPAREN          reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    $end            reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    RPAREN          reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    SEMICOL         reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    RBRACE          reduce using rule 47 (comparison -> expression EQUALEQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 78

    (48) comparison -> expression NOTEQUAL expression .
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    ID              reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    FOR             reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    IF              reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    VAR_TYPE        reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    INT             reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    CHAR            reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    FLOATTYPE       reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    UNION           reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    BOOL            reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    BREAK           reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    NUMBER          reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    LPAREN          reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    $end            reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    SEMICOL         reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    RBRACE          reduce using rule 48 (comparison -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 79

    (49) compare_id_value -> ID GTH expression .
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    ID              reduce using rule 49 (compare_id_value -> ID GTH expression .)
    WHILE           reduce using rule 49 (compare_id_value -> ID GTH expression .)
    FOR             reduce using rule 49 (compare_id_value -> ID GTH expression .)
    IF              reduce using rule 49 (compare_id_value -> ID GTH expression .)
    VAR_TYPE        reduce using rule 49 (compare_id_value -> ID GTH expression .)
    INT             reduce using rule 49 (compare_id_value -> ID GTH expression .)
    CHAR            reduce using rule 49 (compare_id_value -> ID GTH expression .)
    FLOATTYPE       reduce using rule 49 (compare_id_value -> ID GTH expression .)
    UNION           reduce using rule 49 (compare_id_value -> ID GTH expression .)
    BOOL            reduce using rule 49 (compare_id_value -> ID GTH expression .)
    PRINT           reduce using rule 49 (compare_id_value -> ID GTH expression .)
    BREAK           reduce using rule 49 (compare_id_value -> ID GTH expression .)
    NUMBER          reduce using rule 49 (compare_id_value -> ID GTH expression .)
    LPAREN          reduce using rule 49 (compare_id_value -> ID GTH expression .)
    $end            reduce using rule 49 (compare_id_value -> ID GTH expression .)
    RPAREN          reduce using rule 49 (compare_id_value -> ID GTH expression .)
    RBRACE          reduce using rule 49 (compare_id_value -> ID GTH expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 80

    (50) compare_id_value -> ID LTH expression .
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    ID              reduce using rule 50 (compare_id_value -> ID LTH expression .)
    WHILE           reduce using rule 50 (compare_id_value -> ID LTH expression .)
    FOR             reduce using rule 50 (compare_id_value -> ID LTH expression .)
    IF              reduce using rule 50 (compare_id_value -> ID LTH expression .)
    VAR_TYPE        reduce using rule 50 (compare_id_value -> ID LTH expression .)
    INT             reduce using rule 50 (compare_id_value -> ID LTH expression .)
    CHAR            reduce using rule 50 (compare_id_value -> ID LTH expression .)
    FLOATTYPE       reduce using rule 50 (compare_id_value -> ID LTH expression .)
    UNION           reduce using rule 50 (compare_id_value -> ID LTH expression .)
    BOOL            reduce using rule 50 (compare_id_value -> ID LTH expression .)
    PRINT           reduce using rule 50 (compare_id_value -> ID LTH expression .)
    BREAK           reduce using rule 50 (compare_id_value -> ID LTH expression .)
    NUMBER          reduce using rule 50 (compare_id_value -> ID LTH expression .)
    LPAREN          reduce using rule 50 (compare_id_value -> ID LTH expression .)
    $end            reduce using rule 50 (compare_id_value -> ID LTH expression .)
    RPAREN          reduce using rule 50 (compare_id_value -> ID LTH expression .)
    RBRACE          reduce using rule 50 (compare_id_value -> ID LTH expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 81

    (51) compare_id_value -> ID GTHOREQUAL expression .
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    ID              reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    WHILE           reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    FOR             reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    IF              reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    VAR_TYPE        reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    INT             reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    CHAR            reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    UNION           reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    BOOL            reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    PRINT           reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    BREAK           reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    NUMBER          reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    LPAREN          reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    $end            reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    RPAREN          reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    RBRACE          reduce using rule 51 (compare_id_value -> ID GTHOREQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 82

    (52) compare_id_value -> ID LTHOREQUAL expression .
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    ID              reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    WHILE           reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    FOR             reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    IF              reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    VAR_TYPE        reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    INT             reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    CHAR            reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    FLOATTYPE       reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    UNION           reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    BOOL            reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    PRINT           reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    BREAK           reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    NUMBER          reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    LPAREN          reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    $end            reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    RPAREN          reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    RBRACE          reduce using rule 52 (compare_id_value -> ID LTHOREQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 83

    (55) bool_comparison -> ID EQUALEQUAL ID .
    (40) expression -> ID .
    (41) term -> ID .
    (42) factor -> ID .

  ! reduce/reduce conflict for ID resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for VAR_TYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for UNION resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for VAR_TYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for UNION resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for VAR_TYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for UNION resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 40 (expression -> ID .)
    PLUS            reduce using rule 40 (expression -> ID .)
    MINUS           reduce using rule 40 (expression -> ID .)
    ID              reduce using rule 40 (expression -> ID .)
    WHILE           reduce using rule 40 (expression -> ID .)
    FOR             reduce using rule 40 (expression -> ID .)
    IF              reduce using rule 40 (expression -> ID .)
    VAR_TYPE        reduce using rule 40 (expression -> ID .)
    INT             reduce using rule 40 (expression -> ID .)
    CHAR            reduce using rule 40 (expression -> ID .)
    FLOATTYPE       reduce using rule 40 (expression -> ID .)
    UNION           reduce using rule 40 (expression -> ID .)
    BOOL            reduce using rule 40 (expression -> ID .)
    PRINT           reduce using rule 40 (expression -> ID .)
    BREAK           reduce using rule 40 (expression -> ID .)
    NUMBER          reduce using rule 40 (expression -> ID .)
    LPAREN          reduce using rule 40 (expression -> ID .)
    $end            reduce using rule 40 (expression -> ID .)
    RPAREN          reduce using rule 40 (expression -> ID .)
    RBRACE          reduce using rule 40 (expression -> ID .)
    TIMES           reduce using rule 41 (term -> ID .)
    DIVIDE          reduce using rule 41 (term -> ID .)
    MODULO          reduce using rule 41 (term -> ID .)

  ! ID              [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! WHILE           [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! FOR             [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! IF              [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! VAR_TYPE        [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! INT             [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! CHAR            [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! FLOATTYPE       [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! UNION           [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! BOOL            [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! PRINT           [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! BREAK           [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! NUMBER          [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! LPAREN          [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! $end            [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! RPAREN          [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! RBRACE          [ reduce using rule 55 (bool_comparison -> ID EQUALEQUAL ID .) ]
  ! PLUS            [ reduce using rule 41 (term -> ID .) ]
  ! MINUS           [ reduce using rule 41 (term -> ID .) ]
  ! ID              [ reduce using rule 41 (term -> ID .) ]
  ! WHILE           [ reduce using rule 41 (term -> ID .) ]
  ! FOR             [ reduce using rule 41 (term -> ID .) ]
  ! IF              [ reduce using rule 41 (term -> ID .) ]
  ! VAR_TYPE        [ reduce using rule 41 (term -> ID .) ]
  ! INT             [ reduce using rule 41 (term -> ID .) ]
  ! CHAR            [ reduce using rule 41 (term -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 41 (term -> ID .) ]
  ! UNION           [ reduce using rule 41 (term -> ID .) ]
  ! BOOL            [ reduce using rule 41 (term -> ID .) ]
  ! PRINT           [ reduce using rule 41 (term -> ID .) ]
  ! BREAK           [ reduce using rule 41 (term -> ID .) ]
  ! NUMBER          [ reduce using rule 41 (term -> ID .) ]
  ! LPAREN          [ reduce using rule 41 (term -> ID .) ]
  ! $end            [ reduce using rule 41 (term -> ID .) ]
  ! RPAREN          [ reduce using rule 41 (term -> ID .) ]
  ! RBRACE          [ reduce using rule 41 (term -> ID .) ]
  ! TIMES           [ reduce using rule 42 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 42 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 42 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 42 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 42 (factor -> ID .) ]
  ! ID              [ reduce using rule 42 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 42 (factor -> ID .) ]
  ! FOR             [ reduce using rule 42 (factor -> ID .) ]
  ! IF              [ reduce using rule 42 (factor -> ID .) ]
  ! VAR_TYPE        [ reduce using rule 42 (factor -> ID .) ]
  ! INT             [ reduce using rule 42 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 42 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 42 (factor -> ID .) ]
  ! UNION           [ reduce using rule 42 (factor -> ID .) ]
  ! BOOL            [ reduce using rule 42 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 42 (factor -> ID .) ]
  ! BREAK           [ reduce using rule 42 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 42 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 42 (factor -> ID .) ]
  ! $end            [ reduce using rule 42 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 42 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 42 (factor -> ID .) ]


state 84

    (53) compare_id_value -> ID EQUALEQUAL expression .
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    ID              reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    WHILE           reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    FOR             reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    IF              reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    VAR_TYPE        reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    INT             reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    CHAR            reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    FLOATTYPE       reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    UNION           reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    BOOL            reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    PRINT           reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    BREAK           reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    NUMBER          reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    LPAREN          reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    $end            reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    RPAREN          reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    RBRACE          reduce using rule 53 (compare_id_value -> ID EQUALEQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 85

    (56) bool_comparison -> ID EQUALEQUAL TRUE .

    ID              reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    WHILE           reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    FOR             reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    IF              reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    VAR_TYPE        reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    INT             reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    CHAR            reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    FLOATTYPE       reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    UNION           reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    BOOL            reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    PRINT           reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    BREAK           reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    NUMBER          reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    LPAREN          reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    $end            reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    RPAREN          reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)
    RBRACE          reduce using rule 56 (bool_comparison -> ID EQUALEQUAL TRUE .)


state 86

    (57) bool_comparison -> ID EQUALEQUAL FALSE .

    ID              reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    WHILE           reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    FOR             reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    IF              reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    VAR_TYPE        reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    INT             reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    CHAR            reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    FLOATTYPE       reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    UNION           reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    BOOL            reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    PRINT           reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    BREAK           reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    NUMBER          reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    LPAREN          reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    $end            reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    RPAREN          reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)
    RBRACE          reduce using rule 57 (bool_comparison -> ID EQUALEQUAL FALSE .)


state 87

    (58) bool_comparison -> ID NOTEQUAL ID .
    (40) expression -> ID .
    (41) term -> ID .
    (42) factor -> ID .

  ! reduce/reduce conflict for ID resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for VAR_TYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for UNION resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for VAR_TYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for UNION resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for VAR_TYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for FLOATTYPE resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for UNION resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for BREAK resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for RBRACE resolved using rule 40 (expression -> ID .)
    PLUS            reduce using rule 40 (expression -> ID .)
    MINUS           reduce using rule 40 (expression -> ID .)
    ID              reduce using rule 40 (expression -> ID .)
    WHILE           reduce using rule 40 (expression -> ID .)
    FOR             reduce using rule 40 (expression -> ID .)
    IF              reduce using rule 40 (expression -> ID .)
    VAR_TYPE        reduce using rule 40 (expression -> ID .)
    INT             reduce using rule 40 (expression -> ID .)
    CHAR            reduce using rule 40 (expression -> ID .)
    FLOATTYPE       reduce using rule 40 (expression -> ID .)
    UNION           reduce using rule 40 (expression -> ID .)
    BOOL            reduce using rule 40 (expression -> ID .)
    PRINT           reduce using rule 40 (expression -> ID .)
    BREAK           reduce using rule 40 (expression -> ID .)
    NUMBER          reduce using rule 40 (expression -> ID .)
    LPAREN          reduce using rule 40 (expression -> ID .)
    $end            reduce using rule 40 (expression -> ID .)
    RPAREN          reduce using rule 40 (expression -> ID .)
    RBRACE          reduce using rule 40 (expression -> ID .)
    TIMES           reduce using rule 41 (term -> ID .)
    DIVIDE          reduce using rule 41 (term -> ID .)
    MODULO          reduce using rule 41 (term -> ID .)

  ! ID              [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! WHILE           [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! FOR             [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! IF              [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! VAR_TYPE        [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! INT             [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! CHAR            [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! FLOATTYPE       [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! UNION           [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! BOOL            [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! PRINT           [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! BREAK           [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! NUMBER          [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! LPAREN          [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! $end            [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! RPAREN          [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! RBRACE          [ reduce using rule 58 (bool_comparison -> ID NOTEQUAL ID .) ]
  ! PLUS            [ reduce using rule 41 (term -> ID .) ]
  ! MINUS           [ reduce using rule 41 (term -> ID .) ]
  ! ID              [ reduce using rule 41 (term -> ID .) ]
  ! WHILE           [ reduce using rule 41 (term -> ID .) ]
  ! FOR             [ reduce using rule 41 (term -> ID .) ]
  ! IF              [ reduce using rule 41 (term -> ID .) ]
  ! VAR_TYPE        [ reduce using rule 41 (term -> ID .) ]
  ! INT             [ reduce using rule 41 (term -> ID .) ]
  ! CHAR            [ reduce using rule 41 (term -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 41 (term -> ID .) ]
  ! UNION           [ reduce using rule 41 (term -> ID .) ]
  ! BOOL            [ reduce using rule 41 (term -> ID .) ]
  ! PRINT           [ reduce using rule 41 (term -> ID .) ]
  ! BREAK           [ reduce using rule 41 (term -> ID .) ]
  ! NUMBER          [ reduce using rule 41 (term -> ID .) ]
  ! LPAREN          [ reduce using rule 41 (term -> ID .) ]
  ! $end            [ reduce using rule 41 (term -> ID .) ]
  ! RPAREN          [ reduce using rule 41 (term -> ID .) ]
  ! RBRACE          [ reduce using rule 41 (term -> ID .) ]
  ! TIMES           [ reduce using rule 42 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 42 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 42 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 42 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 42 (factor -> ID .) ]
  ! ID              [ reduce using rule 42 (factor -> ID .) ]
  ! WHILE           [ reduce using rule 42 (factor -> ID .) ]
  ! FOR             [ reduce using rule 42 (factor -> ID .) ]
  ! IF              [ reduce using rule 42 (factor -> ID .) ]
  ! VAR_TYPE        [ reduce using rule 42 (factor -> ID .) ]
  ! INT             [ reduce using rule 42 (factor -> ID .) ]
  ! CHAR            [ reduce using rule 42 (factor -> ID .) ]
  ! FLOATTYPE       [ reduce using rule 42 (factor -> ID .) ]
  ! UNION           [ reduce using rule 42 (factor -> ID .) ]
  ! BOOL            [ reduce using rule 42 (factor -> ID .) ]
  ! PRINT           [ reduce using rule 42 (factor -> ID .) ]
  ! BREAK           [ reduce using rule 42 (factor -> ID .) ]
  ! NUMBER          [ reduce using rule 42 (factor -> ID .) ]
  ! LPAREN          [ reduce using rule 42 (factor -> ID .) ]
  ! $end            [ reduce using rule 42 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 42 (factor -> ID .) ]
  ! RBRACE          [ reduce using rule 42 (factor -> ID .) ]


state 88

    (54) compare_id_value -> ID NOTEQUAL expression .
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    ID              reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    WHILE           reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    FOR             reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    IF              reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    VAR_TYPE        reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    INT             reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    CHAR            reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    FLOATTYPE       reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    UNION           reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    BOOL            reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    PRINT           reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    BREAK           reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    NUMBER          reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    LPAREN          reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    $end            reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    RPAREN          reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    RBRACE          reduce using rule 54 (compare_id_value -> ID NOTEQUAL expression .)
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 89

    (59) bool_comparison -> ID NOTEQUAL TRUE .

    ID              reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    WHILE           reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    FOR             reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    IF              reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    VAR_TYPE        reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    INT             reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    CHAR            reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    FLOATTYPE       reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    UNION           reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    BOOL            reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    PRINT           reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    BREAK           reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    NUMBER          reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    LPAREN          reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    $end            reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    RPAREN          reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)
    RBRACE          reduce using rule 59 (bool_comparison -> ID NOTEQUAL TRUE .)


state 90

    (60) bool_comparison -> ID NOTEQUAL FALSE .

    ID              reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    WHILE           reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    FOR             reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    IF              reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    VAR_TYPE        reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    INT             reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    CHAR            reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    FLOATTYPE       reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    UNION           reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    BOOL            reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    PRINT           reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    BREAK           reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    NUMBER          reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    LPAREN          reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    $end            reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    RPAREN          reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)
    RBRACE          reduce using rule 60 (bool_comparison -> ID NOTEQUAL FALSE .)


state 91

    (25) var_assign -> ID EQUALS ID . SEMICOL

    SEMICOL         shift and go to state 124


state 92

    (26) var_assign -> ID EQUALS STRING . SEMICOL

    SEMICOL         shift and go to state 125


state 93

    (27) var_assign -> ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 126


state 94

    (28) var_assign -> ID EQUALS TRUE . SEMICOL

    SEMICOL         shift and go to state 127


state 95

    (29) var_assign -> ID EQUALS FALSE . SEMICOL

    SEMICOL         shift and go to state 128


state 96

    (30) var_inc -> ID PLUS PLUS . SEMICOL

    SEMICOL         shift and go to state 129


state 97

    (31) var_dec -> ID MINUS MINUS . SEMICOL

    SEMICOL         shift and go to state 130


state 98

    (74) term -> term TIMES factor .

    TIMES           reduce using rule 74 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 74 (term -> term TIMES factor .)
    MODULO          reduce using rule 74 (term -> term TIMES factor .)
    SEMICOL         reduce using rule 74 (term -> term TIMES factor .)
    PLUS            reduce using rule 74 (term -> term TIMES factor .)
    MINUS           reduce using rule 74 (term -> term TIMES factor .)
    GTH             reduce using rule 74 (term -> term TIMES factor .)
    LTH             reduce using rule 74 (term -> term TIMES factor .)
    GTHOREQUAL      reduce using rule 74 (term -> term TIMES factor .)
    LTHOREQUAL      reduce using rule 74 (term -> term TIMES factor .)
    EQUALEQUAL      reduce using rule 74 (term -> term TIMES factor .)
    NOTEQUAL        reduce using rule 74 (term -> term TIMES factor .)
    RPAREN          reduce using rule 74 (term -> term TIMES factor .)
    ID              reduce using rule 74 (term -> term TIMES factor .)
    WHILE           reduce using rule 74 (term -> term TIMES factor .)
    FOR             reduce using rule 74 (term -> term TIMES factor .)
    IF              reduce using rule 74 (term -> term TIMES factor .)
    VAR_TYPE        reduce using rule 74 (term -> term TIMES factor .)
    INT             reduce using rule 74 (term -> term TIMES factor .)
    CHAR            reduce using rule 74 (term -> term TIMES factor .)
    FLOATTYPE       reduce using rule 74 (term -> term TIMES factor .)
    UNION           reduce using rule 74 (term -> term TIMES factor .)
    BOOL            reduce using rule 74 (term -> term TIMES factor .)
    PRINT           reduce using rule 74 (term -> term TIMES factor .)
    BREAK           reduce using rule 74 (term -> term TIMES factor .)
    NUMBER          reduce using rule 74 (term -> term TIMES factor .)
    LPAREN          reduce using rule 74 (term -> term TIMES factor .)
    $end            reduce using rule 74 (term -> term TIMES factor .)
    RBRACE          reduce using rule 74 (term -> term TIMES factor .)


state 99

    (42) factor -> ID .

    TIMES           reduce using rule 42 (factor -> ID .)
    DIVIDE          reduce using rule 42 (factor -> ID .)
    MODULO          reduce using rule 42 (factor -> ID .)
    SEMICOL         reduce using rule 42 (factor -> ID .)
    PLUS            reduce using rule 42 (factor -> ID .)
    MINUS           reduce using rule 42 (factor -> ID .)
    GTH             reduce using rule 42 (factor -> ID .)
    LTH             reduce using rule 42 (factor -> ID .)
    GTHOREQUAL      reduce using rule 42 (factor -> ID .)
    LTHOREQUAL      reduce using rule 42 (factor -> ID .)
    EQUALEQUAL      reduce using rule 42 (factor -> ID .)
    NOTEQUAL        reduce using rule 42 (factor -> ID .)
    RPAREN          reduce using rule 42 (factor -> ID .)
    ID              reduce using rule 42 (factor -> ID .)
    WHILE           reduce using rule 42 (factor -> ID .)
    FOR             reduce using rule 42 (factor -> ID .)
    IF              reduce using rule 42 (factor -> ID .)
    VAR_TYPE        reduce using rule 42 (factor -> ID .)
    INT             reduce using rule 42 (factor -> ID .)
    CHAR            reduce using rule 42 (factor -> ID .)
    FLOATTYPE       reduce using rule 42 (factor -> ID .)
    UNION           reduce using rule 42 (factor -> ID .)
    BOOL            reduce using rule 42 (factor -> ID .)
    PRINT           reduce using rule 42 (factor -> ID .)
    BREAK           reduce using rule 42 (factor -> ID .)
    NUMBER          reduce using rule 42 (factor -> ID .)
    LPAREN          reduce using rule 42 (factor -> ID .)
    $end            reduce using rule 42 (factor -> ID .)
    RBRACE          reduce using rule 42 (factor -> ID .)


state 100

    (75) term -> term DIVIDE factor .

    TIMES           reduce using rule 75 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 75 (term -> term DIVIDE factor .)
    MODULO          reduce using rule 75 (term -> term DIVIDE factor .)
    SEMICOL         reduce using rule 75 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 75 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 75 (term -> term DIVIDE factor .)
    GTH             reduce using rule 75 (term -> term DIVIDE factor .)
    LTH             reduce using rule 75 (term -> term DIVIDE factor .)
    GTHOREQUAL      reduce using rule 75 (term -> term DIVIDE factor .)
    LTHOREQUAL      reduce using rule 75 (term -> term DIVIDE factor .)
    EQUALEQUAL      reduce using rule 75 (term -> term DIVIDE factor .)
    NOTEQUAL        reduce using rule 75 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 75 (term -> term DIVIDE factor .)
    ID              reduce using rule 75 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 75 (term -> term DIVIDE factor .)
    FOR             reduce using rule 75 (term -> term DIVIDE factor .)
    IF              reduce using rule 75 (term -> term DIVIDE factor .)
    VAR_TYPE        reduce using rule 75 (term -> term DIVIDE factor .)
    INT             reduce using rule 75 (term -> term DIVIDE factor .)
    CHAR            reduce using rule 75 (term -> term DIVIDE factor .)
    FLOATTYPE       reduce using rule 75 (term -> term DIVIDE factor .)
    UNION           reduce using rule 75 (term -> term DIVIDE factor .)
    BOOL            reduce using rule 75 (term -> term DIVIDE factor .)
    PRINT           reduce using rule 75 (term -> term DIVIDE factor .)
    BREAK           reduce using rule 75 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 75 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 75 (term -> term DIVIDE factor .)
    $end            reduce using rule 75 (term -> term DIVIDE factor .)
    RBRACE          reduce using rule 75 (term -> term DIVIDE factor .)


state 101

    (76) term -> term MODULO factor .

    TIMES           reduce using rule 76 (term -> term MODULO factor .)
    DIVIDE          reduce using rule 76 (term -> term MODULO factor .)
    MODULO          reduce using rule 76 (term -> term MODULO factor .)
    SEMICOL         reduce using rule 76 (term -> term MODULO factor .)
    PLUS            reduce using rule 76 (term -> term MODULO factor .)
    MINUS           reduce using rule 76 (term -> term MODULO factor .)
    GTH             reduce using rule 76 (term -> term MODULO factor .)
    LTH             reduce using rule 76 (term -> term MODULO factor .)
    GTHOREQUAL      reduce using rule 76 (term -> term MODULO factor .)
    LTHOREQUAL      reduce using rule 76 (term -> term MODULO factor .)
    EQUALEQUAL      reduce using rule 76 (term -> term MODULO factor .)
    NOTEQUAL        reduce using rule 76 (term -> term MODULO factor .)
    RPAREN          reduce using rule 76 (term -> term MODULO factor .)
    ID              reduce using rule 76 (term -> term MODULO factor .)
    WHILE           reduce using rule 76 (term -> term MODULO factor .)
    FOR             reduce using rule 76 (term -> term MODULO factor .)
    IF              reduce using rule 76 (term -> term MODULO factor .)
    VAR_TYPE        reduce using rule 76 (term -> term MODULO factor .)
    INT             reduce using rule 76 (term -> term MODULO factor .)
    CHAR            reduce using rule 76 (term -> term MODULO factor .)
    FLOATTYPE       reduce using rule 76 (term -> term MODULO factor .)
    UNION           reduce using rule 76 (term -> term MODULO factor .)
    BOOL            reduce using rule 76 (term -> term MODULO factor .)
    PRINT           reduce using rule 76 (term -> term MODULO factor .)
    BREAK           reduce using rule 76 (term -> term MODULO factor .)
    NUMBER          reduce using rule 76 (term -> term MODULO factor .)
    LPAREN          reduce using rule 76 (term -> term MODULO factor .)
    $end            reduce using rule 76 (term -> term MODULO factor .)
    RBRACE          reduce using rule 76 (term -> term MODULO factor .)


state 102

    (66) while_statement -> WHILE LPAREN comparison . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 131


state 103

    (67) while_statement -> WHILE LPAREN TRUE . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 132


state 104

    (68) while_statement -> WHILE LPAREN FALSE . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 133


state 105

    (43) comparison -> expression . GTH expression
    (44) comparison -> expression . LTH expression
    (45) comparison -> expression . GTHOREQUAL expression
    (46) comparison -> expression . LTHOREQUAL expression
    (47) comparison -> expression . EQUALEQUAL expression
    (48) comparison -> expression . NOTEQUAL expression
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    GTH             shift and go to state 39
    LTH             shift and go to state 40
    GTHOREQUAL      shift and go to state 41
    LTHOREQUAL      shift and go to state 42
    EQUALEQUAL      shift and go to state 43
    NOTEQUAL        shift and go to state 44
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 106

    (79) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    SEMICOL         reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    GTH             reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    LTH             reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    GTHOREQUAL      reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    LTHOREQUAL      reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    EQUALEQUAL      reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    VAR_TYPE        reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    INT             reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    CHAR            reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    FLOATTYPE       reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    UNION           reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    BOOL            reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 79 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 79 (factor -> LPAREN expression RPAREN .)


state 107

    (69) for_statement -> FOR LPAREN var_statement . comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 59
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    comparison                     shift and go to state 134
    expression                     shift and go to state 105
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 108

    (32) var_statement -> CHAR . ID EQUALS STRING SEMICOL

    ID              shift and go to state 135


state 109

    (33) var_statement -> FLOATTYPE . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 136


state 110

    (34) var_statement -> INT . ID EQUALS NUMBER SEMICOL

    ID              shift and go to state 137


state 111

    (61) if_statement -> IF LPAREN comparison . RPAREN LBRACE statements RBRACE
    (64) if_statement -> IF LPAREN comparison . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    RPAREN          shift and go to state 138


state 112

    (62) if_statement -> IF LPAREN compare_id_value . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 139


state 113

    (63) if_statement -> IF LPAREN bool_comparison . RPAREN LBRACE statements RBRACE
    (65) if_statement -> IF LPAREN bool_comparison . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    RPAREN          shift and go to state 140


state 114

    (49) compare_id_value -> ID . GTH expression
    (50) compare_id_value -> ID . LTH expression
    (51) compare_id_value -> ID . GTHOREQUAL expression
    (52) compare_id_value -> ID . LTHOREQUAL expression
    (53) compare_id_value -> ID . EQUALEQUAL expression
    (54) compare_id_value -> ID . NOTEQUAL expression
    (55) bool_comparison -> ID . EQUALEQUAL ID
    (56) bool_comparison -> ID . EQUALEQUAL TRUE
    (57) bool_comparison -> ID . EQUALEQUAL FALSE
    (58) bool_comparison -> ID . NOTEQUAL ID
    (59) bool_comparison -> ID . NOTEQUAL TRUE
    (60) bool_comparison -> ID . NOTEQUAL FALSE
    (40) expression -> ID .
    (41) term -> ID .
    (42) factor -> ID .

  ! shift/reduce conflict for GTH resolved as shift
  ! shift/reduce conflict for LTH resolved as shift
  ! shift/reduce conflict for GTHOREQUAL resolved as shift
  ! shift/reduce conflict for LTHOREQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GTH resolved as shift
  ! shift/reduce conflict for LTH resolved as shift
  ! shift/reduce conflict for GTHOREQUAL resolved as shift
  ! shift/reduce conflict for LTHOREQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 41 (term -> ID .)
  ! reduce/reduce conflict for MODULO resolved using rule 41 (term -> ID .)
  ! shift/reduce conflict for GTH resolved as shift
  ! shift/reduce conflict for LTH resolved as shift
  ! shift/reduce conflict for GTHOREQUAL resolved as shift
  ! shift/reduce conflict for LTHOREQUAL resolved as shift
  ! shift/reduce conflict for EQUALEQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 40 (expression -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (expression -> ID .)
    GTH             shift and go to state 45
    LTH             shift and go to state 46
    GTHOREQUAL      shift and go to state 47
    LTHOREQUAL      shift and go to state 48
    EQUALEQUAL      shift and go to state 49
    NOTEQUAL        shift and go to state 50
    PLUS            reduce using rule 40 (expression -> ID .)
    MINUS           reduce using rule 40 (expression -> ID .)
    TIMES           reduce using rule 41 (term -> ID .)
    DIVIDE          reduce using rule 41 (term -> ID .)
    MODULO          reduce using rule 41 (term -> ID .)

  ! GTH             [ reduce using rule 40 (expression -> ID .) ]
  ! LTH             [ reduce using rule 40 (expression -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 40 (expression -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 40 (expression -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 40 (expression -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 40 (expression -> ID .) ]
  ! GTH             [ reduce using rule 41 (term -> ID .) ]
  ! LTH             [ reduce using rule 41 (term -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 41 (term -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 41 (term -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 41 (term -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 41 (term -> ID .) ]
  ! PLUS            [ reduce using rule 41 (term -> ID .) ]
  ! MINUS           [ reduce using rule 41 (term -> ID .) ]
  ! TIMES           [ reduce using rule 42 (factor -> ID .) ]
  ! DIVIDE          [ reduce using rule 42 (factor -> ID .) ]
  ! MODULO          [ reduce using rule 42 (factor -> ID .) ]
  ! GTH             [ reduce using rule 42 (factor -> ID .) ]
  ! LTH             [ reduce using rule 42 (factor -> ID .) ]
  ! GTHOREQUAL      [ reduce using rule 42 (factor -> ID .) ]
  ! LTHOREQUAL      [ reduce using rule 42 (factor -> ID .) ]
  ! EQUALEQUAL      [ reduce using rule 42 (factor -> ID .) ]
  ! NOTEQUAL        [ reduce using rule 42 (factor -> ID .) ]
  ! PLUS            [ reduce using rule 42 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 42 (factor -> ID .) ]


state 115

    (5) vartype_statement -> VAR_TYPE LPAREN ID . RPAREN SEMICOL

    RPAREN          shift and go to state 141


state 116

    (37) input_statement -> INT ID EQUALS . INPUT LPAREN INT RPAREN SEMICOL
    (34) var_statement -> INT ID EQUALS . NUMBER SEMICOL

    INPUT           shift and go to state 142
    NUMBER          shift and go to state 143


state 117

    (38) input_statement -> CHAR ID EQUALS . INPUT LPAREN CHAR RPAREN SEMICOL
    (32) var_statement -> CHAR ID EQUALS . STRING SEMICOL

    INPUT           shift and go to state 144
    STRING          shift and go to state 145


state 118

    (39) input_statement -> FLOATTYPE ID EQUALS . INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (33) var_statement -> FLOATTYPE ID EQUALS . NUMBER SEMICOL

    INPUT           shift and go to state 146
    NUMBER          shift and go to state 147


state 119

    (6) union_statement -> UNION LPAREN STRING . COMMA STRING RPAREN SEMICOL
    (7) union_statement -> UNION LPAREN STRING . COMMA ID RPAREN SEMICOL

    COMMA           shift and go to state 148


state 120

    (8) union_statement -> UNION LPAREN ID . COMMA STRING RPAREN SEMICOL

    COMMA           shift and go to state 149


state 121

    (35) var_statement -> BOOL ID EQUALS . TRUE SEMICOL
    (36) var_statement -> BOOL ID EQUALS . FALSE SEMICOL

    TRUE            shift and go to state 150
    FALSE           shift and go to state 151


state 122

    (3) print_statement -> PRINT LPAREN expression . RPAREN SEMICOL
    (71) expression -> expression . PLUS term
    (72) expression -> expression . MINUS term

    RPAREN          shift and go to state 152
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38


state 123

    (4) print_statement -> PRINT LPAREN STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 153


state 124

    (25) var_assign -> ID EQUALS ID SEMICOL .

    ID              reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    WHILE           reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    FOR             reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    IF              reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    VAR_TYPE        reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    INT             reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    CHAR            reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    FLOATTYPE       reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    UNION           reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    BOOL            reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    PRINT           reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    BREAK           reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    NUMBER          reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    LPAREN          reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    $end            reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)
    RBRACE          reduce using rule 25 (var_assign -> ID EQUALS ID SEMICOL .)


state 125

    (26) var_assign -> ID EQUALS STRING SEMICOL .

    ID              reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    WHILE           reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    FOR             reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    IF              reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    VAR_TYPE        reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    INT             reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    CHAR            reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    FLOATTYPE       reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    UNION           reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    BOOL            reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    PRINT           reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    BREAK           reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    NUMBER          reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    LPAREN          reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    $end            reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)
    RBRACE          reduce using rule 26 (var_assign -> ID EQUALS STRING SEMICOL .)


state 126

    (27) var_assign -> ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    WHILE           reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    FOR             reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    VAR_TYPE        reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    UNION           reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    BOOL            reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    BREAK           reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 27 (var_assign -> ID EQUALS NUMBER SEMICOL .)


state 127

    (28) var_assign -> ID EQUALS TRUE SEMICOL .

    ID              reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    WHILE           reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    FOR             reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    IF              reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    VAR_TYPE        reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    INT             reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    CHAR            reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    FLOATTYPE       reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    UNION           reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    BOOL            reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    PRINT           reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    BREAK           reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    NUMBER          reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    LPAREN          reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    $end            reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)
    RBRACE          reduce using rule 28 (var_assign -> ID EQUALS TRUE SEMICOL .)


state 128

    (29) var_assign -> ID EQUALS FALSE SEMICOL .

    ID              reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    WHILE           reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    FOR             reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    IF              reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    VAR_TYPE        reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    INT             reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    CHAR            reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    FLOATTYPE       reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    UNION           reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    BOOL            reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    PRINT           reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    BREAK           reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    NUMBER          reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    LPAREN          reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    $end            reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)
    RBRACE          reduce using rule 29 (var_assign -> ID EQUALS FALSE SEMICOL .)


state 129

    (30) var_inc -> ID PLUS PLUS SEMICOL .

    ID              reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    WHILE           reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    FOR             reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    IF              reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    VAR_TYPE        reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    INT             reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    CHAR            reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    FLOATTYPE       reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    UNION           reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    BOOL            reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    PRINT           reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    BREAK           reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    NUMBER          reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    LPAREN          reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    $end            reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    RBRACE          reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)
    RPAREN          reduce using rule 30 (var_inc -> ID PLUS PLUS SEMICOL .)


state 130

    (31) var_dec -> ID MINUS MINUS SEMICOL .

    ID              reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    WHILE           reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    FOR             reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    IF              reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    VAR_TYPE        reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    INT             reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    CHAR            reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    FLOATTYPE       reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    UNION           reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    BOOL            reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    PRINT           reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    BREAK           reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    NUMBER          reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    LPAREN          reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    $end            reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)
    RBRACE          reduce using rule 31 (var_dec -> ID MINUS MINUS SEMICOL .)


state 131

    (66) while_statement -> WHILE LPAREN comparison RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 154


state 132

    (67) while_statement -> WHILE LPAREN TRUE RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 155


state 133

    (68) while_statement -> WHILE LPAREN FALSE RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 156


state 134

    (69) for_statement -> FOR LPAREN var_statement comparison . SEMICOL var_inc RPAREN LBRACE statements RBRACE

    SEMICOL         shift and go to state 157


state 135

    (32) var_statement -> CHAR ID . EQUALS STRING SEMICOL

    EQUALS          shift and go to state 158


state 136

    (33) var_statement -> FLOATTYPE ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 159


state 137

    (34) var_statement -> INT ID . EQUALS NUMBER SEMICOL

    EQUALS          shift and go to state 160


state 138

    (61) if_statement -> IF LPAREN comparison RPAREN . LBRACE statements RBRACE
    (64) if_statement -> IF LPAREN comparison RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 161


state 139

    (62) if_statement -> IF LPAREN compare_id_value RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 162


state 140

    (63) if_statement -> IF LPAREN bool_comparison RPAREN . LBRACE statements RBRACE
    (65) if_statement -> IF LPAREN bool_comparison RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 163


state 141

    (5) vartype_statement -> VAR_TYPE LPAREN ID RPAREN . SEMICOL

    SEMICOL         shift and go to state 164


state 142

    (37) input_statement -> INT ID EQUALS INPUT . LPAREN INT RPAREN SEMICOL

    LPAREN          shift and go to state 165


state 143

    (34) var_statement -> INT ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 166


state 144

    (38) input_statement -> CHAR ID EQUALS INPUT . LPAREN CHAR RPAREN SEMICOL

    LPAREN          shift and go to state 167


state 145

    (32) var_statement -> CHAR ID EQUALS STRING . SEMICOL

    SEMICOL         shift and go to state 168


state 146

    (39) input_statement -> FLOATTYPE ID EQUALS INPUT . LPAREN FLOATTYPE RPAREN SEMICOL

    LPAREN          shift and go to state 169


state 147

    (33) var_statement -> FLOATTYPE ID EQUALS NUMBER . SEMICOL

    SEMICOL         shift and go to state 170


state 148

    (6) union_statement -> UNION LPAREN STRING COMMA . STRING RPAREN SEMICOL
    (7) union_statement -> UNION LPAREN STRING COMMA . ID RPAREN SEMICOL

    STRING          shift and go to state 171
    ID              shift and go to state 172


state 149

    (8) union_statement -> UNION LPAREN ID COMMA . STRING RPAREN SEMICOL

    STRING          shift and go to state 173


state 150

    (35) var_statement -> BOOL ID EQUALS TRUE . SEMICOL

    SEMICOL         shift and go to state 174


state 151

    (36) var_statement -> BOOL ID EQUALS FALSE . SEMICOL

    SEMICOL         shift and go to state 175


state 152

    (3) print_statement -> PRINT LPAREN expression RPAREN . SEMICOL

    SEMICOL         shift and go to state 176


state 153

    (4) print_statement -> PRINT LPAREN STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 177


state 154

    (66) while_statement -> WHILE LPAREN comparison RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    comparison                     shift and go to state 10
    statements                     shift and go to state 178
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 155

    (67) while_statement -> WHILE LPAREN TRUE RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    statements                     shift and go to state 179
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    comparison                     shift and go to state 10
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 156

    (68) while_statement -> WHILE LPAREN FALSE RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    statements                     shift and go to state 180
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    comparison                     shift and go to state 10
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 157

    (69) for_statement -> FOR LPAREN var_statement comparison SEMICOL . var_inc RPAREN LBRACE statements RBRACE
    (30) var_inc -> . ID PLUS PLUS SEMICOL

    ID              shift and go to state 182

    var_inc                        shift and go to state 181

state 158

    (32) var_statement -> CHAR ID EQUALS . STRING SEMICOL

    STRING          shift and go to state 145


state 159

    (33) var_statement -> FLOATTYPE ID EQUALS . NUMBER SEMICOL

    NUMBER          shift and go to state 147


state 160

    (34) var_statement -> INT ID EQUALS . NUMBER SEMICOL

    NUMBER          shift and go to state 143


state 161

    (61) if_statement -> IF LPAREN comparison RPAREN LBRACE . statements RBRACE
    (64) if_statement -> IF LPAREN comparison RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    comparison                     shift and go to state 10
    statements                     shift and go to state 183
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 162

    (62) if_statement -> IF LPAREN compare_id_value RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    compare_id_value               shift and go to state 11
    statements                     shift and go to state 184
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    comparison                     shift and go to state 10
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 163

    (63) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE . statements RBRACE
    (65) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    bool_comparison                shift and go to state 12
    statements                     shift and go to state 185
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    comparison                     shift and go to state 10
    compare_id_value               shift and go to state 11
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 164

    (5) vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .

    ID              reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    WHILE           reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    FOR             reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    IF              reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    VAR_TYPE        reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    INT             reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    CHAR            reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    UNION           reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    BOOL            reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    PRINT           reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    BREAK           reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    NUMBER          reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    LPAREN          reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    $end            reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)
    RBRACE          reduce using rule 5 (vartype_statement -> VAR_TYPE LPAREN ID RPAREN SEMICOL .)


state 165

    (37) input_statement -> INT ID EQUALS INPUT LPAREN . INT RPAREN SEMICOL

    INT             shift and go to state 186


state 166

    (34) var_statement -> INT ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    WHILE           reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    FOR             reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    VAR_TYPE        reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    UNION           reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    BOOL            reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    BREAK           reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 34 (var_statement -> INT ID EQUALS NUMBER SEMICOL .)


state 167

    (38) input_statement -> CHAR ID EQUALS INPUT LPAREN . CHAR RPAREN SEMICOL

    CHAR            shift and go to state 187


state 168

    (32) var_statement -> CHAR ID EQUALS STRING SEMICOL .

    ID              reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    WHILE           reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    FOR             reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    IF              reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    VAR_TYPE        reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    INT             reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    CHAR            reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    FLOATTYPE       reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    UNION           reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    BOOL            reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    PRINT           reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    BREAK           reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    NUMBER          reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    LPAREN          reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    $end            reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)
    RBRACE          reduce using rule 32 (var_statement -> CHAR ID EQUALS STRING SEMICOL .)


state 169

    (39) input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN . FLOATTYPE RPAREN SEMICOL

    FLOATTYPE       shift and go to state 188


state 170

    (33) var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .

    ID              reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    WHILE           reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    FOR             reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    IF              reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    VAR_TYPE        reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    INT             reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    CHAR            reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    FLOATTYPE       reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    UNION           reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    BOOL            reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    PRINT           reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    BREAK           reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    NUMBER          reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    LPAREN          reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    $end            reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)
    RBRACE          reduce using rule 33 (var_statement -> FLOATTYPE ID EQUALS NUMBER SEMICOL .)


state 171

    (6) union_statement -> UNION LPAREN STRING COMMA STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 189


state 172

    (7) union_statement -> UNION LPAREN STRING COMMA ID . RPAREN SEMICOL

    RPAREN          shift and go to state 190


state 173

    (8) union_statement -> UNION LPAREN ID COMMA STRING . RPAREN SEMICOL

    RPAREN          shift and go to state 191


state 174

    (35) var_statement -> BOOL ID EQUALS TRUE SEMICOL .

    ID              reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    WHILE           reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    FOR             reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    IF              reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    VAR_TYPE        reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    INT             reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    CHAR            reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    FLOATTYPE       reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    UNION           reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    BOOL            reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    PRINT           reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    BREAK           reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    NUMBER          reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    LPAREN          reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    $end            reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)
    RBRACE          reduce using rule 35 (var_statement -> BOOL ID EQUALS TRUE SEMICOL .)


state 175

    (36) var_statement -> BOOL ID EQUALS FALSE SEMICOL .

    ID              reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    WHILE           reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    FOR             reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    IF              reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    VAR_TYPE        reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    INT             reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    CHAR            reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    FLOATTYPE       reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    UNION           reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    BOOL            reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    PRINT           reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    BREAK           reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    NUMBER          reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    LPAREN          reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    $end            reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)
    RBRACE          reduce using rule 36 (var_statement -> BOOL ID EQUALS FALSE SEMICOL .)


state 176

    (3) print_statement -> PRINT LPAREN expression RPAREN SEMICOL .

    ID              reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    WHILE           reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    FOR             reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    IF              reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    VAR_TYPE        reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    INT             reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    CHAR            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    UNION           reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    BOOL            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    PRINT           reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    BREAK           reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    NUMBER          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    LPAREN          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    $end            reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)
    RBRACE          reduce using rule 3 (print_statement -> PRINT LPAREN expression RPAREN SEMICOL .)


state 177

    (4) print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .

    ID              reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    WHILE           reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    FOR             reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    IF              reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    VAR_TYPE        reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    INT             reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    CHAR            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    UNION           reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    BOOL            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    PRINT           reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    BREAK           reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    NUMBER          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    LPAREN          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    $end            reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)
    RBRACE          reduce using rule 4 (print_statement -> PRINT LPAREN STRING RPAREN SEMICOL .)


state 178

    (66) while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 192
    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    comparison                     shift and go to state 10
    statement                      shift and go to state 35
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 179

    (67) while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 193
    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    statement                      shift and go to state 35
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    comparison                     shift and go to state 10
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 180

    (68) while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 194
    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    statement                      shift and go to state 35
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    comparison                     shift and go to state 10
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 181

    (69) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 195


state 182

    (30) var_inc -> ID . PLUS PLUS SEMICOL

    PLUS            shift and go to state 52


state 183

    (61) if_statement -> IF LPAREN comparison RPAREN LBRACE statements . RBRACE
    (64) if_statement -> IF LPAREN comparison RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (1) statements -> statements . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 196
    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    comparison                     shift and go to state 10
    statement                      shift and go to state 35
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 184

    (62) if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 197
    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    compare_id_value               shift and go to state 11
    statement                      shift and go to state 35
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    comparison                     shift and go to state 10
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 185

    (63) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements . RBRACE
    (65) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE
    (1) statements -> statements . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 198
    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    bool_comparison                shift and go to state 12
    statement                      shift and go to state 35
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    comparison                     shift and go to state 10
    compare_id_value               shift and go to state 11
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 186

    (37) input_statement -> INT ID EQUALS INPUT LPAREN INT . RPAREN SEMICOL

    RPAREN          shift and go to state 199


state 187

    (38) input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR . RPAREN SEMICOL

    RPAREN          shift and go to state 200


state 188

    (39) input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE . RPAREN SEMICOL

    RPAREN          shift and go to state 201


state 189

    (6) union_statement -> UNION LPAREN STRING COMMA STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 202


state 190

    (7) union_statement -> UNION LPAREN STRING COMMA ID RPAREN . SEMICOL

    SEMICOL         shift and go to state 203


state 191

    (8) union_statement -> UNION LPAREN ID COMMA STRING RPAREN . SEMICOL

    SEMICOL         shift and go to state 204


state 192

    (66) while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    VAR_TYPE        reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    UNION           reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 66 (while_statement -> WHILE LPAREN comparison RPAREN LBRACE statements RBRACE .)


state 193

    (67) while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    VAR_TYPE        reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    UNION           reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 67 (while_statement -> WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE .)


state 194

    (68) while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    VAR_TYPE        reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    UNION           reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 68 (while_statement -> WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE .)


state 195

    (69) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 205


state 196

    (61) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .
    (64) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    ID              reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    VAR_TYPE        reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    UNION           reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 61 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 206


state 197

    (62) if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    VAR_TYPE        reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    UNION           reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 62 (if_statement -> IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE .)


state 198

    (63) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .
    (65) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    ID              reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    VAR_TYPE        reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    UNION           reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 63 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 207


state 199

    (37) input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN . SEMICOL

    SEMICOL         shift and go to state 208


state 200

    (38) input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN . SEMICOL

    SEMICOL         shift and go to state 209


state 201

    (39) input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN . SEMICOL

    SEMICOL         shift and go to state 210


state 202

    (6) union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .

    ID              reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    WHILE           reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    FOR             reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    IF              reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    VAR_TYPE        reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    INT             reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    CHAR            reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    UNION           reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    BOOL            reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    PRINT           reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    BREAK           reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    NUMBER          reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    LPAREN          reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    $end            reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)
    RBRACE          reduce using rule 6 (union_statement -> UNION LPAREN STRING COMMA STRING RPAREN SEMICOL .)


state 203

    (7) union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .

    ID              reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    WHILE           reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    FOR             reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    IF              reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    VAR_TYPE        reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    INT             reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    CHAR            reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    UNION           reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    BOOL            reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    PRINT           reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    BREAK           reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    NUMBER          reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    LPAREN          reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    $end            reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)
    RBRACE          reduce using rule 7 (union_statement -> UNION LPAREN STRING COMMA ID RPAREN SEMICOL .)


state 204

    (8) union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .

    ID              reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    WHILE           reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    FOR             reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    IF              reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    VAR_TYPE        reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    INT             reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    CHAR            reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    UNION           reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    BOOL            reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    PRINT           reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    BREAK           reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    NUMBER          reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    LPAREN          reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    $end            reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)
    RBRACE          reduce using rule 8 (union_statement -> UNION LPAREN ID COMMA STRING RPAREN SEMICOL .)


state 205

    (69) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    var_statement                  shift and go to state 13
    comparison                     shift and go to state 10
    var_inc                        shift and go to state 15
    statements                     shift and go to state 211
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_assign                     shift and go to state 14
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 206

    (64) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 212


state 207

    (65) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 213


state 208

    (37) input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .

    ID              reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    WHILE           reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    FOR             reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    IF              reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    VAR_TYPE        reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    INT             reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    CHAR            reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    UNION           reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    BOOL            reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    PRINT           reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    BREAK           reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    NUMBER          reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    LPAREN          reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    $end            reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)
    RBRACE          reduce using rule 37 (input_statement -> INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL .)


state 209

    (38) input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .

    ID              reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    WHILE           reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    FOR             reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    IF              reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    VAR_TYPE        reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    INT             reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    CHAR            reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    UNION           reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    BOOL            reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    PRINT           reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    BREAK           reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    NUMBER          reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    LPAREN          reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    $end            reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)
    RBRACE          reduce using rule 38 (input_statement -> CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL .)


state 210

    (39) input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .

    ID              reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    WHILE           reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    FOR             reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    IF              reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    VAR_TYPE        reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    INT             reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    CHAR            reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    FLOATTYPE       reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    UNION           reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    BOOL            reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    PRINT           reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    BREAK           reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    NUMBER          reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    LPAREN          reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    $end            reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)
    RBRACE          reduce using rule 39 (input_statement -> FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL .)


state 211

    (69) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 214
    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    var_statement                  shift and go to state 13
    comparison                     shift and go to state 10
    var_inc                        shift and go to state 15
    statement                      shift and go to state 35
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_assign                     shift and go to state 14
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 212

    (64) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    comparison                     shift and go to state 10
    statements                     shift and go to state 215
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 213

    (65) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (1) statements -> . statements statement
    (2) statements -> . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    bool_comparison                shift and go to state 12
    statements                     shift and go to state 216
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    comparison                     shift and go to state 10
    compare_id_value               shift and go to state 11
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 214

    (69) for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .

    ID              reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    WHILE           reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    FOR             reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    VAR_TYPE        reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    CHAR            reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    UNION           reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    BOOL            reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    PRINT           reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    BREAK           reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    NUMBER          reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    LPAREN          reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 69 (for_statement -> FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE .)


state 215

    (64) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 217
    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    comparison                     shift and go to state 10
    statement                      shift and go to state 35
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    compare_id_value               shift and go to state 11
    bool_comparison                shift and go to state 12
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 216

    (65) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE
    (1) statements -> statements . statement
    (9) statement -> . expression SEMICOL
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . if_statement
    (13) statement -> . vartype_statement
    (14) statement -> . input_statement
    (15) statement -> . union_statement
    (16) statement -> . comparison
    (17) statement -> . compare_id_value
    (18) statement -> . bool_comparison
    (19) statement -> . var_statement
    (20) statement -> . var_assign
    (21) statement -> . var_inc
    (22) statement -> . var_dec
    (23) statement -> . print_statement
    (24) statement -> . break_statement
    (40) expression -> . ID
    (71) expression -> . expression PLUS term
    (72) expression -> . expression MINUS term
    (73) expression -> . term
    (66) while_statement -> . WHILE LPAREN comparison RPAREN LBRACE statements RBRACE
    (67) while_statement -> . WHILE LPAREN TRUE RPAREN LBRACE statements RBRACE
    (68) while_statement -> . WHILE LPAREN FALSE RPAREN LBRACE statements RBRACE
    (69) for_statement -> . FOR LPAREN var_statement comparison SEMICOL var_inc RPAREN LBRACE statements RBRACE
    (61) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE
    (62) if_statement -> . IF LPAREN compare_id_value RPAREN LBRACE statements RBRACE
    (63) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE
    (64) if_statement -> . IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (65) if_statement -> . IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (5) vartype_statement -> . VAR_TYPE LPAREN ID RPAREN SEMICOL
    (37) input_statement -> . INT ID EQUALS INPUT LPAREN INT RPAREN SEMICOL
    (38) input_statement -> . CHAR ID EQUALS INPUT LPAREN CHAR RPAREN SEMICOL
    (39) input_statement -> . FLOATTYPE ID EQUALS INPUT LPAREN FLOATTYPE RPAREN SEMICOL
    (6) union_statement -> . UNION LPAREN STRING COMMA STRING RPAREN SEMICOL
    (7) union_statement -> . UNION LPAREN STRING COMMA ID RPAREN SEMICOL
    (8) union_statement -> . UNION LPAREN ID COMMA STRING RPAREN SEMICOL
    (43) comparison -> . expression GTH expression
    (44) comparison -> . expression LTH expression
    (45) comparison -> . expression GTHOREQUAL expression
    (46) comparison -> . expression LTHOREQUAL expression
    (47) comparison -> . expression EQUALEQUAL expression
    (48) comparison -> . expression NOTEQUAL expression
    (49) compare_id_value -> . ID GTH expression
    (50) compare_id_value -> . ID LTH expression
    (51) compare_id_value -> . ID GTHOREQUAL expression
    (52) compare_id_value -> . ID LTHOREQUAL expression
    (53) compare_id_value -> . ID EQUALEQUAL expression
    (54) compare_id_value -> . ID NOTEQUAL expression
    (55) bool_comparison -> . ID EQUALEQUAL ID
    (56) bool_comparison -> . ID EQUALEQUAL TRUE
    (57) bool_comparison -> . ID EQUALEQUAL FALSE
    (58) bool_comparison -> . ID NOTEQUAL ID
    (59) bool_comparison -> . ID NOTEQUAL TRUE
    (60) bool_comparison -> . ID NOTEQUAL FALSE
    (32) var_statement -> . CHAR ID EQUALS STRING SEMICOL
    (33) var_statement -> . FLOATTYPE ID EQUALS NUMBER SEMICOL
    (34) var_statement -> . INT ID EQUALS NUMBER SEMICOL
    (35) var_statement -> . BOOL ID EQUALS TRUE SEMICOL
    (36) var_statement -> . BOOL ID EQUALS FALSE SEMICOL
    (25) var_assign -> . ID EQUALS ID SEMICOL
    (26) var_assign -> . ID EQUALS STRING SEMICOL
    (27) var_assign -> . ID EQUALS NUMBER SEMICOL
    (28) var_assign -> . ID EQUALS TRUE SEMICOL
    (29) var_assign -> . ID EQUALS FALSE SEMICOL
    (30) var_inc -> . ID PLUS PLUS SEMICOL
    (31) var_dec -> . ID MINUS MINUS SEMICOL
    (3) print_statement -> . PRINT LPAREN expression RPAREN SEMICOL
    (4) print_statement -> . PRINT LPAREN STRING RPAREN SEMICOL
    (70) break_statement -> . BREAK SEMICOL
    (41) term -> . ID
    (74) term -> . term TIMES factor
    (75) term -> . term DIVIDE factor
    (76) term -> . term MODULO factor
    (77) term -> . factor
    (42) factor -> . ID
    (78) factor -> . NUMBER
    (79) factor -> . LPAREN expression RPAREN

    RBRACE          shift and go to state 218
    ID              shift and go to state 19
    WHILE           shift and go to state 21
    FOR             shift and go to state 23
    IF              shift and go to state 24
    VAR_TYPE        shift and go to state 25
    INT             shift and go to state 26
    CHAR            shift and go to state 27
    FLOATTYPE       shift and go to state 28
    UNION           shift and go to state 29
    BOOL            shift and go to state 31
    PRINT           shift and go to state 32
    BREAK           shift and go to state 33
    NUMBER          shift and go to state 30
    LPAREN          shift and go to state 22

    bool_comparison                shift and go to state 12
    statement                      shift and go to state 35
    expression                     shift and go to state 3
    while_statement                shift and go to state 4
    for_statement                  shift and go to state 5
    if_statement                   shift and go to state 6
    vartype_statement              shift and go to state 7
    input_statement                shift and go to state 8
    union_statement                shift and go to state 9
    comparison                     shift and go to state 10
    compare_id_value               shift and go to state 11
    var_statement                  shift and go to state 13
    var_assign                     shift and go to state 14
    var_inc                        shift and go to state 15
    var_dec                        shift and go to state 16
    print_statement                shift and go to state 17
    break_statement                shift and go to state 18
    term                           shift and go to state 20
    factor                         shift and go to state 34

state 217

    (64) if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    ID              reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    WHILE           reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    VAR_TYPE        reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    INT             reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    CHAR            reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    UNION           reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BOOL            reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    PRINT           reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BREAK           reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NUMBER          reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    LPAREN          reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 64 (if_statement -> IF LPAREN comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)


state 218

    (65) if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    ID              reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    WHILE           reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FOR             reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    VAR_TYPE        reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    INT             reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    CHAR            reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FLOATTYPE       reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    UNION           reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BOOL            reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    PRINT           reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    BREAK           reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    NUMBER          reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    LPAREN          reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    $end            reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 65 (if_statement -> IF LPAREN bool_comparison RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for GTH in state 19 resolved as shift
WARNING: shift/reduce conflict for LTH in state 19 resolved as shift
WARNING: shift/reduce conflict for GTHOREQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for LTHOREQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 19 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 19 resolved as shift
WARNING: shift/reduce conflict for GTH in state 19 resolved as shift
WARNING: shift/reduce conflict for LTH in state 19 resolved as shift
WARNING: shift/reduce conflict for GTHOREQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for LTHOREQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 19 resolved as shift
WARNING: shift/reduce conflict for GTH in state 19 resolved as shift
WARNING: shift/reduce conflict for LTH in state 19 resolved as shift
WARNING: shift/reduce conflict for GTHOREQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for LTHOREQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for GTH in state 114 resolved as shift
WARNING: shift/reduce conflict for LTH in state 114 resolved as shift
WARNING: shift/reduce conflict for GTHOREQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for LTHOREQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for GTH in state 114 resolved as shift
WARNING: shift/reduce conflict for LTH in state 114 resolved as shift
WARNING: shift/reduce conflict for GTHOREQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for LTHOREQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for GTH in state 114 resolved as shift
WARNING: shift/reduce conflict for LTH in state 114 resolved as shift
WARNING: shift/reduce conflict for GTHOREQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for LTHOREQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for EQUALEQUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 114 resolved as shift
WARNING: reduce/reduce conflict in state 19 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 19
WARNING: reduce/reduce conflict in state 19 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 19
WARNING: reduce/reduce conflict in state 19 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 19
WARNING: reduce/reduce conflict in state 59 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 59
WARNING: reduce/reduce conflict in state 59 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 59
WARNING: reduce/reduce conflict in state 59 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 59
WARNING: reduce/reduce conflict in state 71 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 71
WARNING: reduce/reduce conflict in state 83 resolved using rule (expression -> ID)
WARNING: rejected rule (bool_comparison -> ID EQUALEQUAL ID) in state 83
WARNING: reduce/reduce conflict in state 83 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 83
WARNING: reduce/reduce conflict in state 83 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 83
WARNING: reduce/reduce conflict in state 83 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 83
WARNING: reduce/reduce conflict in state 87 resolved using rule (expression -> ID)
WARNING: rejected rule (bool_comparison -> ID NOTEQUAL ID) in state 87
WARNING: reduce/reduce conflict in state 87 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 87
WARNING: reduce/reduce conflict in state 87 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 87
WARNING: reduce/reduce conflict in state 87 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 87
WARNING: reduce/reduce conflict in state 114 resolved using rule (expression -> ID)
WARNING: rejected rule (term -> ID) in state 114
WARNING: reduce/reduce conflict in state 114 resolved using rule (term -> ID)
WARNING: rejected rule (factor -> ID) in state 114
WARNING: reduce/reduce conflict in state 114 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 114
WARNING: Rule (bool_comparison -> ID EQUALEQUAL ID) is never reduced
WARNING: Rule (bool_comparison -> ID NOTEQUAL ID) is never reduced
